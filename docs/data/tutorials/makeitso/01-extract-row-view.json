{"variants":[{"paths":["\/tutorials\/makeitso\/01-extract-row-view"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI’s syntax for describing UIs in a declarative way is quite efficient, and allows you to describe rather complex UIs with relatively little code."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, as you add more and more features to your app, you will notice that the code tends to get more complex. To keep complexity manageable and your code maintainable (and reusable), it is a good idea to identify recurring patterns and extract reusable parts of your code into separate components."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this chapter, you will extract the SwiftUI code for displaying "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":" items in the "},{"type":"codeVoice","code":"ReminderListView"},{"type":"text","text":" into a custom view."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Download the project files to begin building this project, and follow the steps below."}]}],"estimatedTimeInMinutes":15,"title":"Extracting the Reminder Row Into a Separate View","image":"building-todo-ui-intro.png","xcodeRequirement":"Xcode 14","chapter":"Building Reusable UI Components","kind":"hero","backgroundImage":"building-todo-ui-intro.png","projectFiles":"01-extract-row-view.zip"},{"kind":"tasks","tasks":[{"anchor":"Extract-the-view","title":"Extract the view","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this first section, you will use Xcode’s SwiftUI refactoring support to extract the code for displaying "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":" items in the "},{"type":"codeVoice","code":"RemindersListView"},{"type":"text","text":" into a separate SwiftUI view."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open "},{"type":"codeVoice","code":"RemindersListView"},{"type":"text","text":" and make sure the preview is visible."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In case the preview canvas is not visible, press "},{"type":"emphasis","inlineContent":[{"type":"text","text":"CMD+Opt+Enter"}]},{"type":"text","text":" to show it. If the preview is paused, press "},{"type":"emphasis","inlineContent":[{"type":"text","text":"CMD+Shift+P"}]},{"type":"text","text":" to resume it."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The SwiftUI refactorings will only be available when the preview is visible."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":"01-extract-row-view-01-extract-view-01.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"CMD+Click"}]},{"type":"text","text":" on the "},{"type":"codeVoice","code":"HStack"},{"type":"text","text":", then select "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Extract Subview"}]},{"type":"text","text":" from the context menu."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"01-extract-row-view-01-extract-view-02.png"},{"code":"01-extract-row-view-01-extract-view-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Xcode will extract the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"contents"}]},{"type":"text","text":" of the "},{"type":"codeVoice","code":"HStack"},{"type":"text","text":" into a new subview."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-extract-row-view-01-extract-view-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Rename the extracted view to "},{"type":"codeVoice","code":"RemindersListRowView"},{"type":"text","text":"."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In some versions of Xcode, the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Extract to Subview"}]},{"type":"text","text":" refactoring selects the name of the extracted view so you can immediately refactor it. In Xcode 14.3 (14E222b), this doesn’t seem to work, so you will have to manually rename the view."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Implement-parentchild-communiction","title":"Implement parent\/child communiction","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When creating subviews, you often need to share data between the parent and child views. In this particular case, "},{"type":"codeVoice","code":"ReminderListRowView"},{"type":"text","text":" needs access to the "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":" it is supposed to display."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this section, you will set up a parent\/child relationship between "},{"type":"codeVoice","code":"RemindersListView"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RemindersListRowView"},{"type":"text","text":", making use of SwiftUI’s "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":" property wrapper."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After running the refactoring, you will notice that the new view has a couple of compile errors. That’s because the refactoring unfortunately doesn’t take into consideration any dependent properties, and didn’t create a property for the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" on the extracted view."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"01-extract-row-view-01-fix-binding-01.png"},{"code":"01-extract-row-view-01-fix-binding-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To fix the compile errors, introduce a new property "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" on "},{"type":"codeVoice","code":"RemindersListView"},{"type":"text","text":", and mark it as a "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By marking the property as a binding, you indicate that the parent view is the owner of the data. All changes to the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" property will be synced with the parent view, and vice versa."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"01-extract-row-view-01-fix-binding-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" property to "},{"type":"codeVoice","code":"RemindersListRowView"},{"type":"text","text":" changes its initialiser signature (remember, structs in Swift automatically receive a memberwise initialiser (see the "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.swift.org\/swift-book\/documentation\/the-swift-programming-language\/initialization\/#Memberwise-Initializers-for-Structure-Types"},{"type":"text","text":" for more details))."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update the call to "},{"type":"codeVoice","code":"RemindersListRowView"},{"type":"text","text":" inside the "},{"type":"codeVoice","code":"List"},{"type":"text","text":" view, and pass in the current "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"01-extract-row-view-01-fix-binding-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"There is another compile error - inside "},{"type":"codeVoice","code":"onTapGesture"},{"type":"text","text":", "},{"type":"codeVoice","code":"viewModel"},{"type":"text","text":" is not in scope. Since the parent view is the owner, there is no need to pass state changes to the view model inside "},{"type":"codeVoice","code":"RemindersListRowView"},{"type":"text","text":". Instead, you should let the parent view handle that."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Toggle the completion state of the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" directly. Thanks to the "},{"type":"codeVoice","code":"@Binding"},{"type":"text","text":", this change will be visible to the parent view."}]}],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Move-the-new-view-into-its-own-file","title":"Move the new view into its own file","contentSection":[{"kind":"contentAndMedia","content":[],"mediaPosition":"trailing"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Inside the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Features\/Reminders\/Views"}]},{"type":"text","text":" folder, create a new SwiftUI file, naming it "},{"type":"codeVoice","code":"RemindersListRowView.swift"}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure you use the SwiftUI template, as this will create a preview provider for you, so you don’t have to create one yourself."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":"01-extract-row-view-03-move-to-file-01.png"},{"code":"01-extract-row-view-03-move-to-file-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You will see an error message saying “Invalid redeclaration of ‘RemindersListRowView’” - this is expected, and you will fix this in the next step."}]}],"caption":[],"type":"step","runtimePreview":"01-extract-row-view-03-move-to-file-02.png","media":null},{"code":"01-extract-row-view-03-move-to-file-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Cut the code for "},{"type":"codeVoice","code":"RemindersListRowView"},{"type":"text","text":" from "},{"type":"codeVoice","code":"RemindersListView.swift"},{"type":"text","text":", and paste it into the new file, replacing the default implementation generated by the SwiftUI template."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-extract-row-view-03-move-to-file-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update the preview provider and pass in a constant binding to a sample "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Make-the-preview-provider-interactive","title":"Make the preview provider interactive","contentSection":[{"kind":"contentAndMedia","content":[],"mediaPosition":"trailing"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When you try using the new "},{"type":"codeVoice","code":"ReminderListRowView"},{"type":"text","text":" inside Xcode’s preview canvas, you will notice that you cannot toggle its completion state. This is because you passed in a constant binding in the preview provider."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-extract-row-view-04-interactive-previews-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new view named "},{"type":"codeVoice","code":"Container"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"inside"}]},{"type":"text","text":" the preview provider."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"01-extract-row-view-04-interactive-previews-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Move the code for instantiating the "},{"type":"codeVoice","code":"RemindersListRowView"},{"type":"text","text":" into the "},{"type":"codeVoice","code":"body"},{"type":"text","text":" of the "},{"type":"codeVoice","code":"Container"},{"type":"text","text":" view."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then, replace the call for instantiating the "},{"type":"codeVoice","code":"RemindersListRowView"},{"type":"text","text":" inside the static "},{"type":"codeVoice","code":"previews"},{"type":"text","text":" method with a call to instantiate the "},{"type":"codeVoice","code":"Container"},{"type":"text","text":" view."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"01-extract-row-view-04-interactive-previews-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"@State"},{"type":"text","text":" property inside the "},{"type":"codeVoice","code":"Container"},{"type":"text","text":", and use it to store a sample "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the projected property of the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" property to pass a binding to "},{"type":"codeVoice","code":"RemindersListRowView"},{"type":"text","text":"."}]},{"style":"important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Thanks to the "},{"type":"codeVoice","code":"@State"},{"type":"text","text":" property wrapper, this property can be changed from inside "},{"type":"codeVoice","code":"RemindersListRowView"},{"type":"text","text":"."}]}],"type":"aside","name":"Important"}],"type":"step","runtimePreview":null,"media":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can now toggle the completion state of the "},{"type":"codeVoice","code":"ReminderListRowView"},{"type":"text","text":" inside the preview canvas."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Customise-the-preview","title":"Customise the preview","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"One of the benefits of using SwiftUI’s preview is that you can see how your view is going to look like without having to run the application."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"However, it is hard to tell how "},{"type":"codeVoice","code":"RemindersListRowView"},{"type":"text","text":" is going to look like without seeing it inside a "},{"type":"codeVoice","code":"List"},{"type":"text","text":" view. The good news is: you can wrap it inside a "},{"type":"codeVoice","code":"List"},{"type":"text","text":" view in the preview provider."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"01-extract-row-view-05-customise-previews-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Wrap "},{"type":"codeVoice","code":"ReminderListRowView"},{"type":"text","text":" inside a "},{"type":"codeVoice","code":"List"},{"type":"text","text":" to get a better idea of how it’s going to look like when you run the app."}]}],"caption":[],"type":"step","runtimePreview":"01-extract-row-view-05-customise-previews-01.png","media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is a great start!"}]},{"code":"01-extract-row-view-05-customise-previews-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, make sure to use a plain "},{"type":"codeVoice","code":"List"},{"type":"text","text":", and set the screen’s title."}]}],"caption":[],"type":"step","runtimePreview":"01-extract-row-view-05-customise-previews-02.png","media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Adding Firebase to Your Project","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}]}],"identifier":{"url":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Extracting the Reminder Row Into a Separate View","categoryPathComponent":"MakeItSo","role":"project","category":"MakeItSo"},"hierarchy":{"modules":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-a-Simple-UI","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-New-Project"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Reminder-Model-and-Add-some-Test-Data"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Display-a-List-of-Reminders"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Mark-Reminders-as-completed"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Dialog-for-Adding-New-Reminders"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Pass-Data-From-the-Child-View"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Present-the-Add-Reminder-Dialog"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Brush-up-the-UI"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Wrap-Up"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Organise-the-Project-Files"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Create-a-View-Model-and-connect-it-to-the-RemindersListView"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-adding-new-reminders"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-Reusable-UI-Components","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Extract-the-view"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Implement-parentchild-communiction"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Move-the-new-view-into-its-own-file"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Make-the-preview-provider-interactive"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Customise-the-preview"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Connecting-Your-App-to-Firebase","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Create-a-New-Firebase-Project"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Register-Your-App-with-Firebase"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-a-Firebase-Configuration-File"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-Firebase-SDKs-to-Your-App"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Initialize-Firebase-in-Your-App"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Launch-the-App-to-Verify-Setup"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Install-the-Firebase-CLI"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Launch-the-Emulator-and-view-the-Emulator-dashboard"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-your-app-to-the-Emulator-Suite"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Storing-Data-in-the-Cloud","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Intro-to-Cloud-Firestore","sections":[]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Implement-a-repository-for-managing-reminders"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Implement-a-method-for-adding-new-reminders-to-the-repository"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Conform-Reminder-to-Codable"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Connect-the-view-model-to-the-repository"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Wrap-up"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Implement-a-snapshot-listener"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Manage-the-lifecycle-of-the-snapshot-listener"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Connect-the-view-model"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Run-the-app-to-experience-real-time-sync"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Clean-up"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore#Mark-reminders-as-completed"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore#Edit-reminders"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore#Implement-a-method-for-removing-a-single-reminder-from-the-repository"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore#Add-a-method-for-deleting-reminders-to-the-view-model"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore#Implement-a-swipe-action-for-deleteing-reminders-from-the-list-view"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Dependency-Injection","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Add-the-Factory-SDK-to-your-project"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Make-Firebase-available-via-Dependency-Injection"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Use-Dependency-Injection-to-inject-Firebase-into-your-Repository"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Inject-RemindersRepository-into-RemindersListViewModel"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Wrap-up"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Authenticating-Users","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/00-Intro-to-Firebase-Authentication","sections":[]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Download-the-project-files"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Implement-an-AuthenticationService"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Register-AuthenticationService-with-the-Dependency-Injection-container"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Inject-AuthenticationService-into-its-dependants"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Add-a-userId-property-to-the-Reminder-struct"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Update-the-RemindersRepository-to-operate-only-on-the-users-data"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Take-the-app-for-a-spin-and-experience-its-multi-user-capabilities"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Connect-the-app-to-your-Apple-developer-account"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Enable-the-Sign-in-with-Apple-capability-for-your-app"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Implement-Sign-in-with-Apple"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Sign-in-to-Firebase-and-create-a-new-user-account"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Connect-the-UI"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Run-the-app"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Account-Linking","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Account-Linking#Whats-the-problem"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Account-Linking#Implement-Account-Linking"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Account-Linking#Run-the-app"}]}]}],"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo","paths":[["doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo","doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase","doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-Reusable-UI-Components"]]},"references":{"01-extract-row-view-05-customise-previews-02.png":{"alt":null,"type":"image","identifier":"01-extract-row-view-05-customise-previews-02.png","variants":[{"url":"\/images\/01-extract-row-view-05-customise-previews-02@2x.png","traits":["2x","light"]},{"url":"\/images\/01-extract-row-view-05-customise-previews-02~dark@2x.png","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Connecting-Your-App-to-Firebase":{"role":"article","title":"Connecting Your App to Firebase","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Connecting-Your-App-to-Firebase","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/connecting-your-app-to-firebase"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple#Connect-the-app-to-your-Apple-developer-account":{"role":"pseudoSymbol","title":"Connect the app to your Apple developer account","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Connect-the-app-to-your-Apple-developer-account","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-sign-in-with-apple#Connect-the-app-to-your-Apple-developer-account"},"doc://com.example.MakeItSo/tutorials/MakeItSo/05-Deleting-Data-from-Cloud-Firestore":{"role":"project","title":"Deleting data from Cloud Firestore","estimatedTime":"15min","abstract":[{"type":"text","text":"In this chapter of the tutorial, you’ve written code for creating, reading, and updating data in Cloud Firestore. There is one more data operation that is common for many apps: deleting data."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/05-deleting-data-from-cloud-firestore"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Create-a-New-Project":{"role":"pseudoSymbol","title":"Create a New Project","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-New-Project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Create-a-New-Project"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple#Implement-Sign-in-with-Apple":{"role":"pseudoSymbol","title":"Implement Sign in with Apple","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Implement-Sign-in-with-Apple","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-sign-in-with-apple#Implement-Sign-in-with-Apple"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Brush-up-the-UI":{"role":"pseudoSymbol","title":"Brush up the UI","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Brush-up-the-UI","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Brush-up-the-UI"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Extract-Row-View#Extract-the-view":{"role":"pseudoSymbol","title":"Extract the view","abstract":[{"type":"text","text":"SwiftUI’s syntax for describing UIs in a declarative way is quite efficient, and allows you to describe rather complex UIs with relatively little code."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Extract-the-view","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-extract-row-view#Extract-the-view"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-adding-new-reminders":{"role":"pseudoSymbol","title":"Add a method to the View Model for adding new reminders","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-adding-new-reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Add-a-method-to-the-View-Model-for-adding-new-reminders"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Mark-Reminders-as-completed":{"role":"pseudoSymbol","title":"Mark Reminders as completed","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Mark-Reminders-as-completed","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Mark-Reminders-as-completed"},"building-todo-ui-intro.png":{"alt":"","type":"image","identifier":"building-todo-ui-intro.png","variants":[{"url":"\/images\/building-todo-ui-intro@2x.png","traits":["2x","light"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Dependency-Injection-with-Factory#Use-Dependency-Injection-to-inject-Firebase-into-your-Repository":{"role":"pseudoSymbol","title":"Use Dependency Injection to inject Firebase into your Repository","abstract":[{"type":"text","text":"Even though "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MakeItSo"}]},{"type":"text","text":" is a relatively simple app, it consists of quite a few components that need to interact with each other: models, views, view models, repositories, and different backend services like Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Use-Dependency-Injection-to-inject-Firebase-into-your-Repository","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-dependency-injection-with-factory#Use-Dependency-Injection-to-inject-Firebase-into-your-Repository"},"01-extract-row-view-03-move-to-file-03.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListRowView: View {","  @Binding","  var reminder: Reminder","","  var body: some View {","    HStack {","      Image(systemName: reminder.isCompleted","            ? \"largecircle.fill.circle\"","            : \"circle\")","      .imageScale(.large)","      .foregroundColor(.accentColor)","      .onTapGesture {","        reminder.isCompleted.toggle()","      }","      Text(reminder.title)","    }","  }","}","","struct RemindersListRowView_Previews: PreviewProvider {","  static var previews: some View {","    RemindersListRowView(reminder: .constant(Reminder.samples[0]))","  }","}"],"fileName":"RemindersListRowView.swift","identifier":"01-extract-row-view-03-move-to-file-03.swift","type":"file","fileType":"swift","highlights":[{"line":24}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Implement-a-method-for-adding-new-reminders-to-the-repository":{"role":"pseudoSymbol","title":"Implement a method for adding new reminders to the repository","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Implement-a-method-for-adding-new-reminders-to-the-repository","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Implement-a-method-for-adding-new-reminders-to-the-repository"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Connect-the-view-model-to-the-repository":{"role":"pseudoSymbol","title":"Connect the view model to the repository","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Connect-the-view-model-to-the-repository","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Connect-the-view-model-to-the-repository"},"01-extract-row-view-01-fix-binding-03.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListView: View {","  @StateObject","  private var viewModel = RemindersListViewModel()","","  @State","  private var isAddReminderDialogPresented = false","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($viewModel.reminders) { $reminder in","      RemindersListRowView(reminder: $reminder)","    }","    .toolbar {","      \/\/ (code ommitted for brevity)","    }","    \/\/ (code ommitted for brevity)","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      RemindersListView()","        .navigationTitle(\"Reminders\")","    }","  }","}","","struct RemindersListRowView: View {","  @Binding","  var reminder: Reminder","","  var body: some View {","    HStack {","      Image(systemName: reminder.isCompleted","            ? \"largecircle.fill.circle\"","            : \"circle\")","      .imageScale(.large)","      .foregroundColor(.accentColor)","      .onTapGesture {","        reminder.isCompleted.toggle()","      }","      Text(reminder.title)","    }","  }","}"],"fileName":"RemindersListView.swift","identifier":"01-extract-row-view-01-fix-binding-03.swift","type":"file","fileType":"swift","highlights":[{"line":46}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Dependency-Injection-with-Factory#Wrap-up":{"role":"pseudoSymbol","title":"Wrap-up","abstract":[{"type":"text","text":"Even though "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MakeItSo"}]},{"type":"text","text":" is a relatively simple app, it consists of quite a few components that need to interact with each other: models, views, view models, repositories, and different backend services like Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Wrap-up","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-dependency-injection-with-factory#Wrap-up"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Add-a-userId-property-to-the-Reminder-struct":{"role":"pseudoSymbol","title":"Add a userId property to the Reminder struct","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Add-a-userId-property-to-the-Reminder-struct","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Add-a-userId-property-to-the-Reminder-struct"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Launch-the-Emulator-and-view-the-Emulator-dashboard":{"role":"pseudoSymbol","title":"Launch the Emulator and view the Emulator dashboard","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Launch-the-Emulator-and-view-the-Emulator-dashboard","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Launch-the-Emulator-and-view-the-Emulator-dashboard"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite":{"role":"project","title":"Developing locally with the Emulator Suite","estimatedTime":"25min","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Account-Linking#Whats-the-problem":{"role":"pseudoSymbol","title":"What's the problem","abstract":[{"type":"text","text":"Users of your app can now sign in to the app using their Apple ID, but unfortunately, when they do so, any data they might have entered before signing in will disappear. This is probably not what the user expected!"}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Account-Linking#Whats-the-problem","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-account-linking#Whats-the-problem"},"doc://com.example.MakeItSo/tutorials/MakeItSo/05-Deleting-Data-from-Cloud-Firestore#Implement-a-swipe-action-for-deleteing-reminders-from-the-list-view":{"role":"pseudoSymbol","title":"Implement a swipe action for deleteing reminders from the list view","abstract":[{"type":"text","text":"In this chapter of the tutorial, you’ve written code for creating, reading, and updating data in Cloud Firestore. There is one more data operation that is common for many apps: deleting data."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore#Implement-a-swipe-action-for-deleteing-reminders-from-the-list-view","kind":"section","type":"section","url":"\/tutorials\/makeitso\/05-deleting-data-from-cloud-firestore#Implement-a-swipe-action-for-deleteing-reminders-from-the-list-view"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Inject-AuthenticationService-into-its-dependants":{"role":"pseudoSymbol","title":"Inject AuthenticationService into its dependants","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Inject-AuthenticationService-into-its-dependants","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Inject-AuthenticationService-into-its-dependants"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Register-AuthenticationService-with-the-Dependency-Injection-container":{"role":"pseudoSymbol","title":"Register AuthenticationService with the Dependency Injection container","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Register-AuthenticationService-with-the-Dependency-Injection-container","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Register-AuthenticationService-with-the-Dependency-Injection-container"},"https://firebase.google.com/docs/emulator-suite":{"title":"Firebase Local Emulator Suite","titleInlineContent":[{"type":"text","text":"Firebase Local Emulator Suite"}],"type":"link","identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite","url":"https:\/\/firebase.google.com\/docs\/emulator-suite"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Pass-Data-From-the-Child-View":{"role":"pseudoSymbol","title":"Pass Data From the Child View","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Pass-Data-From-the-Child-View","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Pass-Data-From-the-Child-View"},"01-extract-row-view-04-interactive-previews-01.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListRowView: View {","  @Binding","  var reminder: Reminder","","  var body: some View {","    HStack {","      Image(systemName: reminder.isCompleted","            ? \"largecircle.fill.circle\"","            : \"circle\")","      .imageScale(.large)","      .foregroundColor(.accentColor)","      .onTapGesture {","        reminder.isCompleted.toggle()","      }","      Text(reminder.title)","    }","  }","}","","struct RemindersListRowView_Previews: PreviewProvider {","  struct Container: View {","    var body: some View {","    }","  }","","  static var previews: some View {","    RemindersListRowView(reminder: .constant(Reminder.samples[0]))","  }","}"],"fileName":"RemindersListRowView.swift","identifier":"01-extract-row-view-04-interactive-previews-01.swift","type":"file","fileType":"swift","highlights":[{"line":23},{"line":24},{"line":25},{"line":26}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Wrap-Up":{"role":"pseudoSymbol","title":"Wrap Up","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Wrap-Up","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Wrap-Up"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Manage-the-lifecycle-of-the-snapshot-listener":{"role":"pseudoSymbol","title":"Manage the lifecycle of the snapshot listener","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Manage-the-lifecycle-of-the-snapshot-listener","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Manage-the-lifecycle-of-the-snapshot-listener"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM":{"role":"project","title":"Implementing Model, View, ViewModel (MVVM)","estimatedTime":"20min","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-implementing-mvvm"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Extract-Row-View#Make-the-preview-provider-interactive":{"role":"pseudoSymbol","title":"Make the preview provider interactive","abstract":[{"type":"text","text":"SwiftUI’s syntax for describing UIs in a declarative way is quite efficient, and allows you to describe rather complex UIs with relatively little code."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Make-the-preview-provider-interactive","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-extract-row-view#Make-the-preview-provider-interactive"},"doc://com.example.MakeItSo/tutorials/MakeItSo/00-Intro-to-Firebase-Authentication":{"role":"article","title":"Firebase Authenticatioon","estimatedTime":"10min","abstract":[{"type":"text","text":"Firebase Authentication provides backend services, easy-to-use SDKs, and ready-made UI libraries to authenticate users to your app. It supports authentication using passwords, phone numbers, popular federated identity providers like Google, Facebook and Twitter, and more."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/00-Intro-to-Firebase-Authentication","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/00-intro-to-firebase-authentication"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Extract-Row-View#Move-the-new-view-into-its-own-file":{"role":"pseudoSymbol","title":"Move the new view into its own file","abstract":[{"type":"text","text":"SwiftUI’s syntax for describing UIs in a declarative way is quite efficient, and allows you to describe rather complex UIs with relatively little code."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Move-the-new-view-into-its-own-file","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-extract-row-view#Move-the-new-view-into-its-own-file"},"01-extract-row-view-01-extract-view-01.png":{"alt":null,"type":"image","identifier":"01-extract-row-view-01-extract-view-01.png","variants":[{"url":"\/images\/01-extract-row-view-01-extract-view-01@2x.png","traits":["2x","light"]},{"url":"\/images\/01-extract-row-view-01-extract-view-01~dark@2x.png","traits":["2x","dark"]}]},"01-extract-row-view-01-fix-binding-01.png":{"alt":null,"type":"image","identifier":"01-extract-row-view-01-fix-binding-01.png","variants":[{"url":"\/images\/01-extract-row-view-01-fix-binding-01@2x.png","traits":["2x","light"]},{"url":"\/images\/01-extract-row-view-01-fix-binding-01~dark@2x.png","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Take-the-app-for-a-spin-and-experience-its-multi-user-capabilities":{"role":"pseudoSymbol","title":"Take the app for a spin and experience its multi-user capabilities","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Take-the-app-for-a-spin-and-experience-its-multi-user-capabilities","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Take-the-app-for-a-spin-and-experience-its-multi-user-capabilities"},"01-extract-row-view-05-customise-previews-01.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListRowView: View {","  @Binding","  var reminder: Reminder","","  var body: some View {","    HStack {","      Image(systemName: reminder.isCompleted","            ? \"largecircle.fill.circle\"","            : \"circle\")","      .imageScale(.large)","      .foregroundColor(.accentColor)","      .onTapGesture {","        reminder.isCompleted.toggle()","      }","      Text(reminder.title)","    }","  }","}","","struct RemindersListRowView_Previews: PreviewProvider {","  struct Container: View {","    @State var reminder = Reminder.samples[0]","    var body: some View {","      List {","        RemindersListRowView(reminder: $reminder)","      }","    }","  }","","  static var previews: some View {","    Container()","  }","}"],"fileName":"RemindersListRowView.swift","identifier":"01-extract-row-view-05-customise-previews-01.swift","type":"file","fileType":"swift","highlights":[{"line":26},{"line":27},{"line":28}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Dependency-Injection-with-Factory#Inject-RemindersRepository-into-RemindersListViewModel":{"role":"pseudoSymbol","title":"Inject RemindersRepository into RemindersListViewModel","abstract":[{"type":"text","text":"Even though "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MakeItSo"}]},{"type":"text","text":" is a relatively simple app, it consists of quite a few components that need to interact with each other: models, views, view models, repositories, and different backend services like Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Inject-RemindersRepository-into-RemindersListViewModel","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-dependency-injection-with-factory#Inject-RemindersRepository-into-RemindersListViewModel"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Account-Linking#Run-the-app":{"role":"pseudoSymbol","title":"Run the app","abstract":[{"type":"text","text":"Users of your app can now sign in to the app using their Apple ID, but unfortunately, when they do so, any data they might have entered before signing in will disappear. This is probably not what the user expected!"}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Account-Linking#Run-the-app","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-account-linking#Run-the-app"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Implement-a-repository-for-managing-reminders":{"role":"pseudoSymbol","title":"Implement a repository for managing reminders","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Implement-a-repository-for-managing-reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Implement-a-repository-for-managing-reminders"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Conform-Reminder-to-Codable":{"role":"pseudoSymbol","title":"Conform Reminder to Codable","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Conform-Reminder-to-Codable","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Conform-Reminder-to-Codable"},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Building-Reusable-UI-Components":{"role":"article","title":"Building Reusable UI Components","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-Reusable-UI-Components","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/building-reusable-ui-components"},"01-extract-row-view-03-move-to-file-02.png":{"alt":null,"type":"image","identifier":"01-extract-row-view-03-move-to-file-02.png","variants":[{"url":"\/images\/01-extract-row-view-03-move-to-file-02@2x.png","traits":["2x","light"]},{"url":"\/images\/01-extract-row-view-03-move-to-file-02~dark@2x.png","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Account-Linking#Implement-Account-Linking":{"role":"pseudoSymbol","title":"Implement Account Linking","abstract":[{"type":"text","text":"Users of your app can now sign in to the app using their Apple ID, but unfortunately, when they do so, any data they might have entered before signing in will disappear. This is probably not what the user expected!"}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Account-Linking#Implement-Account-Linking","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-account-linking#Implement-Account-Linking"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Dependency-Injection-with-Factory#Add-the-Factory-SDK-to-your-project":{"role":"pseudoSymbol","title":"Add the Factory SDK to your project","abstract":[{"type":"text","text":"Even though "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MakeItSo"}]},{"type":"text","text":" is a relatively simple app, it consists of quite a few components that need to interact with each other: models, views, view models, repositories, and different backend services like Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Add-the-Factory-SDK-to-your-project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-dependency-injection-with-factory#Add-the-Factory-SDK-to-your-project"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Clean-up":{"role":"pseudoSymbol","title":"Clean-up","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Clean-up","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Clean-up"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore":{"role":"project","title":"Storing data in Cloud Firestore","estimatedTime":"25min","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Download-the-project-files":{"role":"pseudoSymbol","title":"Download the project files","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Download-the-project-files","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Download-the-project-files"},"doc://com.example.MakeItSo/tutorials/MakeItSo/04-Updating-Data-in-Cloud-Firestore#Edit-reminders":{"role":"pseudoSymbol","title":"Edit reminders","abstract":[{"type":"text","text":"So far, the app you’re building can help you add an keep track of your todos, but you cannot mark them as completed."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore#Edit-reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/04-updating-data-in-cloud-firestore#Edit-reminders"},"01-extract-row-view-01-extract-view-02.png":{"alt":null,"type":"image","identifier":"01-extract-row-view-01-extract-view-02.png","variants":[{"url":"\/images\/01-extract-row-view-01-extract-view-02@2x.png","traits":["2x","light"]},{"url":"\/images\/01-extract-row-view-01-extract-view-02~dark@2x.png","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Connect-your-app-to-the-Emulator-Suite":{"role":"pseudoSymbol","title":"Connect your app to the Emulator Suite","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-your-app-to-the-Emulator-Suite","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Connect-your-app-to-the-Emulator-Suite"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple#Connect-the-UI":{"role":"pseudoSymbol","title":"Connect the UI","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Connect-the-UI","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-sign-in-with-apple#Connect-the-UI"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Create-a-New-Firebase-Project":{"role":"pseudoSymbol","title":"Create a New Firebase Project ","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Create-a-New-Firebase-Project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Create-a-New-Firebase-Project"},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Dependency-Injection":{"role":"article","title":"Dependency Injection","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Dependency-Injection","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/dependency-injection"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Initialize-Firebase-in-Your-App":{"role":"pseudoSymbol","title":"Initialize Firebase in Your App","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Initialize-Firebase-in-Your-App","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Initialize-Firebase-in-Your-App"},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Storing-Data-in-the-Cloud":{"role":"article","title":"Storing Data in the Cloud","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Storing-Data-in-the-Cloud","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/storing-data-in-the-cloud"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Add-a-Firebase-Configuration-File":{"role":"pseudoSymbol","title":"Add a Firebase Configuration File","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-a-Firebase-Configuration-File","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Add-a-Firebase-Configuration-File"},"01-extract-row-view-01-extract-view-01.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListView: View {","  @StateObject","  private var viewModel = RemindersListViewModel()","","  @State","  private var isAddReminderDialogPresented = false","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($viewModel.reminders) { $reminder in","      ExtractedView()","    }","    .toolbar {","      \/\/ (code ommitted for brevity)","    }","    \/\/ (code ommitted for brevity)","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      RemindersListView()","        .navigationTitle(\"Reminders\")","    }","  }","}","","struct ExtractedView: View {","  var body: some View {","    HStack {","      Image(systemName: reminder.isCompleted","            ? \"largecircle.fill.circle\"","            : \"circle\")","      .imageScale(.large)","      .foregroundColor(.accentColor)","      .onTapGesture {","        viewModel.toggleCompleted(reminder)","      }","      Text(reminder.title)","    }","  }","}"],"fileName":"RemindersListView.swift","identifier":"01-extract-row-view-01-extract-view-01.swift","type":"file","fileType":"swift","highlights":[{"line":16},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Organise-the-Project-Files":{"role":"pseudoSymbol","title":"Organise the Project Files","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Organise-the-Project-Files","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Organise-the-Project-Files"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Intro-to-Cloud-Firestore":{"role":"article","title":"Cloud Firestore","estimatedTime":"5min","abstract":[{"type":"text","text":"Cloud Firestore is Firebase’s NoSQL cloud database for mobile, web, and server development."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Intro-to-Cloud-Firestore","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/01-intro-to-cloud-firestore"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Wrap-up":{"role":"pseudoSymbol","title":"Wrap up","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Wrap-up","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Wrap-up"},"01-extract-row-view-03-move-to-file-01.png":{"alt":null,"type":"image","identifier":"01-extract-row-view-03-move-to-file-01.png","variants":[{"url":"\/images\/01-extract-row-view-03-move-to-file-01@2x.png","traits":["2x","light"]},{"url":"\/images\/01-extract-row-view-03-move-to-file-01~dark@2x.png","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Create-a-Reminder-Model-and-Add-some-Test-Data":{"role":"pseudoSymbol","title":"Create a Reminder Model and Add some Test Data","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Reminder-Model-and-Add-some-Test-Data","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Create-a-Reminder-Model-and-Add-some-Test-Data"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Run-the-app-to-experience-real-time-sync":{"role":"pseudoSymbol","title":"Run the app to experience real-time sync","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Run-the-app-to-experience-real-time-sync","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Run-the-app-to-experience-real-time-sync"},"01-extract-row-view-05-customise-previews-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListRowView: View {","  @Binding","  var reminder: Reminder","","  var body: some View {","    HStack {","      Image(systemName: reminder.isCompleted","            ? \"largecircle.fill.circle\"","            : \"circle\")","      .imageScale(.large)","      .foregroundColor(.accentColor)","      .onTapGesture {","        reminder.isCompleted.toggle()","      }","      Text(reminder.title)","    }","  }","}","","struct RemindersListRowView_Previews: PreviewProvider {","  struct Container: View {","    @State var reminder = Reminder.samples[0]","    var body: some View {","      List {","        RemindersListRowView(reminder: $reminder)","      }","      .listStyle(.plain)","    }","  }","","  static var previews: some View {","    NavigationView {","      Container()","        .navigationTitle(\"Reminders\")","    }","  }","}"],"fileName":"RemindersListRowView.swift","identifier":"01-extract-row-view-05-customise-previews-02.swift","type":"file","fileType":"swift","highlights":[{"line":29},{"line":34},{"line":35},{"line":36},{"line":37}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Dependency-Injection-with-Factory":{"role":"project","title":"Dependency Injection with Factory","estimatedTime":"20min","abstract":[{"type":"text","text":"Even though "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MakeItSo"}]},{"type":"text","text":" is a relatively simple app, it consists of quite a few components that need to interact with each other: models, views, view models, repositories, and different backend services like Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-dependency-injection-with-factory"},"01-extract-row-view-01-extract-view-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListView: View {","  @StateObject","  private var viewModel = RemindersListViewModel()","","  @State","  private var isAddReminderDialogPresented = false","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($viewModel.reminders) { $reminder in","      RemindersListRowView()","    }","    .toolbar {","      \/\/ (code ommitted for brevity)","    }","    \/\/ (code ommitted for brevity)","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      RemindersListView()","        .navigationTitle(\"Reminders\")","    }","  }","}","","struct RemindersListRowView: View {","  var body: some View {","    HStack {","      Image(systemName: reminder.isCompleted","            ? \"largecircle.fill.circle\"","            : \"circle\")","      .imageScale(.large)","      .foregroundColor(.accentColor)","      .onTapGesture {","        viewModel.toggleCompleted(reminder)","      }","      Text(reminder.title)","    }","  }","}"],"fileName":"RemindersListView.swift","identifier":"01-extract-row-view-01-extract-view-02.swift","type":"file","fileType":"swift","highlights":[{"line":16},{"line":34}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite":{"role":"pseudoSymbol","title":"Connect to your Firebase project and enable the Emulator Suite","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Extract-Row-View":{"role":"project","title":"Extracting the Reminder Row Into a Separate View","estimatedTime":"15min","abstract":[{"type":"text","text":"SwiftUI’s syntax for describing UIs in a declarative way is quite efficient, and allows you to describe rather complex UIs with relatively little code."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-extract-row-view"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Implement-an-AuthenticationService":{"role":"pseudoSymbol","title":"Implement an AuthenticationService","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Implement-an-AuthenticationService","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Implement-an-AuthenticationService"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Install-the-Firebase-CLI":{"role":"pseudoSymbol","title":"Install the Firebase CLI","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Install-the-Firebase-CLI","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Install-the-Firebase-CLI"},"01-extract-row-view-05-customise-previews-01.png":{"alt":null,"type":"image","identifier":"01-extract-row-view-05-customise-previews-01.png","variants":[{"url":"\/images\/01-extract-row-view-05-customise-previews-01@2x.png","traits":["2x","light"]},{"url":"\/images\/01-extract-row-view-05-customise-previews-01~dark@2x.png","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Account-Linking":{"role":"project","title":"Account Linking","estimatedTime":"10min","abstract":[{"type":"text","text":"Users of your app can now sign in to the app using their Apple ID, but unfortunately, when they do so, any data they might have entered before signing in will disappear. This is probably not what the user expected!"}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Account-Linking","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/03-account-linking"},"01-extract-row-view-04-interactive-previews-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListRowView: View {","  @Binding","  var reminder: Reminder","","  var body: some View {","    HStack {","      Image(systemName: reminder.isCompleted","            ? \"largecircle.fill.circle\"","            : \"circle\")","      .imageScale(.large)","      .foregroundColor(.accentColor)","      .onTapGesture {","        reminder.isCompleted.toggle()","      }","      Text(reminder.title)","    }","  }","}","","struct RemindersListRowView_Previews: PreviewProvider {","  struct Container: View {","    var body: some View {","      RemindersListRowView(reminder: .constant(Reminder.samples[0]))","    }","  }","","  static var previews: some View {","    Container()","  }","}"],"fileName":"RemindersListRowView.swift","identifier":"01-extract-row-view-04-interactive-previews-02.swift","type":"file","fileType":"swift","highlights":[{"line":25},{"line":30}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/05-Deleting-Data-from-Cloud-Firestore#Add-a-method-for-deleting-reminders-to-the-view-model":{"role":"pseudoSymbol","title":"Add a method for deleting reminders to the view model","abstract":[{"type":"text","text":"In this chapter of the tutorial, you’ve written code for creating, reading, and updating data in Cloud Firestore. There is one more data operation that is common for many apps: deleting data."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore#Add-a-method-for-deleting-reminders-to-the-view-model","kind":"section","type":"section","url":"\/tutorials\/makeitso\/05-deleting-data-from-cloud-firestore#Add-a-method-for-deleting-reminders-to-the-view-model"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Extract-Row-View#Customise-the-preview":{"role":"pseudoSymbol","title":"Customise the preview","abstract":[{"type":"text","text":"SwiftUI’s syntax for describing UIs in a declarative way is quite efficient, and allows you to describe rather complex UIs with relatively little code."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Customise-the-preview","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-extract-row-view#Customise-the-preview"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time":{"role":"project","title":"Retrieving data from Cloud Firestore in real-time","estimatedTime":"25min","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time"},"doc://com.example.MakeItSo/tutorials/MakeItSo/04-Updating-Data-in-Cloud-Firestore":{"role":"project","title":"Updating data in Cloud Firestore","estimatedTime":"35min","abstract":[{"type":"text","text":"So far, the app you’re building can help you add an keep track of your todos, but you cannot mark them as completed."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/04-updating-data-in-cloud-firestore"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Add-Firebase-SDKs-to-Your-App":{"role":"pseudoSymbol","title":"Add Firebase SDKs to Your App","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-Firebase-SDKs-to-Your-App","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Add-Firebase-SDKs-to-Your-App"},"01-extract-row-view-03-move-to-file-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListRowView: View {","  @Binding","  var reminder: Reminder","","  var body: some View {","    HStack {","      Image(systemName: reminder.isCompleted","            ? \"largecircle.fill.circle\"","            : \"circle\")","      .imageScale(.large)","      .foregroundColor(.accentColor)","      .onTapGesture {","        reminder.isCompleted.toggle()","      }","      Text(reminder.title)","    }","  }","}","","struct RemindersListRowView_Previews: PreviewProvider {","  static var previews: some View {","    RemindersListRowView()","  }","}"],"fileName":"RemindersListRowView.swift","identifier":"01-extract-row-view-03-move-to-file-02.swift","type":"file","fileType":"swift","highlights":[{"line":3},{"line":4},{"line":5},{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Authenticating-Users":{"role":"article","title":"Authenticating Users","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Authenticating-Users","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/authenticating-users"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple#Sign-in-to-Firebase-and-create-a-new-user-account":{"role":"pseudoSymbol","title":"Sign in to Firebase and create a new user account","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Sign-in-to-Firebase-and-create-a-new-user-account","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-sign-in-with-apple#Sign-in-to-Firebase-and-create-a-new-user-account"},"https://docs.swift.org/swift-book/documentation/the-swift-programming-language/initialization/#Memberwise-Initializers-for-Structure-Types":{"title":"Swift language documentation","titleInlineContent":[{"type":"text","text":"Swift language documentation"}],"type":"link","identifier":"https:\/\/docs.swift.org\/swift-book\/documentation\/the-swift-programming-language\/initialization\/#Memberwise-Initializers-for-Structure-Types","url":"https:\/\/docs.swift.org\/swift-book\/documentation\/the-swift-programming-language\/initialization\/#Memberwise-Initializers-for-Structure-Types"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Extract-Row-View#Implement-parentchild-communiction":{"role":"pseudoSymbol","title":"Implement parent\/child communiction","abstract":[{"type":"text","text":"SwiftUI’s syntax for describing UIs in a declarative way is quite efficient, and allows you to describe rather complex UIs with relatively little code."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Implement-parentchild-communiction","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-extract-row-view#Implement-parentchild-communiction"},"01-extract-row-view-03-move-to-file-01.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListRowView: View {","  var body: some View {","    Text(\"Hello, World!\")","  }","}","","struct RemindersListRowView_Previews: PreviewProvider {","  static var previews: some View {","    RemindersListRowView()","  }","}"],"fileName":"RemindersListRowView.swift","identifier":"01-extract-row-view-03-move-to-file-01.swift","type":"file","fileType":"swift","highlights":[]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple#Enable-the-Sign-in-with-Apple-capability-for-your-app":{"role":"pseudoSymbol","title":"Enable the Sign in with Apple capability for your app","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Enable-the-Sign-in-with-Apple-capability-for-your-app","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-sign-in-with-apple#Enable-the-Sign-in-with-Apple-capability-for-your-app"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Launch-the-App-to-Verify-Setup":{"role":"pseudoSymbol","title":"Launch the App to Verify Setup","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Launch-the-App-to-Verify-Setup","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Launch-the-App-to-Verify-Setup"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Update-the-RemindersRepository-to-operate-only-on-the-users-data":{"role":"pseudoSymbol","title":"Update the RemindersRepository to operate only on the user's data","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Update-the-RemindersRepository-to-operate-only-on-the-users-data","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Update-the-RemindersRepository-to-operate-only-on-the-users-data"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Present-the-Add-Reminder-Dialog":{"role":"pseudoSymbol","title":"Present the Add Reminder Dialog","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Present-the-Add-Reminder-Dialog","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Present-the-Add-Reminder-Dialog"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Create-a-Dialog-for-Adding-New-Reminders":{"role":"pseudoSymbol","title":"Create a Dialog for Adding New Reminders","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Dialog-for-Adding-New-Reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Create-a-Dialog-for-Adding-New-Reminders"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project":{"role":"pseudoSymbol","title":"Use launch arguments to switch between the Emulator and your Firebase project","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Implement-a-snapshot-listener":{"role":"pseudoSymbol","title":"Implement a snapshot listener","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Implement-a-snapshot-listener","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Implement-a-snapshot-listener"},"Xcode 14":{"title":"Xcode 14","type":"xcodeRequirement","identifier":"Xcode 14","url":"https:\/\/xcodereleases.com\/"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple":{"role":"project","title":"Sign in with Apple and Firebase Authentication","estimatedTime":"25min","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-sign-in-with-apple"},"doc://com.example.MakeItSo/tutorials/MakeItSo/05-Deleting-Data-from-Cloud-Firestore#Implement-a-method-for-removing-a-single-reminder-from-the-repository":{"role":"pseudoSymbol","title":"Implement a method for removing a single reminder from the repository","abstract":[{"type":"text","text":"In this chapter of the tutorial, you’ve written code for creating, reading, and updating data in Cloud Firestore. There is one more data operation that is common for many apps: deleting data."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore#Implement-a-method-for-removing-a-single-reminder-from-the-repository","kind":"section","type":"section","url":"\/tutorials\/makeitso\/05-deleting-data-from-cloud-firestore#Implement-a-method-for-removing-a-single-reminder-from-the-repository"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple#Run-the-app":{"role":"pseudoSymbol","title":"Run the app","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Run-the-app","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-sign-in-with-apple#Run-the-app"},"01-extract-row-view-04-interactive-previews-03.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListRowView: View {","  @Binding","  var reminder: Reminder","","  var body: some View {","    HStack {","      Image(systemName: reminder.isCompleted","            ? \"largecircle.fill.circle\"","            : \"circle\")","      .imageScale(.large)","      .foregroundColor(.accentColor)","      .onTapGesture {","        reminder.isCompleted.toggle()","      }","      Text(reminder.title)","    }","  }","}","","struct RemindersListRowView_Previews: PreviewProvider {","  struct Container: View {","    @State var reminder = Reminder.samples[0]","    var body: some View {","      RemindersListRowView(reminder: $reminder)","    }","  }","","  static var previews: some View {","    Container()","  }","}"],"fileName":"RemindersListRowView.swift","identifier":"01-extract-row-view-04-interactive-previews-03.swift","type":"file","fileType":"swift","highlights":[{"line":24},{"line":26}]},"01-extract-row-view-01-fix-binding-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListView: View {","  @StateObject","  private var viewModel = RemindersListViewModel()","","  @State","  private var isAddReminderDialogPresented = false","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($viewModel.reminders) { $reminder in","      RemindersListRowView(reminder: $reminder)","    }","    .toolbar {","      \/\/ (code ommitted for brevity)","    }","    \/\/ (code ommitted for brevity)","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      RemindersListView()","        .navigationTitle(\"Reminders\")","    }","  }","}","","struct RemindersListRowView: View {","  @Binding","  var reminder: Reminder","","  var body: some View {","    HStack {","      Image(systemName: reminder.isCompleted","            ? \"largecircle.fill.circle\"","            : \"circle\")","      .imageScale(.large)","      .foregroundColor(.accentColor)","      .onTapGesture {","        viewModel.toggleCompleted(reminder)","      }","      Text(reminder.title)","    }","  }","}"],"fileName":"RemindersListView.swift","identifier":"01-extract-row-view-01-fix-binding-02.swift","type":"file","fileType":"swift","highlights":[{"line":16}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder":{"role":"pseudoSymbol","title":"Add a method to the View Model for toggling the completion state of a reminder","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Create-a-View-Model-and-connect-it-to-the-RemindersListView":{"role":"pseudoSymbol","title":"Create a View Model and connect it to the RemindersListView","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Create-a-View-Model-and-connect-it-to-the-RemindersListView","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Create-a-View-Model-and-connect-it-to-the-RemindersListView"},"doc://com.example.MakeItSo/tutorials/MakeItSo":{"role":"overview","title":"SwiftUI and Firebase","abstract":[{"type":"text","text":"Learn how to use Firebase in SwiftUI apps by building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a replica of Apple’s Reminders app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo","kind":"overview","type":"topic","url":"\/tutorials\/makeitso"},"01-extract-row-view.zip":{"checksum":"ef6f6daaf815700d61b686b2946834bf98803e114c0bd1bf1c35596df2bbf6751c7b033ef1a9450ca09aa05361393b4dd8f82cf3c5e17b26391a7cca0dbe9da8","type":"download","identifier":"01-extract-row-view.zip","url":"\/downloads\/01-extract-row-view.zip"},"01-extract-row-view-01-fix-binding-01.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListView: View {","  @StateObject","  private var viewModel = RemindersListViewModel()","","  @State","  private var isAddReminderDialogPresented = false","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($viewModel.reminders) { $reminder in","      RemindersListRowView()","    }","    .toolbar {","      \/\/ (code ommitted for brevity)","    }","    \/\/ (code ommitted for brevity)","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      RemindersListView()","        .navigationTitle(\"Reminders\")","    }","  }","}","","struct RemindersListRowView: View {","  @Binding","  var reminder: Reminder","","  var body: some View {","    HStack {","      Image(systemName: reminder.isCompleted","            ? \"largecircle.fill.circle\"","            : \"circle\")","      .imageScale(.large)","      .foregroundColor(.accentColor)","      .onTapGesture {","        viewModel.toggleCompleted(reminder)","      }","      Text(reminder.title)","    }","  }","}"],"fileName":"RemindersListView.swift","identifier":"01-extract-row-view-01-fix-binding-01.swift","type":"file","fileType":"swift","highlights":[{"line":35},{"line":36},{"line":37}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Display-a-List-of-Reminders":{"role":"pseudoSymbol","title":"Display a List of Reminders","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Display-a-List-of-Reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Display-a-List-of-Reminders"},"doc://com.example.MakeItSo/tutorials/MakeItSo/04-Updating-Data-in-Cloud-Firestore#Mark-reminders-as-completed":{"role":"pseudoSymbol","title":"Mark reminders as completed","abstract":[{"type":"text","text":"So far, the app you’re building can help you add an keep track of your todos, but you cannot mark them as completed."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore#Mark-reminders-as-completed","kind":"section","type":"section","url":"\/tutorials\/makeitso\/04-updating-data-in-cloud-firestore#Mark-reminders-as-completed"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Register-Your-App-with-Firebase":{"role":"pseudoSymbol","title":"Register Your App with Firebase","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Register-Your-App-with-Firebase","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Register-Your-App-with-Firebase"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Dependency-Injection-with-Factory#Make-Firebase-available-via-Dependency-Injection":{"role":"pseudoSymbol","title":"Make Firebase available via Dependency Injection","abstract":[{"type":"text","text":"Even though "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MakeItSo"}]},{"type":"text","text":" is a relatively simple app, it consists of quite a few components that need to interact with each other: models, views, view models, repositories, and different backend services like Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Make-Firebase-available-via-Dependency-Injection","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-dependency-injection-with-factory#Make-Firebase-available-via-Dependency-Injection"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Connect-the-view-model":{"role":"pseudoSymbol","title":"Connect the view model","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Connect-the-view-model","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Connect-the-view-model"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project":{"role":"project","title":"Adding Firebase to Your Project","estimatedTime":"25min","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth":{"role":"project","title":"Implementing guest users with Firebase Anonymous Authentication","estimatedTime":"35min","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-anonymous-auth"},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Building-a-Simple-UI":{"role":"article","title":"Building a Simple UI","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-a-Simple-UI","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/building-a-simple-ui"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI":{"role":"project","title":"Building a Simple Todo List UI","estimatedTime":"25min","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui"}}}