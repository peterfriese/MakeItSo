{"variants":[{"paths":["\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}]}],"estimatedTimeInMinutes":25,"title":"Building a Simple Todo List UI","image":"building-todo-ui-intro.png","xcodeRequirement":"Xcode 14","chapter":"Building a Simple UI","kind":"hero","backgroundImage":"building-todo-ui-intro.png","projectFiles":"01-building-a-simple-todo-list-ui.zip"},{"kind":"tasks","tasks":[{"anchor":"Create-a-New-Project","title":"Create a New Project","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a new Xcode project that uses SwiftUI."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To preview and interact with views from the canvas in Xcode, and to use all the latest features described throughout the tutorials, ensure your Mac is running macOS Monterey or later."}]}],"mediaPosition":"trailing","media":"make-it-so-intro.mov"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open Xcode and either click "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Create a new Xcode project"}]},{"type":"text","text":" in Xcode’s startup window, or choose "},{"type":"emphasis","inlineContent":[{"type":"text","text":"File > New > Project"}]},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"building-todo-ui-xcode-new-project.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the template selector, select "},{"type":"emphasis","inlineContent":[{"type":"text","text":"iOS"}]},{"type":"text","text":" as the platform, select the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"App"}]},{"type":"text","text":" template, and then click "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Next"}]},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"building-todo-ui-xcode-app-template.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select "},{"type":"emphasis","inlineContent":[{"type":"text","text":"SwiftUI"}]},{"type":"text","text":" from the Interface drop-down menu and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Swift"}]},{"type":"text","text":" from the language drop-down menu, then click "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Next"}]},{"type":"text","text":". Choose a location to save the "},{"type":"codeVoice","code":"MakeItSo"},{"type":"text","text":" project on your Mac."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"building-todo-ui-xcode-project-name.png"}]},{"anchor":"Create-a-Reminder-Model-and-Add-some-Test-Data","title":"Create a Reminder Model and Add some Test Data","contentSection":[{"kind":"contentAndMedia","content":[],"mediaPosition":"leading","media":"sectionintros.001.png"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Choose "},{"type":"emphasis","inlineContent":[{"type":"text","text":"File > New > File"}]},{"type":"text","text":" to create a new Swift file in your project and name it "},{"type":"codeVoice","code":"Reminder.swift"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"building-todo-ui-new-swift-file.png"},{"code":"building-todo-ui-reminder-01-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Define the data model for a reminder."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"building-todo-ui-reminder-01-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a Swift extension for the "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":" struct and declare a static constant "},{"type":"codeVoice","code":"samples"},{"type":"text","text":". Add a couple of todo items. Later in this tutorial, you will use this sample data to display a list of todo items."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Display-a-List-of-Reminders","title":"Display a List of Reminders","contentSection":[{"kind":"contentAndMedia","content":[],"mediaPosition":"leading","media":"sectionintros.002.png"}],"stepsSection":[{"code":"building-todo-ui-reminder-02-contentview-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Project"}]},{"type":"text","text":" navigator, select "},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":"."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By default, SwiftUI view files declare two structures. The first structure conforms to the "},{"type":"codeVoice","code":"View"},{"type":"text","text":" protocol and describes the view’s content and layout. The second structure declares a preview for that view."}]}],"type":"step","runtimePreview":"building-todo-ui-reminder-02-contentview-02.png","media":null},{"code":"building-todo-ui-reminder-02-contentview-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Inside the "},{"type":"codeVoice","code":"body"},{"type":"text","text":" property, change the vertical stack to a horizontal stack."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-02-contentview-03.png","media":null},{"code":"building-todo-ui-reminder-02-contentview-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Change the icon to a circle."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In a later step in this tutorial, you will use a filled circle and a unfilled circle to indicate the "},{"type":"codeVoice","code":"isCompleted"},{"type":"text","text":" status of todo items"}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":"building-todo-ui-reminder-02-contentview-04.png","media":null},{"code":"building-todo-ui-reminder-02-contentview-05.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a private "},{"type":"codeVoice","code":"@State"},{"type":"text","text":" property to hold a list of reminders."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It is a good practice to mark properties that you don’t plan to access from outside a view as "},{"type":"codeVoice","code":"private"},{"type":"text","text":". This prevents leaking information, and helps to keep the views initialiser clean, as you will see in a future step."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":"building-todo-ui-reminder-02-contentview-04.png","media":null},{"code":"building-todo-ui-reminder-02-contentview-06.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Remove the "},{"type":"codeVoice","code":".padding()"},{"type":"text","text":" view modifier."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-02-contentview-04.png","media":null},{"code":"building-todo-ui-reminder-02-contentview-07.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Wrap the "},{"type":"codeVoice","code":"HStack"},{"type":"text","text":" in a "},{"type":"codeVoice","code":"List"},{"type":"text","text":"."}]}],"caption":[{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This will result in a compile error saying that "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":" is not "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":". You will fix this in the next step."}]}],"type":"aside","name":"Warning"}],"type":"step","runtimePreview":"building-todo-ui-reminder-02-contentview-06.png","media":null},{"code":"building-todo-ui-reminder-02-reminder-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mark "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":" as "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":", and add a constant property "},{"type":"codeVoice","code":"id"},{"type":"text","text":"."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI will use the "},{"type":"codeVoice","code":"id"},{"type":"text","text":" property of the "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":" struct to determine the identity of the list rows inside the "},{"type":"codeVoice","code":"List"},{"type":"text","text":" view. It is important to keep a view’s identity stable, as this will help SwiftUI determine which parts of the UI to update when the data model changes."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"code":"building-todo-ui-reminder-02-contentview-08.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate back to "},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":". The compile error should now be resolved, and the error message will disappear."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-02-contentview-07.png","media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"List"},{"type":"text","text":" view iterates over all elements of the collection you pass in as the first parameter - in this case, "},{"type":"codeVoice","code":"reminders"},{"type":"text","text":". Inside the "},{"type":"codeVoice","code":"List"},{"type":"text","text":" view’s closure, you can access the individual elements of the collection using the closure parameter, "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":"."}]},{"code":"building-todo-ui-reminder-02-contentview-09.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update the views inside the "},{"type":"codeVoice","code":"List"},{"type":"text","text":" view to display the "},{"type":"codeVoice","code":"title"},{"type":"text","text":" and "},{"type":"codeVoice","code":"isCompleted"},{"type":"text","text":" state of the current collection element."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-02-contentview-08.png","media":null}]},{"anchor":"Mark-Reminders-as-isCompleted","title":"Mark Reminders as isCompleted","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The main purpose of a todo list app is to allow users to get things done. In this step, you will turn the static "},{"type":"codeVoice","code":"Image"},{"type":"text","text":" view into an interactive component that allows users to mark tasks as "},{"type":"codeVoice","code":"isCompleted"},{"type":"text","text":"."}]}],"mediaPosition":"trailing","media":"sectionintros.003.mp4"}],"stepsSection":[{"code":"building-todo-ui-reminder-03-contentview-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Project"}]},{"type":"text","text":" navigator, select "},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-03-contentview-01.png","media":null},{"code":"building-todo-ui-reminder-03-contentview-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"onTapGesture"},{"type":"text","text":" view modifier to register an event handler that gets called when the user taps on the "},{"type":"codeVoice","code":"Image"},{"type":"text","text":" view."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"building-todo-ui-reminder-03-contentview-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Toogle the "},{"type":"codeVoice","code":"isCompleted"},{"type":"text","text":" status of the respective reminder."}]}],"caption":[{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This will result in a compiler error saying that you "},{"type":"emphasis","inlineContent":[{"type":"text","text":"cannot use mutating member on immutable value: ‘reminder’ is a ‘let’ constant."}]},{"type":"text","text":". You will fix this in the next step."}]}],"type":"aside","name":"Warning"}],"type":"step","runtimePreview":"building-todo-ui-reminder-03-contentview-03.png","media":null},{"code":"building-todo-ui-reminder-03-contentview-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a list binding by turning the "},{"type":"codeVoice","code":"List"},{"type":"text","text":" parameter into a "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" of type "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" of "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":", and then accessing the individual elements of the collection as a "},{"type":"codeVoice","code":"Binding"},{"type":"text","text":" inside the "},{"type":"codeVoice","code":"List"},{"type":"text","text":" closure."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The compile error should now be resolved, and the error message will disappear."}]},{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can learn more about "},{"type":"codeVoice","code":"List"},{"type":"text","text":" bindings in this blog post: "},{"type":"reference","isActive":true,"identifier":"https:\/\/peterfriese.dev\/posts\/swiftui-list-item-bindings-behind-the-scenes\/"}]}],"type":"aside","name":"Tip"}],"type":"step","runtimePreview":null,"media":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the live preview and try out this new functionality by tapping the check boxes."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"building-todo-ui-reminder-03-contentview-05.mp4"}]},{"anchor":"Create-a-Dialog-for-Adding-New-Reminders","title":"Create a Dialog for Adding New Reminders","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adding new reminders is another key feature of any todo list application. In this step, you will create a dialog that allows users to add new reminders."}]}],"mediaPosition":"trailing","media":"sectionintros.004.mp4"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Choose "},{"type":"emphasis","inlineContent":[{"type":"text","text":"File > New > File"}]},{"type":"text","text":" to create a new SwiftUI file in your project and name it "},{"type":"codeVoice","code":"AddReminderView.swift"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"building-todo-ui-new-swiftui-file.png"},{"code":"building-todo-ui-reminder-04-addreminderview-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Wrap the greeting "},{"type":"codeVoice","code":"Text(\"Hello, World!\")"},{"type":"text","text":" inside a "},{"type":"codeVoice","code":"Form"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-04-addreminderview-01.png","media":null},{"code":"building-todo-ui-reminder-04-addreminderview-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Define a new local state variable to contain the new "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-04-addreminderview-01.png","media":null},{"code":"building-todo-ui-reminder-04-addreminderview-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Replace the "},{"type":"codeVoice","code":"Text"},{"type":"text","text":" view with a "},{"type":"codeVoice","code":"TextField"},{"type":"text","text":". Set its "},{"type":"codeVoice","code":"title"},{"type":"text","text":" property to "},{"type":"codeVoice","code":"\"Title\""},{"type":"text","text":", and bind its "},{"type":"codeVoice","code":"text"},{"type":"text","text":" property to the "},{"type":"codeVoice","code":"title"},{"type":"text","text":" property of the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" property."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Since the "},{"type":"codeVoice","code":"title"},{"type":"text","text":" property of the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" is empty, the "},{"type":"codeVoice","code":"TextField"},{"type":"text","text":" will display a placeholder text."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":"building-todo-ui-reminder-04-addreminderview-04.png","media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"To allow the user to add the reminder to their list, you will next create a toolbar that contains an "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" button."}]},{"code":"building-todo-ui-reminder-04-addreminderview-05.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Wrap the "},{"type":"codeVoice","code":"Form"},{"type":"text","text":" inside a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":", and the "},{"type":"codeVoice","code":"toolbar"},{"type":"text","text":" view modifier to add a toolbar to the "},{"type":"codeVoice","code":"Form"}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To make the toolbar visible, the view needs to be wrapped inside a navigation. Once you add a button to the toolbar, it will become visible."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":"building-todo-ui-reminder-04-addreminderview-04.png","media":null},{"code":"building-todo-ui-reminder-04-addreminderview-06.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a button for the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" action to the toolbar."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By specifying the "},{"type":"codeVoice","code":".confirmationAction"},{"type":"text","text":" placement, the button will be placed on the right side of the toolbar on iOS."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":"building-todo-ui-reminder-04-addreminderview-06.png","media":null}]},{"anchor":"Pass-Data-From-the-Child-View","title":"Pass Data From the Child View","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When the user taps on the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" button in the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Add Reminder"}]},{"type":"text","text":" dialog, the new reminder needs to be passed to the calling view so it can be added to the list of reminders."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"A common way to implement this is by using a completion handler. In this section, you will implement a completion handler and present the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"AddReminderView"}]},{"type":"text","text":" from the parent view."}]}],"mediaPosition":"trailing","media":"sectionintros.005.png"}],"stepsSection":[{"code":"building-todo-ui-reminder-04-addreminderview-07.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Define a property "},{"type":"codeVoice","code":"onCommit"},{"type":"text","text":" for the completion handler. This handler has one parameter for passing the "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":" to the calling view."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Adjust the preview provider to make use of the completion handler."}]}],"type":"step","runtimePreview":"building-todo-ui-reminder-04-addreminderview-06.png","media":null},{"code":"building-todo-ui-reminder-04-addreminderview-08.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a new private function "},{"type":"codeVoice","code":"commit"},{"type":"text","text":". Inside this function, call the "},{"type":"codeVoice","code":"onCommit"},{"type":"text","text":" completion handler, passing the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" property."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Call the "},{"type":"codeVoice","code":"commit"},{"type":"text","text":" function when the user taps on the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" button."}]}],"type":"step","runtimePreview":"building-todo-ui-reminder-04-addreminderview-06.png","media":null},{"code":"building-todo-ui-reminder-04-addreminderview-09.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a new private variable "},{"type":"codeVoice","code":"dismiss"},{"type":"text","text":" at the top of "},{"type":"codeVoice","code":"AddReminderView"},{"type":"text","text":", and use the "},{"type":"codeVoice","code":"@Environment"},{"type":"text","text":" property wrapper to connect it to the "},{"type":"codeVoice","code":"dismiss"},{"type":"text","text":" action from the SwiftUI environment."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-04-addreminderview-06.png","media":null},{"code":"building-todo-ui-reminder-04-addreminderview-10.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Call "},{"type":"codeVoice","code":"dismiss()"},{"type":"text","text":" at the end of the "},{"type":"codeVoice","code":"commit"},{"type":"text","text":" function, after passing the new reminder to the calling view. This will dismiss the "},{"type":"codeVoice","code":"Add Reminder"},{"type":"text","text":" dialog after the data has been passed."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This works because the "},{"type":"codeVoice","code":"dismiss"},{"type":"text","text":" environment value makes use of "},{"type":"codeVoice","code":"callAsFunction"},{"type":"text","text":". To learn more about this, check out "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.donnywals.com\/how-and-when-to-use-callasfunction-in-swift-5-2\/"},{"type":"text","text":" or "},{"type":"reference","isActive":true,"identifier":"https:\/\/www.hackingwithswift.com\/swift\/5.2\/callasfunction"},{"type":"text","text":"."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":"building-todo-ui-reminder-04-addreminderview-06.png","media":null}]},{"anchor":"Present-the-Add-Reminder-Dialog","title":"Present the Add Reminder Dialog","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open the dialog from the reminders lit."}]}],"mediaPosition":"trailing","media":"sectionintros.006.png"}],"stepsSection":[{"code":"building-todo-ui-reminder-05-contentview-present-addreminder-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go back to the "},{"type":"codeVoice","code":"ContentView.swift"},{"type":"text","text":" file, and add a new boolean property "},{"type":"codeVoice","code":"isAddReminderDialogPresented"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"building-todo-ui-reminder-05-contentview-present-addreminder-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a helper function for toggling the state of "},{"type":"codeVoice","code":"isAddReminderDialogPresented"}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"building-todo-ui-reminder-05-contentview-present-addreminder-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a toobar with the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"New Reminder"}]},{"type":"text","text":" button. In the "},{"type":"codeVoice","code":"action"},{"type":"text","text":" of the button, call the helper function you created in the previous step."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"building-todo-ui-reminder-05-contentview-present-addreminder-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To be able to see the toolbar, wrap "},{"type":"codeVoice","code":"ContentView"},{"type":"text","text":" in a "},{"type":"codeVoice","code":"NavigationStack"},{"type":"text","text":" in the preview provider."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Keep in mind that you own the preview, so you can adjust it to your needs to make it easier to see the view you’re working on in the context it will later be used in."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":"building-todo-ui-reminder-05-contentview-present-addreminder-04.png","media":null},{"code":"building-todo-ui-reminder-05-contentview-present-addreminder-05.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"sheet"},{"type":"text","text":" view modifier to present the "},{"type":"codeVoice","code":"AddReminderView"},{"type":"text","text":" dialog. Bind the "},{"type":"codeVoice","code":"isPresented"},{"type":"text","text":" parameter to the "},{"type":"codeVoice","code":"isAddReminderPresented"},{"type":"text","text":" property you defined in an earlier step."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-05-contentview-present-addreminder-04.png","media":null},{"code":"building-todo-ui-reminder-05-contentview-present-addreminder-06.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Inside the "},{"type":"codeVoice","code":"onCommit"},{"type":"text","text":" closure of the "},{"type":"codeVoice","code":"AddReminderView"},{"type":"text","text":" view, take the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" parameter and append the new reminder to the list of reminders."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-05-contentview-present-addreminder-04.png","media":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the live preview and try out this new functionality by tapping the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"New Reminder"}]},{"type":"text","text":" button to add a new reminder to the list of reminders."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"building-todo-ui-reminder-05-contentview-present-addreminder-05.mp4"}]},{"anchor":"Brush-up-the-UI","title":"Brush up the UI","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To finish this first chapter, refine the UI:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure the "},{"type":"codeVoice","code":"title"},{"type":"text","text":" input field is active"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" button is only active if the reminder input field is not empty"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cancel"}]},{"type":"text","text":" button"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a title to the dialog"}]}]}]}],"mediaPosition":"trailing","media":"sectionintros.007.mp4"}],"stepsSection":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You might have noticed that the input field was not active when the dialog appears. This is inconvenient, especially on larger phones, when the input field might be hard to reach. In the next few steps, you will use SwiftUI’s "},{"type":"codeVoice","code":"@FocusState"},{"type":"text","text":" property wrapper to place the cursor in the first input field when the dialog appears."}]},{"code":"building-todo-ui-reminder-06-addreminder-brushup-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Go back to the "},{"type":"codeVoice","code":"AddReminderView.swift"},{"type":"text","text":" file, and define an enum "},{"type":"codeVoice","code":"FocusableField"},{"type":"text","text":" whith a single case "},{"type":"codeVoice","code":"title"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"building-todo-ui-reminder-06-addreminder-brushup-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a new private property "},{"type":"codeVoice","code":"focusedField"},{"type":"text","text":" as an optional "},{"type":"codeVoice","code":"FocusedField"},{"type":"text","text":" and mark it using the "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/focusstate"},{"type":"text","text":" property wrapper."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"building-todo-ui-reminder-06-addreminder-brushup-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"focused"},{"type":"text","text":" view modifier to bind the focus state "},{"type":"codeVoice","code":"focusedField"},{"type":"text","text":" to the "},{"type":"codeVoice","code":"TextField"},{"type":"text","text":". By using the "},{"type":"codeVoice","code":".title"},{"type":"text","text":" enum case in the equality check, you tell SwiftUI to focus this field whenever "},{"type":"codeVoice","code":"focusedField"},{"type":"text","text":" is equal to "},{"type":"codeVoice","code":".title"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"building-todo-ui-reminder-06-addreminder-brushup-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In the final step, add an "},{"type":"codeVoice","code":"onAppear"},{"type":"text","text":" view modifier to the "},{"type":"codeVoice","code":"Form"},{"type":"text","text":" and set the "},{"type":"codeVoice","code":"focusedField"},{"type":"text","text":" property to "},{"type":"codeVoice","code":".title"},{"type":"text","text":"."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This makes sure the cursor will be placed inside the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Title"}]},{"type":"text","text":" "},{"type":"codeVoice","code":"TextField"},{"type":"text","text":" whenever the view appears."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the next step, you will make sure the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" button is only active if the title of the reminder is not empty. This prevents adding empty reminders."}]},{"code":"building-todo-ui-reminder-06-addreminder-brushup-05.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a "},{"type":"codeVoice","code":"disabled"},{"type":"text","text":" view modifier to the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" button and bind it to the the "},{"type":"codeVoice","code":"isEmpty"},{"type":"text","text":" state of the "},{"type":"codeVoice","code":"title"},{"type":"text","text":" property of the reminder."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-06-addreminder-brushup-05.png","media":null},{"code":"building-todo-ui-reminder-06-addreminder-brushup-06.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the "},{"type":"codeVoice","code":"navigationTitle"},{"type":"text","text":" view modifier to the "},{"type":"codeVoice","code":"Form"},{"type":"text","text":" to set the dialog title, and set the  "},{"type":"codeVoice","code":"navigationBarTitleDisplayMode"},{"type":"text","text":" to "},{"type":"codeVoice","code":".inline"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-06-addreminder-brushup-06.png","media":null},{"code":"building-todo-ui-reminder-06-addreminder-brushup-07.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a private function "},{"type":"codeVoice","code":"cancel"},{"type":"text","text":", and call "},{"type":"codeVoice","code":"dismiss()"},{"type":"text","text":" to dismiss the dialog."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-06-addreminder-brushup-06.png","media":null},{"code":"building-todo-ui-reminder-06-addreminder-brushup-08.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Cancel"}]},{"type":"text","text":" button to toolbar, and use "},{"type":"codeVoice","code":".cancellationAction"},{"type":"text","text":" to place it in the cancellation area of the toolbar. Call the "},{"type":"codeVoice","code":"cancel"},{"type":"text","text":" function you just created."}]}],"caption":[],"type":"step","runtimePreview":"building-todo-ui-reminder-06-addreminder-brushup-07.png","media":null}]},{"anchor":"Wrap-Up","title":"Wrap Up","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Congratulations!"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You’ve implemented a fully functional UI for a todo list application in less than 150 lines of SwiftUI code."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the live preview and try out this new functionality by tapping the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"New Reminder"}]},{"type":"text","text":" button to add a new reminder to the list of reminders."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"building-todo-ui-07-finale.mp4"}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Implementing Model, View, ViewModel (MVVM)","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}]}],"identifier":{"url":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Building a Simple Todo List UI","categoryPathComponent":"MakeItSo","role":"project","category":"MakeItSo"},"hierarchy":{"modules":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-a-Simple-UI","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-New-Project"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Reminder-Model-and-Add-some-Test-Data"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Display-a-List-of-Reminders"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Mark-Reminders-as-isCompleted"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Dialog-for-Adding-New-Reminders"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Pass-Data-From-the-Child-View"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Present-the-Add-Reminder-Dialog"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Brush-up-the-UI"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Wrap-Up"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Organise-the-Project-Files"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Create-a-View-Model-and-connect-it-to-the-RemindersListView"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-adding-new-reminders"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-Reusable-UI-Components","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Title"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Create-a-Styleable-Toggle","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Create-a-Styleable-Toggle#Title"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Connecting-Your-App-to-Firebase","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Create-a-New-Firebase-Project"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Register-Your-App-with-Firebase"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-a-Firebase-Configuration-File"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-Firebase-SDKs-to-Your-App"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Initialize-Firebase-in-Your-App"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Launch-the-App-to-Verify-Setup"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Install-the-Firebase-CLI"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Launch-the-Emulator-and-view-the-Emulator-dashboard"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-your-app-to-the-Emulator-Suite"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project"}]}]}],"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo","paths":[["doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo","doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase","doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-a-Simple-UI"]]},"references":{"https://www.donnywals.com/how-and-when-to-use-callasfunction-in-swift-5-2/":{"title":"How and when to use callAsFunction in Swift 5.2","titleInlineContent":[{"type":"text","text":"How and when to use callAsFunction in Swift 5.2"}],"type":"link","identifier":"https:\/\/www.donnywals.com\/how-and-when-to-use-callasfunction-in-swift-5-2\/","url":"https:\/\/www.donnywals.com\/how-and-when-to-use-callasfunction-in-swift-5-2\/"},"building-todo-ui-reminder-06-addreminder-brushup-05.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-06-addreminder-brushup-05.png","variants":[{"url":"\/images\/building-todo-ui-reminder-06-addreminder-brushup-05@2x.png","traits":["2x","light"]}]},"building-todo-ui-reminder-04-addreminderview-08.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  @State","  private var reminder = Reminder(title: \"\")","","  var onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","      }","      .toolbar {","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(\"Add\")","          }","        }","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-04-addreminderview-08.swift","type":"file","fileType":"swift","highlights":[{"line":9},{"line":10},{"line":11},{"line":12},{"line":20}]},"building-todo-ui-intro.png":{"alt":"","type":"image","identifier":"building-todo-ui-intro.png","variants":[{"url":"\/images\/building-todo-ui-intro@2x.png","traits":["2x","light"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Register-Your-App-with-Firebase":{"role":"pseudoSymbol","title":"Register Your App with Firebase","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Register-Your-App-with-Firebase","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Register-Your-App-with-Firebase"},"building-todo-ui-reminder-06-addreminder-brushup-04.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  enum FocusableField: Hashable {","    case title","  }","","  @FocusState","  private var focusedField: FocusableField?","","  @State","  private var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  var onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","          .focused($focusedField, equals: .title)","      }","      .toolbar {","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(\"Add\")","          }","        }","      }","      .onAppear {","        focusedField = .title","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-06-addreminder-brushup-04.swift","type":"file","fileType":"swift","highlights":[{"line":37},{"line":38},{"line":39}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Launch-the-App-to-Verify-Setup":{"role":"pseudoSymbol","title":"Launch the App to Verify Setup","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Launch-the-App-to-Verify-Setup","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Launch-the-App-to-Verify-Setup"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Extract-Row-View":{"role":"project","title":"Extracting the Reminder Row Into a Separate View","estimatedTime":"15min","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-extract-row-view"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Initialize-Firebase-in-Your-App":{"role":"pseudoSymbol","title":"Initialize Firebase in Your App","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Initialize-Firebase-in-Your-App","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Initialize-Firebase-in-Your-App"},"building-todo-ui-reminder-02-contentview-07.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-02-contentview-07.png","variants":[{"url":"\/images\/building-todo-ui-reminder-02-contentview-07@2x.png","traits":["2x","light"]}]},"building-todo-ui-xcode-project-name.png":{"alt":"","type":"image","identifier":"building-todo-ui-xcode-project-name.png","variants":[{"url":"\/images\/building-todo-ui-xcode-project-name@2x.png","traits":["2x","light"]},{"url":"\/images\/building-todo-ui-xcode-project-name~dark@2x.png","traits":["2x","dark"]}]},"building-todo-ui-reminder-02-contentview-02.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-02-contentview-02.png","variants":[{"url":"\/images\/building-todo-ui-reminder-02-contentview-02@2x.png","traits":["2x","light"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Wrap-Up":{"role":"pseudoSymbol","title":"Wrap Up","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Wrap-Up","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Wrap-Up"},"building-todo-ui-reminder-03-contentview-04.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  var body: some View {","    List($reminders) { $reminder in","      HStack {","        Image(systemName: reminder.isCompleted","              ? \"largecircle.fill.circle\"","              : \"circle\")","          .imageScale(.large)","          .foregroundColor(.accentColor)","          .onTapGesture {","            reminder.isCompleted.toggle()","          }","        Text(reminder.title)","      }","    }","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-03-contentview-04.swift","type":"file","fileType":"swift","highlights":[{"line":8}]},"building-todo-ui-reminder-05-contentview-present-addreminder-03.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  @State","  private var isAddReminderDialogPresented = false","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($reminders) { $reminder in","      HStack {","        Image(systemName: reminder.isCompleted","              ? \"largecircle.fill.circle\"","              : \"circle\")","          .imageScale(.large)","          .foregroundColor(.accentColor)","          .onTapGesture {","            reminder.isCompleted.toggle()","          }","        Text(reminder.title)","      }","    }","    .toolbar {","      ToolbarItemGroup(placement: .bottomBar) {","        Button(action: presentAddReminderView) {","          HStack {","            Image(systemName: \"plus.circle.fill\")","            Text(\"New Reminder\")","          }","        }","        Spacer()","      }","    }","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-05-contentview-present-addreminder-03.swift","type":"file","fileType":"swift","highlights":[{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38}]},"sectionintros.003.mp4":{"poster":null,"alt":null,"type":"video","identifier":"sectionintros.003.mp4","variants":[{"url":"\/videos\/sectionintros.003.mp4","traits":["1x","light"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Create-a-New-Firebase-Project":{"role":"pseudoSymbol","title":"Create a New Firebase Project ","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Create-a-New-Firebase-Project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Create-a-New-Firebase-Project"},"https://developer.apple.com/documentation/swiftui/focusstate":{"title":"@FocusState","titleInlineContent":[{"type":"codeVoice","code":"@FocusState"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/swiftui\/focusstate","url":"https:\/\/developer.apple.com\/documentation\/swiftui\/focusstate"},"building-todo-ui-reminder-02-contentview-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  var body: some View {","    VStack {","      Image(systemName: \"globe\")","        .imageScale(.large)","        .foregroundColor(.accentColor)","      Text(\"Hello, world!\")","    }","    .padding()","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-02-contentview-02.swift","type":"file","fileType":"swift","highlights":[{"line":3},{"line":4},{"line":5},{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Add-a-Firebase-Configuration-File":{"role":"pseudoSymbol","title":"Add a Firebase Configuration File","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-a-Firebase-Configuration-File","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Add-a-Firebase-Configuration-File"},"building-todo-ui-reminder-02-contentview-03.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  var body: some View {","    HStack {","      Image(systemName: \"globe\")","        .imageScale(.large)","        .foregroundColor(.accentColor)","      Text(\"Hello, world!\")","    }","    .padding()","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-02-contentview-03.swift","type":"file","fileType":"swift","highlights":[{"line":5}]},"building-todo-ui-reminder-06-addreminder-brushup-08.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  enum FocusableField: Hashable {","    case title","  }","","  @FocusState","  private var focusedField: FocusableField?","","  @State","  private var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  var onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  private func cancel() {","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","          .focused($focusedField, equals: .title)","      }","      .navigationTitle(\"New Reminder\")","      .navigationBarTitleDisplayMode(.inline)","      .toolbar {","        ToolbarItem(placement: .cancellationAction) {","          Button(action: cancel) {","            Text(\"Cancel\")","          }","        }","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(\"Add\")","          }","          .disabled(reminder.title.isEmpty)","        }","      }","      .onAppear {","        focusedField = .title","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-06-addreminder-brushup-08.swift","type":"file","fileType":"swift","highlights":[{"line":37},{"line":38},{"line":39},{"line":40},{"line":41}]},"building-todo-ui-reminder-04-addreminderview-05.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  @State","  private var reminder = Reminder(title: \"\")","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","      }","      .toolbar {","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView()","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-04-addreminderview-05.swift","type":"file","fileType":"swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13}]},"building-todo-ui-reminder-04-addreminderview-03.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  @State","  private var reminder = Reminder(title: \"\")","","  var body: some View {","    Form {","      Text(\"Hello, World!\")","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView()","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-04-addreminderview-03.swift","type":"file","fileType":"swift","highlights":[{"line":4},{"line":5},{"line":6}]},"make-it-so-intro.mov":{"poster":null,"alt":null,"type":"video","identifier":"make-it-so-intro.mov","variants":[{"url":"\/videos\/make-it-so-intro.mov","traits":["1x","light"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Create-a-Styleable-Toggle":{"role":"project","title":"Creating a Styleable Toggle","estimatedTime":"25min","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Create-a-Styleable-Toggle","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-create-a-styleable-toggle"},"building-todo-ui-reminder-02-contentview-03.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-02-contentview-03.png","variants":[{"url":"\/images\/building-todo-ui-reminder-02-contentview-03@2x.png","traits":["2x","light"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Present-the-Add-Reminder-Dialog":{"role":"pseudoSymbol","title":"Present the Add Reminder Dialog","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Present-the-Add-Reminder-Dialog","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Present-the-Add-Reminder-Dialog"},"sectionintros.005.png":{"alt":"","type":"image","identifier":"sectionintros.005.png","variants":[{"url":"\/images\/sectionintros.005@2x.png","traits":["2x","light"]},{"url":"\/images\/sectionintros.005~dark@2x.png","traits":["2x","dark"]}]},"building-todo-ui-reminder-04-addreminderview-10.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  @State","  private var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  var onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","      }","      .toolbar {","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(\"Add\")","          }","        }","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-04-addreminderview-10.swift","type":"file","fileType":"swift","highlights":[{"line":14}]},"building-todo-ui-reminder-03-contentview-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  var body: some View {","    List(reminders) { reminder in","      HStack {","        Image(systemName: reminder.isCompleted","              ? \"largecircle.fill.circle\"","              : \"circle\")","          .imageScale(.large)","          .foregroundColor(.accentColor)","          .onTapGesture {","","          }","        Text(reminder.title)","      }","    }","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-03-contentview-02.swift","type":"file","fileType":"swift","highlights":[{"line":15},{"line":16},{"line":17}]},"building-todo-ui-reminder-03-contentview-01.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  var body: some View {","    List(reminders) { reminder in","      HStack {","        Image(systemName: reminder.isCompleted","              ? \"largecircle.fill.circle\"","              : \"circle\")","          .imageScale(.large)","          .foregroundColor(.accentColor)","        Text(reminder.title)","      }","    }","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-03-contentview-01.swift","type":"file","fileType":"swift","highlights":[{"line":3},{"line":4},{"line":5},{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20}]},"building-todo-ui-reminder-01-03.swift":{"syntax":"swift","content":["import Foundation","","struct Reminder {","  var title: String","  var isCompleted = false","}","","extension Reminder {","  static let samples = [","    Reminder(title: \"Build sample app\", isCompleted: true),","    Reminder(title: \"Create tutorial\"),","    Reminder(title: \"???\"),","    Reminder(title: \"PROFIT!\"),","  ]","}"],"fileName":"Reminder.swift","identifier":"building-todo-ui-reminder-01-03.swift","type":"file","fileType":"swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Create-a-New-Project":{"role":"pseudoSymbol","title":"Create a New Project","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-New-Project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Create-a-New-Project"},"building-todo-ui-reminder-05-contentview-present-addreminder-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  @State","  private var isAddReminderDialogPresented = false","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($reminders) { $reminder in","      HStack {","        Image(systemName: reminder.isCompleted","              ? \"largecircle.fill.circle\"","              : \"circle\")","          .imageScale(.large)","          .foregroundColor(.accentColor)","          .onTapGesture {","            reminder.isCompleted.toggle()","          }","        Text(reminder.title)","      }","    }","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-05-contentview-present-addreminder-02.swift","type":"file","fileType":"swift","highlights":[{"line":10},{"line":11},{"line":12},{"line":13}]},"building-todo-ui-reminder-06-addreminder-brushup-06.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-06-addreminder-brushup-06.png","variants":[{"url":"\/images\/building-todo-ui-reminder-06-addreminder-brushup-06@2x.png","traits":["2x","light"]}]},"sectionintros.001.png":{"alt":"","type":"image","identifier":"sectionintros.001.png","variants":[{"url":"\/images\/sectionintros.001@2x.png","traits":["2x","light"]},{"url":"\/images\/sectionintros.001~dark@2x.png","traits":["2x","dark"]},{"url":"\/images\/sectionintros.001.png","traits":["1x","light"]}]},"building-todo-ui-reminder-06-addreminder-brushup-07.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-06-addreminder-brushup-07.png","variants":[{"url":"\/images\/building-todo-ui-reminder-06-addreminder-brushup-07@2x.png","traits":["2x","light"]}]},"building-todo-ui-reminder-02-contentview-09.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  var body: some View {","    List(reminders) { reminder in","      HStack {","        Image(systemName: reminder.isCompleted","              ? \"largecircle.fill.circle\"","              : \"circle\")","          .imageScale(.large)","          .foregroundColor(.accentColor)","        Text(reminder.title)","      }","    }","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-02-contentview-09.swift","type":"file","fileType":"swift","highlights":[{"line":10},{"line":11},{"line":12},{"line":15}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Mark-Reminders-as-isCompleted":{"role":"pseudoSymbol","title":"Mark Reminders as isCompleted","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Mark-Reminders-as-isCompleted","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Mark-Reminders-as-isCompleted"},"building-todo-ui-reminder-02-contentview-08.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  var body: some View {","    List(reminders) { reminder in","      HStack {","        Image(systemName: \"circle\")","          .imageScale(.large)","          .foregroundColor(.accentColor)","        Text(\"Hello, world!\")","      }","    }","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-02-contentview-08.swift","type":"file","fileType":"swift","highlights":[]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project":{"role":"project","title":"Adding Firebase to Your Project","estimatedTime":"25min","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project"},"building-todo-ui-new-swift-file.png":{"alt":"","type":"image","identifier":"building-todo-ui-new-swift-file.png","variants":[{"url":"\/images\/building-todo-ui-new-swift-file@2x.png","traits":["2x","light"]},{"url":"\/images\/building-todo-ui-new-swift-file~dark@2x.png","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite":{"role":"pseudoSymbol","title":"Connect to your Firebase project and enable the Emulator Suite","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite"},"sectionintros.002.png":{"alt":"","type":"image","identifier":"sectionintros.002.png","variants":[{"url":"\/images\/sectionintros.002@2x.png","traits":["2x","light"]},{"url":"\/images\/sectionintros.002~dark@2x.png","traits":["2x","dark"]},{"url":"\/images\/sectionintros.002.png","traits":["1x","light"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Brush-up-the-UI":{"role":"pseudoSymbol","title":"Brush up the UI","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Brush-up-the-UI","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Brush-up-the-UI"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Launch-the-Emulator-and-view-the-Emulator-dashboard":{"role":"pseudoSymbol","title":"Launch the Emulator and view the Emulator dashboard","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Launch-the-Emulator-and-view-the-Emulator-dashboard","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Launch-the-Emulator-and-view-the-Emulator-dashboard"},"building-todo-ui-reminder-02-contentview-05.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  var body: some View {","    HStack {","      Image(systemName: \"circle\")","        .imageScale(.large)","        .foregroundColor(.accentColor)","      Text(\"Hello, world!\")","    }","    .padding()","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-02-contentview-05.swift","type":"file","fileType":"swift","highlights":[{"line":4},{"line":5},{"line":6}]},"building-todo-ui-reminder-06-addreminder-brushup-07.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  enum FocusableField: Hashable {","    case title","  }","","  @FocusState","  private var focusedField: FocusableField?","","  @State","  private var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  var onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  private func cancel() {","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","          .focused($focusedField, equals: .title)","      }","      .navigationTitle(\"New Reminder\")","      .navigationBarTitleDisplayMode(.inline)","      .toolbar {","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(\"Add\")","          }","          .disabled(reminder.title.isEmpty)","        }","      }","      .onAppear {","        focusedField = .title","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-06-addreminder-brushup-07.swift","type":"file","fileType":"swift","highlights":[{"line":24},{"line":25},{"line":26},{"line":27}]},"sectionintros.006.png":{"alt":"","type":"image","identifier":"sectionintros.006.png","variants":[{"url":"\/images\/sectionintros.006@2x.png","traits":["2x","light"]},{"url":"\/images\/sectionintros.006~dark@2x.png","traits":["2x","dark"]}]},"building-todo-ui-reminder-05-contentview-present-addreminder-01.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  @State","  private var isAddReminderDialogPresented = false","","  var body: some View {","    List($reminders) { $reminder in","      HStack {","        Image(systemName: reminder.isCompleted","              ? \"largecircle.fill.circle\"","              : \"circle\")","          .imageScale(.large)","          .foregroundColor(.accentColor)","          .onTapGesture {","            reminder.isCompleted.toggle()","          }","        Text(reminder.title)","      }","    }","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-05-contentview-present-addreminder-01.swift","type":"file","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9}]},"building-todo-ui-reminder-04-addreminderview-06.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-04-addreminderview-06.png","variants":[{"url":"\/images\/building-todo-ui-reminder-04-addreminderview-06@2x.png","traits":["2x","light"]}]},"building-todo-ui-xcode-app-template.png":{"alt":"","type":"image","identifier":"building-todo-ui-xcode-app-template.png","variants":[{"url":"\/images\/building-todo-ui-xcode-app-template@2x.png","traits":["2x","light"]},{"url":"\/images\/building-todo-ui-xcode-app-template~dark@2x.png","traits":["2x","dark"]}]},"building-todo-ui-reminder-02-contentview-04.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  var body: some View {","    HStack {","      Image(systemName: \"circle\")","        .imageScale(.large)","        .foregroundColor(.accentColor)","      Text(\"Hello, world!\")","    }","    .padding()","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-02-contentview-04.swift","type":"file","fileType":"swift","highlights":[{"line":6}]},"building-todo-ui-reminder-02-contentview-04.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-02-contentview-04.png","variants":[{"url":"\/images\/building-todo-ui-reminder-02-contentview-04@2x.png","traits":["2x","light"]}]},"building-todo-ui-reminder-06-addreminder-brushup-03.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  enum FocusableField: Hashable {","    case title","  }","","  @FocusState","  private var focusedField: FocusableField?","","  @State","  private var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  var onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","          .focused($focusedField, equals: .title)","      }","      .toolbar {","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(\"Add\")","          }","        }","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-06-addreminder-brushup-03.swift","type":"file","fileType":"swift","highlights":[{"line":28}]},"building-todo-ui-reminder-04-addreminderview-07.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  @State","  private var reminder = Reminder(title: \"\")","","  var onCommit: (_ reminder: Reminder) -> Void","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","      }","      .toolbar {","        ToolbarItem(placement: .confirmationAction) {","          Button(action: {}) {","            Text(\"Add\")","          }","        }","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-04-addreminderview-07.swift","type":"file","fileType":"swift","highlights":[{"line":1},{"line":2},{"line":3},{"line":4},{"line":5},{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31}]},"building-todo-ui-07-finale.mp4":{"poster":null,"alt":null,"type":"video","identifier":"building-todo-ui-07-finale.mp4","variants":[{"url":"\/videos\/building-todo-ui-07-finale.mp4","traits":["1x","light"]},{"url":"\/videos\/building-todo-ui-07-finale~dark.mp4","traits":["1x","dark"]}]},"building-todo-ui-reminder-04-addreminderview-09.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  @State","  private var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  var onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","      }","      .toolbar {","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(\"Add\")","          }","        }","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-04-addreminderview-09.swift","type":"file","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Building-Reusable-UI-Components":{"role":"article","title":"Building Reusable UI Components","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-Reusable-UI-Components","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/building-reusable-ui-components"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Display-a-List-of-Reminders":{"role":"pseudoSymbol","title":"Display a List of Reminders","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Display-a-List-of-Reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Display-a-List-of-Reminders"},"building-todo-ui-reminder-02-contentview-07.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  var body: some View {","    List(reminders) { reminder in","      HStack {","        Image(systemName: \"circle\")","          .imageScale(.large)","          .foregroundColor(.accentColor)","        Text(\"Hello, world!\")","      }","    }","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-02-contentview-07.swift","type":"file","fileType":"swift","highlights":[{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14}]},"building-todo-ui-reminder-03-contentview-03.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-03-contentview-03.png","variants":[{"url":"\/images\/building-todo-ui-reminder-03-contentview-03@2x.png","traits":["2x","light"]}]},"building-todo-ui-reminder-05-contentview-present-addreminder-05.mp4":{"poster":null,"alt":null,"type":"video","identifier":"building-todo-ui-reminder-05-contentview-present-addreminder-05.mp4","variants":[{"url":"\/videos\/building-todo-ui-reminder-05-contentview-present-addreminder-05.mp4","traits":["1x","light"]},{"url":"\/videos\/building-todo-ui-reminder-05-contentview-present-addreminder-05~dark.mp4","traits":["1x","dark"]}]},"building-todo-ui-reminder-01-02.swift":{"syntax":"swift","content":["import Foundation","","struct Reminder {","  var title: String","  var isCompleted = false","}",""],"fileName":"Reminder.swift","identifier":"building-todo-ui-reminder-01-02.swift","type":"file","fileType":"swift","highlights":[{"line":3},{"line":4},{"line":5},{"line":6},{"line":7}]},"building-todo-ui-reminder-05-contentview-present-addreminder-04.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  @State","  private var isAddReminderDialogPresented = false","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($reminders) { $reminder in","      HStack {","        Image(systemName: reminder.isCompleted","              ? \"largecircle.fill.circle\"","              : \"circle\")","          .imageScale(.large)","          .foregroundColor(.accentColor)","          .onTapGesture {","            reminder.isCompleted.toggle()","          }","        Text(reminder.title)","      }","    }","    .toolbar {","      ToolbarItemGroup(placement: .bottomBar) {","        Button(action: presentAddReminderView) {","          HStack {","            Image(systemName: \"plus.circle.fill\")","            Text(\"New Reminder\")","          }","        }","        Spacer()","      }","    }","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      ContentView()","        .navigationTitle(\"Reminders\")","    }","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-05-contentview-present-addreminder-04.swift","type":"file","fileType":"swift","highlights":[{"line":44},{"line":45},{"line":46},{"line":47}]},"building-todo-ui-reminder-04-addreminderview-04.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-04-addreminderview-04.png","variants":[{"url":"\/images\/building-todo-ui-reminder-04-addreminderview-04@2x.png","traits":["2x","light"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Create-a-Styleable-Toggle#Title":{"role":"pseudoSymbol","title":"Title","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Create-a-Styleable-Toggle#Title","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-create-a-styleable-toggle#Title"},"building-todo-ui-reminder-05-contentview-present-addreminder-05.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  @State","  private var isAddReminderDialogPresented = false","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($reminders) { $reminder in","      HStack {","        Image(systemName: reminder.isCompleted","              ? \"largecircle.fill.circle\"","              : \"circle\")","          .imageScale(.large)","          .foregroundColor(.accentColor)","          .onTapGesture {","            reminder.isCompleted.toggle()","          }","        Text(reminder.title)","      }","    }","    .toolbar {","      ToolbarItemGroup(placement: .bottomBar) {","        Button(action: presentAddReminderView) {","          HStack {","            Image(systemName: \"plus.circle.fill\")","            Text(\"New Reminder\")","          }","        }","        Spacer()","      }","    }","    .sheet(isPresented: $isAddReminderDialogPresented) {","      AddReminderView { reminder in","      }","    }","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      ContentView()","        .navigationTitle(\"Reminders\")","    }","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-05-contentview-present-addreminder-05.swift","type":"file","fileType":"swift","highlights":[{"line":39},{"line":40},{"line":41},{"line":42}]},"https://firebase.google.com/docs/emulator-suite":{"title":"Firebase Local Emulator Suite","titleInlineContent":[{"type":"text","text":"Firebase Local Emulator Suite"}],"type":"link","identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite","url":"https:\/\/firebase.google.com\/docs\/emulator-suite"},"building-todo-ui-reminder-04-addreminderview-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  var body: some View {","    Form {","      Text(\"Hello, World!\")","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView()","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-04-addreminderview-02.swift","type":"file","fileType":"swift","highlights":[{"line":5},{"line":6},{"line":7}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite":{"role":"project","title":"Developing locally with the Emulator Suite","estimatedTime":"25min","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite"},"sectionintros.007.mp4":{"poster":null,"alt":null,"type":"video","identifier":"sectionintros.007.mp4","variants":[{"url":"\/videos\/sectionintros.007.mp4","traits":["1x","light"]}]},"building-todo-ui-reminder-03-contentview-01.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-03-contentview-01.png","variants":[{"url":"\/images\/building-todo-ui-reminder-03-contentview-01@2x.png","traits":["2x","light"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Extract-Row-View#Title":{"role":"pseudoSymbol","title":"Title","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Title","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-extract-row-view#Title"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Create-a-Dialog-for-Adding-New-Reminders":{"role":"pseudoSymbol","title":"Create a Dialog for Adding New Reminders","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Dialog-for-Adding-New-Reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Create-a-Dialog-for-Adding-New-Reminders"},"building-todo-ui-reminder-02-contentview-08.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-02-contentview-08.png","variants":[{"url":"\/images\/building-todo-ui-reminder-02-contentview-08@2x.png","traits":["2x","light"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder":{"role":"pseudoSymbol","title":"Add a method to the View Model for toggling the completion state of a reminder","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder"},"building-todo-ui-reminder-04-addreminderview-04.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  @State","  private var reminder = Reminder(title: \"\")","","  var body: some View {","    Form {","      TextField(\"Title\", text: $reminder.title)","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView()","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-04-addreminderview-04.swift","type":"file","fileType":"swift","highlights":[{"line":9}]},"building-todo-ui-reminder-02-reminder-02.swift":{"syntax":"swift","content":["import Foundation","","struct Reminder: Identifiable {","  let id = UUID()","  var title: String","  var isCompleted = false","}","","extension Reminder {","  static let samples = [","    Reminder(title: \"Build sample app\", isCompleted: true),","    Reminder(title: \"Create tutorial\"),","    Reminder(title: \"???\"),","    Reminder(title: \"PROFIT!\"),","  ]","}"],"fileName":"Reminder.swift","identifier":"building-todo-ui-reminder-02-reminder-02.swift","type":"file","fileType":"swift","highlights":[{"line":3},{"line":4}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM":{"role":"project","title":"Implementing Model, View, ViewModel (MVVM)","estimatedTime":"20min","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-implementing-mvvm"},"building-todo-ui-reminder-03-contentview-03.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  var body: some View {","    List(reminders) { reminder in","      HStack {","        Image(systemName: reminder.isCompleted","              ? \"largecircle.fill.circle\"","              : \"circle\")","          .imageScale(.large)","          .foregroundColor(.accentColor)","          .onTapGesture {","            reminder.isCompleted.toggle()","          }","        Text(reminder.title)","      }","    }","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-03-contentview-03.swift","type":"file","fileType":"swift","highlights":[{"line":16}]},"building-todo-ui-reminder-04-addreminderview-06.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  @State","  private var reminder = Reminder(title: \"\")","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","      }","      .toolbar {","        ToolbarItem(placement: .confirmationAction) {","          Button(action: {}) {","            Text(\"Add\")","          }","        }","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView()","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-04-addreminderview-06.swift","type":"file","fileType":"swift","highlights":[{"line":13},{"line":14},{"line":15},{"line":16},{"line":17}]},"building-todo-ui-reminder-02-contentview-06.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  var body: some View {","    HStack {","      Image(systemName: \"circle\")","        .imageScale(.large)","        .foregroundColor(.accentColor)","      Text(\"Hello, world!\")","    }","    \/\/ .padding() <-- remove this line","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    ContentView()","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-02-contentview-06.swift","type":"file","fileType":"swift","highlights":[{"line":14}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Connecting-Your-App-to-Firebase":{"role":"article","title":"Connecting Your App to Firebase","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Connecting-Your-App-to-Firebase","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/connecting-your-app-to-firebase"},"building-todo-ui-reminder-05-contentview-present-addreminder-04.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-05-contentview-present-addreminder-04.png","variants":[{"url":"\/images\/building-todo-ui-reminder-05-contentview-present-addreminder-04@2x.png","traits":["2x","light"]}]},"building-todo-ui-xcode-new-project.png":{"alt":"","type":"image","identifier":"building-todo-ui-xcode-new-project.png","variants":[{"url":"\/images\/building-todo-ui-xcode-new-project@2x.png","traits":["2x","light"]},{"url":"\/images\/building-todo-ui-xcode-new-project~dark@2x.png","traits":["2x","dark"]}]},"building-todo-ui-reminder-02-contentview-06.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-02-contentview-06.png","variants":[{"url":"\/images\/building-todo-ui-reminder-02-contentview-06@2x.png","traits":["2x","light"]},{"url":"\/images\/building-todo-ui-reminder-02-contentview-06~dark@2x.png","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Building-a-Simple-UI":{"role":"article","title":"Building a Simple UI","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-a-Simple-UI","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/building-a-simple-ui"},"Xcode 14":{"title":"Xcode 14","type":"xcodeRequirement","identifier":"Xcode 14","url":"https:\/\/xcodereleases.com\/"},"building-todo-ui-reminder-03-contentview-05.mp4":{"poster":null,"alt":null,"type":"video","identifier":"building-todo-ui-reminder-03-contentview-05.mp4","variants":[{"url":"\/videos\/building-todo-ui-reminder-03-contentview-05.mp4","traits":["1x","light"]},{"url":"\/videos\/building-todo-ui-reminder-03-contentview-05~dark.mp4","traits":["1x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI":{"role":"project","title":"Building a Simple Todo List UI","estimatedTime":"25min","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui"},"sectionintros.004.mp4":{"poster":null,"alt":null,"type":"video","identifier":"sectionintros.004.mp4","variants":[{"url":"\/videos\/sectionintros.004.mp4","traits":["1x","light"]}]},"01-building-a-simple-todo-list-ui.zip":{"checksum":"fc85843436b4c1cc083029cf71350bbb4ca29ea04d58a7061701d97799c8fec68e4e6585ba13fe9e70e5af6532654d5a09c024845a5b4191a9d72b5fdc5f6007","type":"download","identifier":"01-building-a-simple-todo-list-ui.zip","url":"\/downloads\/01-building-a-simple-todo-list-ui.zip"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-adding-new-reminders":{"role":"pseudoSymbol","title":"Add a method to the View Model for adding new reminders","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-adding-new-reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Add-a-method-to-the-View-Model-for-adding-new-reminders"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Connect-your-app-to-the-Emulator-Suite":{"role":"pseudoSymbol","title":"Connect your app to the Emulator Suite","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-your-app-to-the-Emulator-Suite","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Connect-your-app-to-the-Emulator-Suite"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project":{"role":"pseudoSymbol","title":"Use launch arguments to switch between the Emulator and your Firebase project","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project"},"building-todo-ui-new-swiftui-file.png":{"alt":"","type":"image","identifier":"building-todo-ui-new-swiftui-file.png","variants":[{"url":"\/images\/building-todo-ui-new-swiftui-file@2x.png","traits":["2x","light"]},{"url":"\/images\/building-todo-ui-new-swiftui-file~dark@2x.png","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Install-the-Firebase-CLI":{"role":"pseudoSymbol","title":"Install the Firebase CLI","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Install-the-Firebase-CLI","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Install-the-Firebase-CLI"},"building-todo-ui-reminder-04-addreminderview-01.png":{"alt":"","type":"image","identifier":"building-todo-ui-reminder-04-addreminderview-01.png","variants":[{"url":"\/images\/building-todo-ui-reminder-04-addreminderview-01@2x.png","traits":["2x","light"]}]},"building-todo-ui-reminder-05-contentview-present-addreminder-06.swift":{"syntax":"swift","content":["import SwiftUI","","struct ContentView: View {","  @State","  private var reminders = Reminder.samples","","  @State","  private var isAddReminderDialogPresented = false","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($reminders) { $reminder in","      HStack {","        Image(systemName: reminder.isCompleted","              ? \"largecircle.fill.circle\"","              : \"circle\")","          .imageScale(.large)","          .foregroundColor(.accentColor)","          .onTapGesture {","            reminder.isCompleted.toggle()","          }","        Text(reminder.title)","      }","    }","    .toolbar {","      ToolbarItemGroup(placement: .bottomBar) {","        Button(action: presentAddReminderView) {","          HStack {","            Image(systemName: \"plus.circle.fill\")","            Text(\"New Reminder\")","          }","        }","        Spacer()","      }","    }","    .sheet(isPresented: $isAddReminderDialogPresented) {","      AddReminderView { reminder in","        reminders.append(reminder)","      }","    }","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      ContentView()","        .navigationTitle(\"Reminders\")","    }","  }","}"],"fileName":"ContentView.swift","identifier":"building-todo-ui-reminder-05-contentview-present-addreminder-06.swift","type":"file","fileType":"swift","highlights":[{"line":41}]},"building-todo-ui-reminder-06-addreminder-brushup-01.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  enum FocusableField: Hashable {","    case title","  }","","  @State","  private var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  var onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","      }","      .toolbar {","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(\"Add\")","          }","        }","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-06-addreminder-brushup-01.swift","type":"file","fileType":"swift","highlights":[{"line":4},{"line":5},{"line":6},{"line":7}]},"https://peterfriese.dev/posts/swiftui-list-item-bindings-behind-the-scenes/":{"title":"SwiftUI List Bindings - Behind the Scenes","titleInlineContent":[{"type":"text","text":"SwiftUI List Bindings - Behind the Scenes"}],"type":"link","identifier":"https:\/\/peterfriese.dev\/posts\/swiftui-list-item-bindings-behind-the-scenes\/","url":"https:\/\/peterfriese.dev\/posts\/swiftui-list-item-bindings-behind-the-scenes\/"},"doc://com.example.MakeItSo/tutorials/MakeItSo":{"role":"overview","title":"SwiftUI and Firebase","abstract":[{"type":"text","text":"Learn how to use Firebase in SwiftUI apps by building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a replica of Apple’s Reminders app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo","kind":"overview","type":"topic","url":"\/tutorials\/makeitso"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Create-a-View-Model-and-connect-it-to-the-RemindersListView":{"role":"pseudoSymbol","title":"Create a View Model and connect it to the RemindersListView","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Create-a-View-Model-and-connect-it-to-the-RemindersListView","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Create-a-View-Model-and-connect-it-to-the-RemindersListView"},"building-todo-ui-reminder-06-addreminder-brushup-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  enum FocusableField: Hashable {","    case title","  }","","  @FocusState","  private var focusedField: FocusableField?","","  @State","  private var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  var onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","      }","      .toolbar {","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(\"Add\")","          }","        }","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-06-addreminder-brushup-02.swift","type":"file","fileType":"swift","highlights":[{"line":8},{"line":9},{"line":10}]},"https://www.hackingwithswift.com/swift/5.2/callasfunction":{"title":"Callable values of user-defined nominal types – available from Swift 5.2","titleInlineContent":[{"type":"text","text":"Callable values of user-defined nominal types – available from Swift 5.2"}],"type":"link","identifier":"https:\/\/www.hackingwithswift.com\/swift\/5.2\/callasfunction","url":"https:\/\/www.hackingwithswift.com\/swift\/5.2\/callasfunction"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Pass-Data-From-the-Child-View":{"role":"pseudoSymbol","title":"Pass Data From the Child View","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Pass-Data-From-the-Child-View","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Pass-Data-From-the-Child-View"},"building-todo-ui-reminder-06-addreminder-brushup-06.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  enum FocusableField: Hashable {","    case title","  }","","  @FocusState","  private var focusedField: FocusableField?","","  @State","  private var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  var onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","          .focused($focusedField, equals: .title)","      }","      .navigationTitle(\"New Reminder\")","      .navigationBarTitleDisplayMode(.inline)","      .toolbar {","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(\"Add\")","          }","          .disabled(reminder.title.isEmpty)","        }","      }","      .onAppear {","        focusedField = .title","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-06-addreminder-brushup-06.swift","type":"file","fileType":"swift","highlights":[{"line":30},{"line":31}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Organise-the-Project-Files":{"role":"pseudoSymbol","title":"Organise the Project Files","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Organise-the-Project-Files","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Organise-the-Project-Files"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Create-a-Reminder-Model-and-Add-some-Test-Data":{"role":"pseudoSymbol","title":"Create a Reminder Model and Add some Test Data","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Reminder-Model-and-Add-some-Test-Data","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Create-a-Reminder-Model-and-Add-some-Test-Data"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Add-Firebase-SDKs-to-Your-App":{"role":"pseudoSymbol","title":"Add Firebase SDKs to Your App","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-Firebase-SDKs-to-Your-App","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Add-Firebase-SDKs-to-Your-App"},"building-todo-ui-reminder-06-addreminder-brushup-05.swift":{"syntax":"swift","content":["import SwiftUI","","struct AddReminderView: View {","  enum FocusableField: Hashable {","    case title","  }","","  @FocusState","  private var focusedField: FocusableField?","","  @State","  private var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  var onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","          .focused($focusedField, equals: .title)","      }","      .toolbar {","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(\"Add\")","          }","          .disabled(reminder.title.isEmpty)","        }","      }","      .onAppear {","        focusedField = .title","      }","    }","  }","}","","struct AddReminderView_Previews: PreviewProvider {","  static var previews: some View {","    AddReminderView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"AddReminderView.swift","identifier":"building-todo-ui-reminder-06-addreminder-brushup-05.swift","type":"file","fileType":"swift","highlights":[{"line":35}]}}}