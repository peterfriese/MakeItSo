{"variants":[{"paths":["\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will create a repository for managing reminders, connect it to the view model you built earlier, and star adding reminders to the repository."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Download the project files to begin building this project, and follow the steps below."}]}],"estimatedTimeInMinutes":25,"title":"Storing data in Cloud Firestore","image":"hero-intro-to-cloud-firestore.png","xcodeRequirement":"Xcode 14","chapter":"Storing Data in the Cloud","kind":"hero","backgroundImage":"hero-intro-to-cloud-firestore.png","projectFiles":"02-storing-data-in-cloud-firestore.zip"},{"kind":"tasks","tasks":[{"anchor":"Implement-a-repository","title":"Implement a repository","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A repository is a a software design pattern that provides an abstraction of the the data storage layer of your app. Repositories provide some fundamental operations for working with data: creating, reading, updating, and deleting (CRUD)."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this and the next parts of the tutorial, you will create a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", which you will connect to the "},{"type":"codeVoice","code":"RemindersListView"},{"type":"text","text":" that you implemented earlier. First, you will write code to add new reminders to Firestore using the "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":"."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select the "},{"type":"codeVoice","code":"Features\/Reminders"},{"type":"text","text":" folder of your project, and create a new folder named "},{"type":"codeVoice","code":"Repositories"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"storing-data-in-cloud-firestore-01-create-repository-01.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Select the "},{"type":"codeVoice","code":"Repositories"},{"type":"text","text":" folder, and create a new Swift file named "},{"type":"codeVoice","code":"RemindersRepository.swift"},{"type":"text","text":" as a child of "},{"type":"codeVoice","code":"Repositories"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"storing-data-in-cloud-firestore-01-create-repository-02.png"},{"code":"storing-data-in-cloud-firestore-01-RemindersRepository-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Create a class named "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and conform it to the "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":" protocol."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"storing-data-in-cloud-firestore-01-RemindersRepository-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a new property named "},{"type":"codeVoice","code":"reminders"},{"type":"text","text":" and initialise it with an empty array."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"storing-data-in-cloud-firestore-01-RemindersRepository-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add the "},{"type":"codeVoice","code":"@Published"},{"type":"text","text":" property wrapper to mark this property as published."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Implement-a-method-for-adding-new-reminders-to-the-repository","title":"Implement a method for adding new reminders to the repository","contentSection":[{"kind":"contentAndMedia","content":[],"mediaPosition":"trailing"}],"stepsSection":[{"code":"storing-data-in-cloud-firestore-02-RemindersRepository-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a new method "},{"type":"codeVoice","code":"addReminder"},{"type":"text","text":" to "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"storing-data-in-cloud-firestore-02-RemindersRepository-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Import "},{"type":"codeVoice","code":"FirebaseFirestore"},{"type":"text","text":" and "},{"type":"codeVoice","code":"FirebaseFirestoreSwift"},{"type":"text","text":"."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Firebase is mostly implemented in Objective-C, and Firestore is mostly implemented in C++. "},{"type":"codeVoice","code":"FirebaseFirestoreSwift"},{"type":"text","text":" contains additinal protocols and property wrappers that you will be using in the following steps."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"code":"storing-data-in-cloud-firestore-02-RemindersRepository-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Get a reference to your app’s Firestore instance."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"At a later stage in this tutorial, you will use a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Dependency Injection container"}]},{"type":"text","text":" for managing dependencies between the individual components of the app. For now, it is OK to hardcode this dependency."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"code":"storing-data-in-cloud-firestore-02-RemindersRepository-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Construct a path to the Firestore collection in which you will store all reminders."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"storing-data-in-cloud-firestore-02-RemindersRepository-05.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Call "},{"type":"codeVoice","code":"addDocument(from:)"},{"type":"text","text":" to create a new Firestore document using the data of the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" struct. This call can throw an exception, so you need to call it using "},{"type":"codeVoice","code":"try"},{"type":"text","text":"."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You will be handling exceptions in the UI, so you’re able to provide meaningful feedback to the user."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"style":"warning","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The compiler will now show an error message saying that"}]},{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Instance method ‘addDocument(from:encoder:completion:)’ requires that ‘Reminder’ conform to ‘Encodable’"}]},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is expected, and you will fix this in the next section."}]}],"type":"aside","name":"Warning"}]},{"anchor":"Conform-Reminder-to-Codable","title":"Conform Reminder to Codable","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Firestore supports Swift’s Codable protocol, which makes mapping Firestore documents to Swift structs (and vice versa) a lot less work than implementing the mapping manually."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this section, you will make the "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":" struct codable, so it can be saved to Firestore with one line of code."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"storing-data-in-cloud-firestore-03-Reminder-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to "},{"type":"codeVoice","code":"Reminder.swift"},{"type":"text","text":", and note that it conforms to the "},{"type":"codeVoice","code":"Identifiable"},{"type":"text","text":" protocol. This is to make sure you can use "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":" instances in a "},{"type":"codeVoice","code":"List"},{"type":"text","text":" view."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"List"},{"type":"text","text":" requires its elements to be identifiable, so that it can correctly determine which element is which when inserting or removing elements. This allows "},{"type":"codeVoice","code":"List"},{"type":"text","text":" to implement fluent animations."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"code":"storing-data-in-cloud-firestore-03-Reminder-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Mark "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":" as "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":"."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Sometimes, you might want to change the name of some attributes when mapping data using "},{"type":"codeVoice","code":"Codable"},{"type":"text","text":", or you might want to execlude some attributes from being mapped. This can be achieved by providing a "},{"type":"codeVoice","code":"CodingKeys"},{"type":"text","text":" enum (see Apple’s documentation "},{"type":"reference","isActive":true,"identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/archives_and_serialization\/encoding_and_decoding_custom_types#2904057"},{"type":"text","text":")."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Since this is not required here, there is no need to provide a "},{"type":"codeVoice","code":"CodingKeys"},{"type":"text","text":" enum."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"code":"storing-data-in-cloud-firestore-03-Reminder-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Import "},{"type":"codeVoice","code":"FirebaseFirestoreSwift"},{"type":"text","text":" and mark the "},{"type":"codeVoice","code":"id"},{"type":"text","text":" property using the "},{"type":"codeVoice","code":"@DocumentID"},{"type":"text","text":" property wrapper."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"@DocumentID"},{"type":"text","text":" property wrapper will populate its property with the document ID when the document is read from Firestore. This is useful when you later want to update the document, as it allows you to use the document ID to construct the document path."}]}],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Connect-the-view-model-to-the-repository","title":"Connect the view model to the repository","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"So far, you’ve used "},{"type":"codeVoice","code":"RemindersListViewModel"},{"type":"text","text":" to store all reminders in-memory. In this step, you will connect the "},{"type":"codeVoice","code":"RemninderRepository"},{"type":"text","text":" you just created to "},{"type":"codeVoice","code":"ReminderViewModel"},{"type":"text","text":". This will allow you to use Firestore to store and retrieve reminders."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":"storing-data-in-cloud-firestore-04-RemindersListViewModel-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Navigate to "},{"type":"codeVoice","code":"RemindersListViewModel.swift"},{"type":"text","text":", and instantiate the repository."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"At a later stage in this tutorial, you will use a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Dependency Injection container"}]},{"type":"text","text":" for managing dependencies between the individual components of the app. For now, it is OK to hardcode this dependency."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"code":"storing-data-in-cloud-firestore-04-RemindersListViewModel-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update "},{"type":"codeVoice","code":"addReminder"},{"type":"text","text":". Instead of adding new reminders to the view model’s "},{"type":"codeVoice","code":"reminders"},{"type":"text","text":" property, forward the call to the repository."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"storing-data-in-cloud-firestore-04-RemindersListViewModel-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement some basic error handling."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]},{"anchor":"Wrap-up","title":"Wrap up","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Congratulations! In this part of the tutorial, you connected your todo list app to Firestore. You created a repository for managing reminders, and implemented adding new reminders to Firestore."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can now run the app and add a couple of reminders to Firestore."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure the Firebase Emulator Suite is still running: Point your browser to "},{"type":"reference","isActive":true,"identifier":"http:\/\/127.0.0.1:4000\/firestore\/data"},{"type":"text","text":". If you don’t see the Firestore tab of the Firebase Emulator Suite, follow the steps in the "},{"type":"reference","isActive":true,"identifier":""},{"type":"text","text":" tutorial."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"storing-data-in-cloud-firestore-05-run-the-app-01.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure your app is configured to connect to the Firebase Emulator: open the launch configuration and ensure the check box on the "},{"type":"codeVoice","code":"-useEmulator YES"},{"type":"text","text":" argument is checked."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"storing-data-in-cloud-firestore-05-run-the-app-02.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Click on the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Play"}]},{"type":"text","text":" button (or press "},{"type":"emphasis","inlineContent":[{"type":"text","text":"CMD+R"}]},{"type":"text","text":") to run the app on the iOS Simulator."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"storing-data-in-cloud-firestore-05-run-the-app-03.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Tap on the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"+ New Reminder"}]},{"type":"text","text":" button to open the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"New Reminder"}]},{"type":"text","text":" dialog. Then, enter a title for your new reminder, and tap the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Add"}]},{"type":"text","text":" button to save the reminder."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"storing-data-in-cloud-firestore-05-run-the-app-04.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You should now see a new document in the Firstore Emulator."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you don’t see a document, press "},{"type":"emphasis","inlineContent":[{"type":"text","text":"CMD+R"}]},{"type":"text","text":" to refresh the browser window."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":"storing-data-in-cloud-firestore-05-run-the-app.mp4"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You might notice that the UI of your app doesn’t update - no matter how many new reminders you add. This is becaue your app doens’t listen to updates yet. Proceed to the next chapter of the tutorial to implement real-time sync."}]}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Retrieving data from Cloud Firestore in real-time","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}]}],"identifier":{"url":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Storing data in Cloud Firestore","categoryPathComponent":"MakeItSo","role":"project","category":"MakeItSo"},"hierarchy":{"modules":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-a-Simple-UI","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-New-Project"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Reminder-Model-and-Add-some-Test-Data"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Display-a-List-of-Reminders"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Mark-Reminders-as-isCompleted"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Dialog-for-Adding-New-Reminders"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Pass-Data-From-the-Child-View"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Present-the-Add-Reminder-Dialog"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Brush-up-the-UI"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Wrap-Up"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Organise-the-Project-Files"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Create-a-View-Model-and-connect-it-to-the-RemindersListView"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-adding-new-reminders"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-Reusable-UI-Components","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Title"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Create-a-Styleable-Toggle","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Create-a-Styleable-Toggle#Title"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Connecting-Your-App-to-Firebase","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Create-a-New-Firebase-Project"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Register-Your-App-with-Firebase"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-a-Firebase-Configuration-File"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-Firebase-SDKs-to-Your-App"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Initialize-Firebase-in-Your-App"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Launch-the-App-to-Verify-Setup"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Install-the-Firebase-CLI"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Launch-the-Emulator-and-view-the-Emulator-dashboard"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-your-app-to-the-Emulator-Suite"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Storing-Data-in-the-Cloud","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Intro-to-Cloud-Firestore","sections":[]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Implement-a-repository"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Implement-a-method-for-adding-new-reminders-to-the-repository"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Conform-Reminder-to-Codable"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Connect-the-view-model-to-the-repository"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Wrap-up"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Implement-a-snapshot-listener"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Manage-the-lifecycle-of-the-snapshot-listener"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Connect-the-view-model"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Run-the-app-to-experience-real-time-sync"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Clean-up"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore#Mark-reminders-as-completed"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore#Edit-reminders"}]}]}],"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo","paths":[["doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo","doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase","doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Storing-Data-in-the-Cloud"]]},"references":{"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project":{"role":"project","title":"Adding Firebase to Your Project","estimatedTime":"25min","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Create-a-Dialog-for-Adding-New-Reminders":{"role":"pseudoSymbol","title":"Create a Dialog for Adding New Reminders","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Dialog-for-Adding-New-Reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Create-a-Dialog-for-Adding-New-Reminders"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Create-a-Styleable-Toggle":{"role":"project","title":"Creating a Styleable Toggle","estimatedTime":"25min","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Create-a-Styleable-Toggle","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-create-a-styleable-toggle"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Initialize-Firebase-in-Your-App":{"role":"pseudoSymbol","title":"Initialize Firebase in Your App","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Initialize-Firebase-in-Your-App","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Initialize-Firebase-in-Your-App"},"storing-data-in-cloud-firestore-04-RemindersListViewModel-03.swift":{"syntax":"swift","content":["import Foundation","","class RemindersListViewModel: ObservableObject {","  @Published","  var reminders = Reminder.samples","","  @Published","  var errorMessage: String?","","  private var remindersRepository: RemindersRepository =  RemindersRepository()","","  func addReminder(_ reminder: Reminder) {","    do {","      try remindersRepository.addReminder(reminder)","      errorMessage = nil","    }","    catch {","      print(error)","      errorMessage = error.localizedDescription","    }","  }","","  func toggleCompleted(_ reminder: Reminder) {","    if let index = reminders.firstIndex(where: { $0.id == reminder.id} ) {","      reminders[index].isCompleted.toggle()","    }","  }","}"],"fileName":"RemindersListViewModel.swift","identifier":"storing-data-in-cloud-firestore-04-RemindersListViewModel-03.swift","type":"file","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite":{"role":"pseudoSymbol","title":"Connect to your Firebase project and enable the Emulator Suite","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite"},"https://developer.apple.com/documentation/foundation/archives_and_serialization/encoding_and_decoding_custom_types#2904057":{"title":"Encoding and Decoding Custom Types","titleInlineContent":[{"type":"text","text":"Encoding and Decoding Custom Types"}],"type":"link","identifier":"https:\/\/developer.apple.com\/documentation\/foundation\/archives_and_serialization\/encoding_and_decoding_custom_types#2904057","url":"https:\/\/developer.apple.com\/documentation\/foundation\/archives_and_serialization\/encoding_and_decoding_custom_types#2904057"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Brush-up-the-UI":{"role":"pseudoSymbol","title":"Brush up the UI","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Brush-up-the-UI","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Brush-up-the-UI"},"doc://com.example.MakeItSo/tutorials/MakeItSo/04-Updating-Data-in-Cloud-Firestore#Mark-reminders-as-completed":{"role":"pseudoSymbol","title":"Mark reminders as completed","abstract":[{"type":"text","text":"So far, the app you’re building can help you add an keep track of your todos, but you cannot mark them as completed."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore#Mark-reminders-as-completed","kind":"section","type":"section","url":"\/tutorials\/makeitso\/04-updating-data-in-cloud-firestore#Mark-reminders-as-completed"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Implement-a-snapshot-listener":{"role":"pseudoSymbol","title":"Implement a snapshot listener","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Implement-a-snapshot-listener","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Implement-a-snapshot-listener"},"storing-data-in-cloud-firestore-03-Reminder-01.swift":{"syntax":"swift","content":["import Foundation","","struct Reminder: Identifiable {","  let id = UUID()","  var title: String","  var isCompleted = false","}","","extension Reminder {","  static let samples = [","    Reminder(title: \"Build sample app\", isCompleted: true),","    Reminder(title: \"Create tutorial\"),","    Reminder(title: \"???\"),","    Reminder(title: \"PROFIT!\"),","  ]","}"],"fileName":"Reminder.swift","identifier":"storing-data-in-cloud-firestore-03-Reminder-01.swift","type":"file","fileType":"swift","highlights":[{"line":3}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore":{"role":"project","title":"Storing data in Cloud Firestore","estimatedTime":"25min","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Connect-the-view-model-to-the-repository":{"role":"pseudoSymbol","title":"Connect the view model to the repository","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Connect-the-view-model-to-the-repository","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Connect-the-view-model-to-the-repository"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Create-a-Reminder-Model-and-Add-some-Test-Data":{"role":"pseudoSymbol","title":"Create a Reminder Model and Add some Test Data","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Reminder-Model-and-Add-some-Test-Data","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Create-a-Reminder-Model-and-Add-some-Test-Data"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Create-a-View-Model-and-connect-it-to-the-RemindersListView":{"role":"pseudoSymbol","title":"Create a View Model and connect it to the RemindersListView","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Create-a-View-Model-and-connect-it-to-the-RemindersListView","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Create-a-View-Model-and-connect-it-to-the-RemindersListView"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Add-Firebase-SDKs-to-Your-App":{"role":"pseudoSymbol","title":"Add Firebase SDKs to Your App","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-Firebase-SDKs-to-Your-App","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Add-Firebase-SDKs-to-Your-App"},"storing-data-in-cloud-firestore-03-Reminder-03.swift":{"syntax":"swift","content":["import Foundation","import FirebaseFirestoreSwift","","struct Reminder: Identifiable, Codable {","  @DocumentID","  var id: String?","  var title: String","  var isCompleted = false","}","","extension Reminder {","  static let samples = [","    Reminder(title: \"Build sample app\", isCompleted: true),","    Reminder(title: \"Create tutorial\"),","    Reminder(title: \"???\"),","    Reminder(title: \"PROFIT!\"),","  ]","}"],"fileName":"Reminder.swift","identifier":"storing-data-in-cloud-firestore-03-Reminder-03.swift","type":"file","fileType":"swift","highlights":[{"line":2},{"line":5},{"line":6}]},"storing-data-in-cloud-firestore-02-RemindersRepository-02.swift":{"syntax":"swift","content":["import Foundation","import FirebaseFirestore","import FirebaseFirestoreSwift","","public class RemindersRepository: ObservableObject {","","  @Published","  var reminders = [Reminder]()","","  func addReminder(_ reminder: Reminder) throws {","  }","","}"],"fileName":"RemindersRepository.swift","identifier":"storing-data-in-cloud-firestore-02-RemindersRepository-02.swift","type":"file","fileType":"swift","highlights":[{"line":2},{"line":3}]},"storing-data-in-cloud-firestore-01-RemindersRepository-03.swift":{"syntax":"swift","content":["import Foundation","","public class RemindersRepository: ObservableObject {","","  @Published","  var reminders = [Reminder]()","","}"],"fileName":"RemindersRepository.swift","identifier":"storing-data-in-cloud-firestore-01-RemindersRepository-03.swift","type":"file","fileType":"swift","highlights":[{"line":5}]},"storing-data-in-cloud-firestore-05-run-the-app.mp4":{"poster":null,"alt":null,"type":"video","identifier":"storing-data-in-cloud-firestore-05-run-the-app.mp4","variants":[{"url":"\/videos\/storing-data-in-cloud-firestore-05-run-the-app.mp4","traits":["1x","light"]},{"url":"\/videos\/storing-data-in-cloud-firestore-05-run-the-app~dark.mp4","traits":["1x","dark"]}]},"Xcode 14":{"title":"Xcode 14","type":"xcodeRequirement","identifier":"Xcode 14","url":"https:\/\/xcodereleases.com\/"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Wrap-up":{"role":"pseudoSymbol","title":"Wrap up","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Wrap-up","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Wrap-up"},"storing-data-in-cloud-firestore-05-run-the-app-04.png":{"alt":null,"type":"image","identifier":"storing-data-in-cloud-firestore-05-run-the-app-04.png","variants":[{"url":"\/images\/storing-data-in-cloud-firestore-05-run-the-app-04@2x.png","traits":["2x","light"]},{"url":"\/images\/storing-data-in-cloud-firestore-05-run-the-app-04~dark@2x.png","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Storing-Data-in-the-Cloud":{"role":"article","title":"Storing Data in the Cloud","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Storing-Data-in-the-Cloud","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/storing-data-in-the-cloud"},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Building-Reusable-UI-Components":{"role":"article","title":"Building Reusable UI Components","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-Reusable-UI-Components","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/building-reusable-ui-components"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Organise-the-Project-Files":{"role":"pseudoSymbol","title":"Organise the Project Files","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Organise-the-Project-Files","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Organise-the-Project-Files"},"https://firebase.google.com/docs/emulator-suite":{"title":"Firebase Local Emulator Suite","titleInlineContent":[{"type":"text","text":"Firebase Local Emulator Suite"}],"type":"link","identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite","url":"https:\/\/firebase.google.com\/docs\/emulator-suite"},"storing-data-in-cloud-firestore-05-run-the-app-02.png":{"alt":null,"type":"image","identifier":"storing-data-in-cloud-firestore-05-run-the-app-02.png","variants":[{"url":"\/images\/storing-data-in-cloud-firestore-05-run-the-app-02@2x.png","traits":["2x","light"]},{"url":"\/images\/storing-data-in-cloud-firestore-05-run-the-app-02~dark@2x.png","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/04-Updating-Data-in-Cloud-Firestore#Edit-reminders":{"role":"pseudoSymbol","title":"Edit reminders","abstract":[{"type":"text","text":"So far, the app you’re building can help you add an keep track of your todos, but you cannot mark them as completed."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore#Edit-reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/04-updating-data-in-cloud-firestore#Edit-reminders"},"doc://com.example.MakeItSo/tutorials/MakeItSo":{"role":"overview","title":"SwiftUI and Firebase","abstract":[{"type":"text","text":"Learn how to use Firebase in SwiftUI apps by building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a replica of Apple’s Reminders app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo","kind":"overview","type":"topic","url":"\/tutorials\/makeitso"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time":{"role":"project","title":"Retrieving data from Cloud Firestore in real-time","estimatedTime":"25min","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Present-the-Add-Reminder-Dialog":{"role":"pseudoSymbol","title":"Present the Add Reminder Dialog","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Present-the-Add-Reminder-Dialog","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Present-the-Add-Reminder-Dialog"},"storing-data-in-cloud-firestore-03-Reminder-02.swift":{"syntax":"swift","content":["import Foundation","","struct Reminder: Identifiable, Codable {","  let id = UUID()","  var title: String","  var isCompleted = false","}","","extension Reminder {","  static let samples = [","    Reminder(title: \"Build sample app\", isCompleted: true),","    Reminder(title: \"Create tutorial\"),","    Reminder(title: \"???\"),","    Reminder(title: \"PROFIT!\"),","  ]","}"],"fileName":"Reminder.swift","identifier":"storing-data-in-cloud-firestore-03-Reminder-02.swift","type":"file","fileType":"swift","highlights":[{"line":3}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Manage-the-lifecycle-of-the-snapshot-listener":{"role":"pseudoSymbol","title":"Manage the lifecycle of the snapshot listener","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Manage-the-lifecycle-of-the-snapshot-listener","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Manage-the-lifecycle-of-the-snapshot-listener"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Connect-the-view-model":{"role":"pseudoSymbol","title":"Connect the view model","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Connect-the-view-model","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Connect-the-view-model"},"storing-data-in-cloud-firestore-04-RemindersListViewModel-02.swift":{"syntax":"swift","content":["import Foundation","","class RemindersListViewModel: ObservableObject {","  @Published","  var reminders = Reminder.samples","","  private var remindersRepository: RemindersRepository =  RemindersRepository()","","  func addReminder(_ reminder: Reminder) {","    remindersRepository.addReminder(reminder)","  }","","  func toggleCompleted(_ reminder: Reminder) {","    if let index = reminders.firstIndex(where: { $0.id == reminder.id} ) {","      reminders[index].isCompleted.toggle()","    }","  }","}"],"fileName":"RemindersListViewModel.swift","identifier":"storing-data-in-cloud-firestore-04-RemindersListViewModel-02.swift","type":"file","fileType":"swift","highlights":[{"line":10}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Clean-up":{"role":"pseudoSymbol","title":"Clean-up","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Clean-up","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Clean-up"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder":{"role":"pseudoSymbol","title":"Add a method to the View Model for toggling the completion state of a reminder","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder"},"storing-data-in-cloud-firestore-02-RemindersRepository-01.swift":{"syntax":"swift","content":["import Foundation","","public class RemindersRepository: ObservableObject {","","  @Published","  var reminders = [Reminder]()","","  func addReminder(_ reminder: Reminder) throws {","  }","","}"],"fileName":"RemindersRepository.swift","identifier":"storing-data-in-cloud-firestore-02-RemindersRepository-01.swift","type":"file","fileType":"swift","highlights":[{"line":8},{"line":9},{"line":10}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Intro-to-Cloud-Firestore":{"role":"article","title":"Cloud Firestore","estimatedTime":"5min","abstract":[{"type":"text","text":"Cloud Firestore is Firebase’s NoSQL cloud database for mobile, web, and server development."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Intro-to-Cloud-Firestore","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/01-intro-to-cloud-firestore"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Run-the-app-to-experience-real-time-sync":{"role":"pseudoSymbol","title":"Run the app to experience real-time sync","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Run-the-app-to-experience-real-time-sync","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Run-the-app-to-experience-real-time-sync"},"storing-data-in-cloud-firestore-05-run-the-app-03.png":{"alt":null,"type":"image","identifier":"storing-data-in-cloud-firestore-05-run-the-app-03.png","variants":[{"url":"\/images\/storing-data-in-cloud-firestore-05-run-the-app-03@2x.png","traits":["2x","light"]},{"url":"\/images\/storing-data-in-cloud-firestore-05-run-the-app-03~dark@2x.png","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Mark-Reminders-as-isCompleted":{"role":"pseudoSymbol","title":"Mark Reminders as isCompleted","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Mark-Reminders-as-isCompleted","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Mark-Reminders-as-isCompleted"},"storing-data-in-cloud-firestore-02-RemindersRepository-03.swift":{"syntax":"swift","content":["import Foundation","import FirebaseFirestore","import FirebaseFirestoreSwift","","public class RemindersRepository: ObservableObject {","","  @Published","  var reminders = [Reminder]()","","  func addReminder(_ reminder: Reminder) throws {","    Firestore","      .firestore()","  }","","}"],"fileName":"RemindersRepository.swift","identifier":"storing-data-in-cloud-firestore-02-RemindersRepository-03.swift","type":"file","fileType":"swift","highlights":[{"line":11},{"line":12}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Create-a-New-Project":{"role":"pseudoSymbol","title":"Create a New Project","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-New-Project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Create-a-New-Project"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM":{"role":"project","title":"Implementing Model, View, ViewModel (MVVM)","estimatedTime":"20min","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-implementing-mvvm"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Wrap-Up":{"role":"pseudoSymbol","title":"Wrap Up","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Wrap-Up","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Wrap-Up"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Display-a-List-of-Reminders":{"role":"pseudoSymbol","title":"Display a List of Reminders","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Display-a-List-of-Reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Display-a-List-of-Reminders"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Add-a-Firebase-Configuration-File":{"role":"pseudoSymbol","title":"Add a Firebase Configuration File","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-a-Firebase-Configuration-File","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Add-a-Firebase-Configuration-File"},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Connecting-Your-App-to-Firebase":{"role":"article","title":"Connecting Your App to Firebase","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Connecting-Your-App-to-Firebase","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/connecting-your-app-to-firebase"},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Building-a-Simple-UI":{"role":"article","title":"Building a Simple UI","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-a-Simple-UI","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/building-a-simple-ui"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Launch-the-App-to-Verify-Setup":{"role":"pseudoSymbol","title":"Launch the App to Verify Setup","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Launch-the-App-to-Verify-Setup","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Launch-the-App-to-Verify-Setup"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Implement-a-repository":{"role":"pseudoSymbol","title":"Implement a repository","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Implement-a-repository","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Implement-a-repository"},"doc://com.example.MakeItSo/tutorials/MakeItSo/04-Updating-Data-in-Cloud-Firestore":{"role":"project","title":"Updating data in Cloud Firestore","estimatedTime":"35min","abstract":[{"type":"text","text":"So far, the app you’re building can help you add an keep track of your todos, but you cannot mark them as completed."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/04-updating-data-in-cloud-firestore"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI":{"role":"project","title":"Building a Simple Todo List UI","estimatedTime":"25min","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Extract-Row-View#Title":{"role":"pseudoSymbol","title":"Title","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Title","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-extract-row-view#Title"},"storing-data-in-cloud-firestore-02-RemindersRepository-05.swift":{"syntax":"swift","content":["import Foundation","import FirebaseFirestore","import FirebaseFirestoreSwift","","public class RemindersRepository: ObservableObject {","","  @Published","  var reminders = [Reminder]()","","  func addReminder(_ reminder: Reminder) throws {","    try Firestore","      .firestore()","      .collection(\"reminders\")","      .addDocument(from: reminder)","  }","","}"],"fileName":"RemindersRepository.swift","identifier":"storing-data-in-cloud-firestore-02-RemindersRepository-05.swift","type":"file","fileType":"swift","highlights":[{"line":11},{"line":14}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Connect-your-app-to-the-Emulator-Suite":{"role":"pseudoSymbol","title":"Connect your app to the Emulator Suite","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-your-app-to-the-Emulator-Suite","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Connect-your-app-to-the-Emulator-Suite"},"storing-data-in-cloud-firestore-02-RemindersRepository-04.swift":{"syntax":"swift","content":["import Foundation","import FirebaseFirestore","import FirebaseFirestoreSwift","","public class RemindersRepository: ObservableObject {","","  @Published","  var reminders = [Reminder]()","","  func addReminder(_ reminder: Reminder) throws {","    Firestore","      .firestore()","      .collection(\"reminders\")","  }","","}"],"fileName":"RemindersRepository.swift","identifier":"storing-data-in-cloud-firestore-02-RemindersRepository-04.swift","type":"file","fileType":"swift","highlights":[{"line":13}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite":{"role":"project","title":"Developing locally with the Emulator Suite","estimatedTime":"25min","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Create-a-Styleable-Toggle#Title":{"role":"pseudoSymbol","title":"Title","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Create-a-Styleable-Toggle#Title","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-create-a-styleable-toggle#Title"},"02-storing-data-in-cloud-firestore.zip":{"checksum":"d4dba7ec57349ae3b4986529726ed3f98b735709d497f4c61f4e26ed04c1d607cce694ef32f20de6c30b8b605967621ad712174ea658677788d8ed11fa64db38","type":"download","identifier":"02-storing-data-in-cloud-firestore.zip","url":"\/downloads\/02-storing-data-in-cloud-firestore.zip"},"http://127.0.0.1:4000/firestore/data":{"title":"http:\/\/127.0.0.1:4000\/firestore\/data","titleInlineContent":[{"type":"text","text":"http:\/\/127.0.0.1:4000\/firestore\/data"}],"type":"link","identifier":"http:\/\/127.0.0.1:4000\/firestore\/data","url":"http:\/\/127.0.0.1:4000\/firestore\/data"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Install-the-Firebase-CLI":{"role":"pseudoSymbol","title":"Install the Firebase CLI","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Install-the-Firebase-CLI","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Install-the-Firebase-CLI"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Launch-the-Emulator-and-view-the-Emulator-dashboard":{"role":"pseudoSymbol","title":"Launch the Emulator and view the Emulator dashboard","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Launch-the-Emulator-and-view-the-Emulator-dashboard","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Launch-the-Emulator-and-view-the-Emulator-dashboard"},"storing-data-in-cloud-firestore-01-create-repository-02.png":{"alt":"","type":"image","identifier":"storing-data-in-cloud-firestore-01-create-repository-02.png","variants":[{"url":"\/images\/storing-data-in-cloud-firestore-01-create-repository-02@2x.png","traits":["2x","light"]},{"url":"\/images\/storing-data-in-cloud-firestore-01-create-repository-02~dark@2x.png","traits":["2x","dark"]}]},"hero-intro-to-cloud-firestore.png":{"alt":"","type":"image","identifier":"hero-intro-to-cloud-firestore.png","variants":[{"url":"\/images\/hero-intro-to-cloud-firestore.png","traits":["1x","light"]}]},"storing-data-in-cloud-firestore-01-create-repository-01.png":{"alt":"","type":"image","identifier":"storing-data-in-cloud-firestore-01-create-repository-01.png","variants":[{"url":"\/images\/storing-data-in-cloud-firestore-01-create-repository-01@2x.png","traits":["2x","light"]},{"url":"\/images\/storing-data-in-cloud-firestore-01-create-repository-01~dark@2x.png","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Conform-Reminder-to-Codable":{"role":"pseudoSymbol","title":"Conform Reminder to Codable","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Conform-Reminder-to-Codable","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Conform-Reminder-to-Codable"},"":{"title":"Developing Locally with the Emulator Suite","titleInlineContent":[{"type":"text","text":"Developing Locally with the Emulator Suite"}],"type":"link","identifier":"","url":""},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Extract-Row-View":{"role":"project","title":"Extracting the Reminder Row Into a Separate View","estimatedTime":"15min","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-extract-row-view"},"storing-data-in-cloud-firestore-01-RemindersRepository-01.swift":{"syntax":"swift","content":["import Foundation","","public class RemindersRepository: ObservableObject {","}"],"fileName":"RemindersRepository.swift","identifier":"storing-data-in-cloud-firestore-01-RemindersRepository-01.swift","type":"file","fileType":"swift","highlights":[{"line":3},{"line":4}]},"storing-data-in-cloud-firestore-04-RemindersListViewModel-01.swift":{"syntax":"swift","content":["import Foundation","","class RemindersListViewModel: ObservableObject {","  @Published","  var reminders = Reminder.samples","","  private var remindersRepository: RemindersRepository =  RemindersRepository()","","  func addReminder(_ reminder: Reminder) {","    reminders.append(reminder)","  }","","  func toggleCompleted(_ reminder: Reminder) {","    if let index = reminders.firstIndex(where: { $0.id == reminder.id} ) {","      reminders[index].isCompleted.toggle()","    }","  }","}"],"fileName":"RemindersListViewModel.swift","identifier":"storing-data-in-cloud-firestore-04-RemindersListViewModel-01.swift","type":"file","fileType":"swift","highlights":[{"line":7},{"line":8}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Implement-a-method-for-adding-new-reminders-to-the-repository":{"role":"pseudoSymbol","title":"Implement a method for adding new reminders to the repository","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Implement-a-method-for-adding-new-reminders-to-the-repository","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Implement-a-method-for-adding-new-reminders-to-the-repository"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Register-Your-App-with-Firebase":{"role":"pseudoSymbol","title":"Register Your App with Firebase","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Register-Your-App-with-Firebase","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Register-Your-App-with-Firebase"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project":{"role":"pseudoSymbol","title":"Use launch arguments to switch between the Emulator and your Firebase project","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Create-a-New-Firebase-Project":{"role":"pseudoSymbol","title":"Create a New Firebase Project ","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Create-a-New-Firebase-Project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Create-a-New-Firebase-Project"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Pass-Data-From-the-Child-View":{"role":"pseudoSymbol","title":"Pass Data From the Child View","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating s simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Pass-Data-From-the-Child-View","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Pass-Data-From-the-Child-View"},"storing-data-in-cloud-firestore-01-RemindersRepository-02.swift":{"syntax":"swift","content":["import Foundation","","public class RemindersRepository: ObservableObject {","","  var reminders = [Reminder]()","","}"],"fileName":"RemindersRepository.swift","identifier":"storing-data-in-cloud-firestore-01-RemindersRepository-02.swift","type":"file","fileType":"swift","highlights":[{"line":4},{"line":5},{"line":6}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-adding-new-reminders":{"role":"pseudoSymbol","title":"Add a method to the View Model for adding new reminders","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-adding-new-reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Add-a-method-to-the-View-Model-for-adding-new-reminders"},"storing-data-in-cloud-firestore-05-run-the-app-01.png":{"alt":null,"type":"image","identifier":"storing-data-in-cloud-firestore-05-run-the-app-01.png","variants":[{"url":"\/images\/storing-data-in-cloud-firestore-05-run-the-app-01@2x.png","traits":["2x","light"]}]}}}