{"variants":[{"paths":["\/tutorials\/makeitso\/04-updating-data-in-cloud-firestore"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"So far, the app you’re building can help you add an keep track of your todos, but you cannot mark them as completed."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this chapter, you will write code to mark reminders as completed - after all, getting things done is the ultimate purpose of a todo list app!"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You will also implement a dialog for editing reminders, and then update the reminder document in Firebase, using the repository you created earlier in this tutorial."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Download the project files to begin building this project, and follow the steps below."}]}],"estimatedTimeInMinutes":35,"title":"Updating data in Cloud Firestore","image":"hero-intro-to-cloud-firestore.png","xcodeRequirement":"Xcode 14","chapter":"Storing Data in the Cloud","kind":"hero","backgroundImage":"hero-intro-to-cloud-firestore.png","projectFiles":"04-updating-data-in-cloud-firestore.zip"},{"kind":"tasks","tasks":[{"anchor":"Mark-reminders-as-completed","title":"Mark reminders as completed","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Marking reminders as completed is a critical user journey in your app. You will implmenet this feature by adding code to the repository that can update a "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":". Then, you will implement an event handler that runs whenever the user toggles the state of a reminder’s completion state."}]}],"mediaPosition":"trailing","media":"sectionheader-01-mark-reminders-completed.gif"}],"stepsSection":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Begin by implementing the update functionality on the repository."}]},{"code":"04-updating-data-in-cloud-firestore-01-RemindersRepository-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"RemindersRepository.swift"},{"type":"text","text":", create a new method named "},{"type":"codeVoice","code":"updateReminder"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-01-RemindersRepository-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure the reminder has a document ID."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Since you can only update Firestore documents if you have their document ID, it is a progamming error if the reminders ID is "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", so it is OK to use "},{"type":"codeVoice","code":"fatalError"},{"type":"text","text":" to terminate the app."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-01-RemindersRepository-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Get a reference to the document you want to update."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-01-RemindersRepository-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"setData(from:merge)"},{"type":"text","text":" to update the document with the data from the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":"."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Keep in mind that Firestore is a NoSQL database, so another client might have added some other fields to the document in the database. By using "},{"type":"codeVoice","code":"merge: true"},{"type":"text","text":", you make sure that Firestore doesn’t overwrite the existing document with the values of "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":"."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the next few steps, you will enhance the view model so you can call the update functionality from the views in your app."}]},{"code":"04-updating-data-in-cloud-firestore-01-RemindersListViewModel-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"RemindersListViewModel.swift"},{"type":"text","text":", add a new method named "},{"type":"codeVoice","code":"updateReminder"},{"type":"text","text":", and forward the call to "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-01-RemindersListViewModel-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add some error handling code."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-01-RemindersListViewModel-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add some error handling code."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-01-RemindersListViewModel-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Replace "},{"type":"codeVoice","code":"toggleCompleted"},{"type":"text","text":" with "},{"type":"codeVoice","code":"setCompleted"},{"type":"text","text":". Inside the method, make an editable copy of the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" parameter, and set its "},{"type":"codeVoice","code":"isCompleted"},{"type":"text","text":" state to the value of the "},{"type":"codeVoice","code":"isCompleted"},{"type":"text","text":" parameter. Finally, call the "},{"type":"codeVoice","code":"updateReminder"},{"type":"text","text":" method you created in the previous step."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-01-RemindersListView-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"RemindersListView.swift"},{"type":"text","text":", add an "},{"type":"codeVoice","code":"onChange(of:)"},{"type":"text","text":" view modifier to the "},{"type":"codeVoice","code":"RemindersListRowView"},{"type":"text","text":", and listen to changes of the "},{"type":"codeVoice","code":"isCompleted"},{"type":"text","text":" property of the current "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-01-RemindersListView-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Inside the closure of the "},{"type":"codeVoice","code":"onChange(of:)"},{"type":"text","text":" view modifier, call the "},{"type":"codeVoice","code":"setCompleted"},{"type":"text","text":" method on the view model, and pass in the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":", and the new value of the "},{"type":"codeVoice","code":"isCompleted"},{"type":"text","text":" property."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When the closure is called, the value of "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" is still the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"previous"}]},{"type":"text","text":" state, which is why you need to set the new state inside the view model’s ’"},{"type":"codeVoice","code":"setCompleted"},{"type":"text","text":" method."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":null,"media":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Run the app, making sure to connect to the Firebase Emulator. Whenever you check off a reminder, this should reflect in Firestore."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"01-mark-reminders-completed-final.mp4"}]},{"anchor":"Edit-reminders","title":"Edit reminders","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Users might sometimes want to edit a reminder, for example to add more details about a certain task. In this section, you will create a dialog for editing existing reminders, connect it to the main list view, and write changes back to Firestore when users commit their changes."}]}],"mediaPosition":"trailing"}],"stepsSection":[{"type":"paragraph","inlineContent":[{"type":"text","text":"First, you will refactor the "},{"type":"codeVoice","code":"AddReminderView"},{"type":"text","text":" so you can use it for adding "},{"type":"emphasis","inlineContent":[{"type":"text","text":"and"}]},{"type":"text","text":" editing reminders."}]},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Open "},{"type":"codeVoice","code":"AddReminderView.swift"},{"type":"text","text":", and select the view’s name. Open the context menu, and choose "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Refactor > Rename"}]},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"04-updating-data-in-cloud-firestore-02-refactor-01.png"},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Xcode will find all occurrences of "},{"type":"codeVoice","code":"AddReminderView"},{"type":"text","text":" and show them in the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"refactoring editor"}]},{"type":"text","text":". Type in the new name for the view, "},{"type":"codeVoice","code":"EditReminderDetailsView"},{"type":"text","text":"."}]}],"caption":[{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If you receive an error message saying that refactoring failed, try building the project first (⌘ + B), and resolve any compilation errors. Then try running the refactoring again."}]}],"type":"aside","name":"Tip"}],"type":"step","runtimePreview":null,"media":"04-updating-data-in-cloud-firestore-02-refactor-02.png"},{"code":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" property public."}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This is so you can pass in a reminder for editing."}]}],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a "},{"type":"codeVoice","code":"Mode"},{"type":"text","text":" enum and a property to determine if the view is being used to add or edit a reminder."}]}],"caption":[{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Make sure to add the property "},{"type":"emphasis","inlineContent":[{"type":"text","text":"before"}]},{"type":"text","text":" the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" property. This is important, as Swift with automatically synthesise a memberwise initialiser for you, and the order of the parameters on the initialiser is identical to the order of the public \/ package visibile properties."}]}],"type":"aside","name":"Note"}],"type":"step","runtimePreview":"","media":null},{"code":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update the view so it displays the correct labels depending on the mode it is in."}]}],"caption":[],"type":"step","runtimePreview":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-03.png","media":null},{"code":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Update the preview provider so you can experience the view in both modes."}]}],"caption":[{"style":"tip","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"You can see the log output of the preview by opening Xcode’s debug console, and then switching to the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Previews"}]},{"type":"text","text":" tab."}]}],"type":"aside","name":"Tip"}],"type":"step","runtimePreview":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-04.png","media":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, you will open the "},{"type":"codeVoice","code":"EditReminderDetailsView"},{"type":"text","text":" in "},{"type":"codeVoice","code":".edit"},{"type":"text","text":" mode when the user taps on a reminder in the "},{"type":"codeVoice","code":"RemindersListView"},{"type":"text","text":"."}]},{"code":"04-updating-data-in-cloud-firestore-02-RemindersListView-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"RemindersListView.swift"},{"type":"text","text":", add a new property to hold the reminder the user taps on."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-02-RemindersListView-02.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add an "},{"type":"codeVoice","code":"onTapGesture"},{"type":"text","text":" view modifier to "},{"type":"codeVoice","code":"RemindersListRowView"},{"type":"text","text":". This will be executed when the user taps on one of the list rows containing a reminder."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-02-RemindersListView-03.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Add a new "},{"type":"codeVoice","code":"sheet"},{"type":"text","text":" modifier to the "},{"type":"codeVoice","code":"List"},{"type":"text","text":" view, and bind it to the "},{"type":"codeVoice","code":"editableReminder"},{"type":"text","text":" property. This will result in the sheet being shown when "},{"type":"codeVoice","code":"editableRemninder"},{"type":"text","text":" is not "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-02-RemindersListView-04.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To present the "},{"type":"codeVoice","code":"EditReminderDetailsView"},{"type":"text","text":" in "},{"type":"codeVoice","code":"edit"},{"type":"text","text":" mode inside the sheet, instantiate it using "},{"type":"codeVoice","code":"mode: .edit"},{"type":"text","text":" and pass in the "},{"type":"codeVoice","code":"reminder"},{"type":"text","text":" from the "},{"type":"codeVoice","code":"sheet"},{"type":"text","text":" view modifier."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-02-RemindersListView-05.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, when then user taps on "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Done"}]},{"type":"text","text":" to commit their changes, the "},{"type":"codeVoice","code":"EditReminderDetailsView"},{"type":"text","text":"’s closure will be called. Inside the closure, call "},{"type":"codeVoice","code":"updateReminder"},{"type":"text","text":" on the view model to update the reminder in Firestore."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":null,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When you now run the app, you can tap on any of the reminders you create in earlier steps, and edit them in the "},{"type":"codeVoice","code":"EditReminderDetailsView"},{"type":"text","text":"."}]}],"caption":[],"type":"step","runtimePreview":null,"media":"04-updating-data-in-cloud-firestore-02-editing-reminders-final.mp4"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You might notice two UX flaws: when tapping on the blank area in a list row, the details dialog doesn’t seem to open, and it would be nice to be able to commit the edit dialog by tapping the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Enter"}]},{"type":"text","text":" key. In the next steps, you will fix these issues."}]},{"code":"04-updating-data-in-cloud-firestore-02-RemindersListRowView-01.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To ensure the user can tap anywhere in a list row to open the details dialog, you need to mark the entire area of the list row as tappable.  In "},{"type":"codeVoice","code":"RemindersListRowView.swift"},{"type":"text","text":", add a "},{"type":"codeVoice","code":"Spacer"},{"type":"text","text":" view to make sure the "},{"type":"codeVoice","code":"HStack"},{"type":"text","text":" consumes the entire available space. Then, use the "},{"type":"codeVoice","code":"contentShape"},{"type":"text","text":" view modifier to mark the entire "},{"type":"codeVoice","code":"HStack"},{"type":"text","text":" as clickable."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null},{"code":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-05.swift","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To commit the "},{"type":"codeVoice","code":"EditReminderDetailsView"},{"type":"text","text":" when the user taps the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Enter"}]},{"type":"text","text":" key, add the "},{"type":"codeVoice","code":"onSubmit"},{"type":"text","text":" view modifier to the "},{"type":"codeVoice","code":"TextField"},{"type":"text","text":", and call the "},{"type":"codeVoice","code":"commit"},{"type":"text","text":" method inside the closure."}]}],"caption":[],"type":"step","runtimePreview":null,"media":null}]}]},{"action":{"overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial","kind":"callToAction","title":"Deleting data from Cloud Firestore","abstract":[{"type":"text","text":"In this chapter of the tutorial, you’ve written code for creating, reading, and updating data in Cloud Firestore. There is one more data operation that is common for many apps: deleting data."}]}],"identifier":{"url":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore","interfaceLanguage":"swift"},"kind":"project","metadata":{"title":"Updating data in Cloud Firestore","categoryPathComponent":"MakeItSo","role":"project","category":"MakeItSo"},"hierarchy":{"modules":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-a-Simple-UI","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-New-Project"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Reminder-Model-and-Add-some-Test-Data"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Display-a-List-of-Reminders"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Mark-Reminders-as-completed"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Dialog-for-Adding-New-Reminders"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Pass-Data-From-the-Child-View"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Present-the-Add-Reminder-Dialog"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Brush-up-the-UI"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Wrap-Up"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Organise-the-Project-Files"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Create-a-View-Model-and-connect-it-to-the-RemindersListView"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-adding-new-reminders"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-Reusable-UI-Components","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Title"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Create-a-Styleable-Toggle","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Create-a-Styleable-Toggle#Title"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Connecting-Your-App-to-Firebase","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Create-a-New-Firebase-Project"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Register-Your-App-with-Firebase"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-a-Firebase-Configuration-File"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-Firebase-SDKs-to-Your-App"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Initialize-Firebase-in-Your-App"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Launch-the-App-to-Verify-Setup"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Install-the-Firebase-CLI"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Launch-the-Emulator-and-view-the-Emulator-dashboard"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-your-app-to-the-Emulator-Suite"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Storing-Data-in-the-Cloud","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Intro-to-Cloud-Firestore","sections":[]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Implement-a-repository"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Implement-a-method-for-adding-new-reminders-to-the-repository"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Conform-Reminder-to-Codable"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Connect-the-view-model-to-the-repository"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Wrap-up"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Implement-a-snapshot-listener"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Manage-the-lifecycle-of-the-snapshot-listener"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Connect-the-view-model"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Run-the-app-to-experience-real-time-sync"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Clean-up"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore#Mark-reminders-as-completed"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore#Edit-reminders"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore#Implement-a-method-for-removing-a-single-reminder-from-the-repository"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore#Add-a-method-for-deleting-reminders-to-the-view-model"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore#Implement-a-swipe-action-for-deleteing-reminders-from-the-list-view"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Dependency-Injection","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Add-the-Factory-SDK-to-your-project"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Make-Firebase-available-via-Dependency-Injection"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Use-Dependency-Injection-to-inject-Firebase-into-your-Repository"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Inject-RemindersRepository-into-RemindersListViewModel"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Wrap-up"}]}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Authenticating-Users","projects":[{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/00-Intro-to-Firebase-Authentication","sections":[]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Download-the-project-files"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Implement-an-AuthenticationService"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Register-AuthenticationService-with-the-Dependency-Injection-container"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Inject-AuthenticationService-into-its-dependants"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Add-a-userId-property-to-the-Reminder-struct"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Update-the-RemindersRepository-to-operate-only-on-the-users-data"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Take-the-app-for-a-spin-and-experience-its-multi-user-capabilities"}]},{"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple","sections":[{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Connect-the-app-to-your-Apple-developer-account"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Enable-the-Sign-in-with-Apple-capability-for-your-app"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Implement-Sign-in-with-Apple"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Sign-in-to-Firebase-and-create-a-new-user-account"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Connect-the-UI"},{"kind":"task","reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Run-the-app"}]}]}],"reference":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo","paths":[["doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo","doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase","doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Storing-Data-in-the-Cloud"]]},"references":{"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Intro-to-Cloud-Firestore":{"role":"article","title":"Cloud Firestore","estimatedTime":"5min","abstract":[{"type":"text","text":"Cloud Firestore is Firebase’s NoSQL cloud database for mobile, web, and server development."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Intro-to-Cloud-Firestore","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/01-intro-to-cloud-firestore"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth":{"role":"project","title":"Implementing guest users with Firebase Anonymous Authentication","estimatedTime":"25min","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-anonymous-auth"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Brush-up-the-UI":{"role":"pseudoSymbol","title":"Brush up the UI","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Brush-up-the-UI","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Brush-up-the-UI"},"04-updating-data-in-cloud-firestore-02-editing-reminders-final.mp4":{"poster":null,"alt":null,"type":"video","identifier":"04-updating-data-in-cloud-firestore-02-editing-reminders-final.mp4","variants":[{"url":"\/videos\/04-updating-data-in-cloud-firestore-02-editing-reminders-final.mp4","traits":["1x","light"]},{"url":"\/videos\/04-updating-data-in-cloud-firestore-02-editing-reminders-final~dark.mp4","traits":["1x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project":{"role":"pseudoSymbol","title":"Use launch arguments to switch between the Emulator and your Firebase project","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Use-launch-arguments-to-switch-between-the-Emulator-and-your-Firebase-project"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Extract-Row-View":{"role":"project","title":"Extracting the Reminder Row Into a Separate View","estimatedTime":"15min","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-extract-row-view"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Wrap-Up":{"role":"pseudoSymbol","title":"Wrap Up","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Wrap-Up","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Wrap-Up"},"04-updating-data-in-cloud-firestore-01-RemindersRepository-01.swift":{"syntax":"swift","content":["import Foundation","import FirebaseFirestore","import FirebaseFirestoreSwift","","public class RemindersRepository: ObservableObject {","","  @Published","  var reminders = [Reminder]()","","  \/\/ (code ommitted for brevity)","","  func addReminder(_ reminder: Reminder) throws {","    try Firestore","      .firestore()","      .collection(Reminder.collectionName)","      .addDocument(from: reminder)","  }","","  func updateReminder(_ reminder: Reminder) throws {","  }","","}"],"fileName":"RemindersRepository.swift","identifier":"04-updating-data-in-cloud-firestore-01-RemindersRepository-01.swift","type":"file","fileType":"swift","highlights":[{"line":19},{"line":20},{"line":21}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Add-Firebase-SDKs-to-Your-App":{"role":"pseudoSymbol","title":"Add Firebase SDKs to Your App","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-Firebase-SDKs-to-Your-App","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Add-Firebase-SDKs-to-Your-App"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Organise-the-Project-Files":{"role":"pseudoSymbol","title":"Organise the Project Files","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Organise-the-Project-Files","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Organise-the-Project-Files"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Implement-a-repository":{"role":"pseudoSymbol","title":"Implement a repository","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Implement-a-repository","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Implement-a-repository"},"doc://com.example.MakeItSo/tutorials/MakeItSo/04-Updating-Data-in-Cloud-Firestore":{"role":"project","title":"Updating data in Cloud Firestore","estimatedTime":"35min","abstract":[{"type":"text","text":"So far, the app you’re building can help you add an keep track of your todos, but you cannot mark them as completed."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/04-updating-data-in-cloud-firestore"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-adding-new-reminders":{"role":"pseudoSymbol","title":"Add a method to the View Model for adding new reminders","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-adding-new-reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Add-a-method-to-the-View-Model-for-adding-new-reminders"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Clean-up":{"role":"pseudoSymbol","title":"Clean-up","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Clean-up","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Clean-up"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Take-the-app-for-a-spin-and-experience-its-multi-user-capabilities":{"role":"pseudoSymbol","title":"Take the app for a spin and experience its multi-user capabilities","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Take-the-app-for-a-spin-and-experience-its-multi-user-capabilities","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Take-the-app-for-a-spin-and-experience-its-multi-user-capabilities"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Launch-the-App-to-Verify-Setup":{"role":"pseudoSymbol","title":"Launch the App to Verify Setup","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Launch-the-App-to-Verify-Setup","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Launch-the-App-to-Verify-Setup"},"hero-intro-to-cloud-firestore.png":{"alt":"","type":"image","identifier":"hero-intro-to-cloud-firestore.png","variants":[{"url":"\/images\/hero-intro-to-cloud-firestore.png","traits":["1x","light"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Update-the-RemindersRepository-to-operate-only-on-the-users-data":{"role":"pseudoSymbol","title":"Update the RemindersRepository to operate only on the user's data","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Update-the-RemindersRepository-to-operate-only-on-the-users-data","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Update-the-RemindersRepository-to-operate-only-on-the-users-data"},"04-updating-data-in-cloud-firestore-02-RemindersListView-05.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListView: View {","  @StateObject","  private var viewModel = RemindersListViewModel()","","  @State","  private var isAddReminderDialogPresented = false","","  @State","  private var editableReminder: Reminder? = nil","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($viewModel.reminders) { $reminder in","      RemindersListRowView(reminder: $reminder)","        .onChange(of: reminder.isCompleted) { newValue in","          viewModel.setCompleted(reminder, isCompleted: newValue)","        }","        .onTapGesture {","          editableReminder = reminder","        }","    }","    .toolbar {","      ToolbarItemGroup(placement: .bottomBar) {","        Button(action: presentAddReminderView) {","          HStack {","            Image(systemName: \"plus.circle.fill\")","            Text(\"New Reminder\")","          }","        }","        Spacer()","      }","    }","    .sheet(isPresented: $isAddReminderDialogPresented) {","      EditReminderDetailsView { reminder in","        viewModel.addReminder(reminder)","      }","    }","    .sheet(item: $editableReminder) { reminder in","      EditReminderDetailsView(mode: .edit, reminder: reminder) { reminder in","        viewModel.updateReminder(reminder)","      }","    }","    .tint(.red)","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      RemindersListView()","        .navigationTitle(\"Reminders\")","    }","  }","}"],"fileName":"RemindersListView.swift","identifier":"04-updating-data-in-cloud-firestore-02-RemindersListView-05.swift","type":"file","fileType":"swift","highlights":[{"line":45}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/05-Deleting-Data-from-Cloud-Firestore#Implement-a-swipe-action-for-deleteing-reminders-from-the-list-view":{"role":"pseudoSymbol","title":"Implement a swipe action for deleteing reminders from the list view","abstract":[{"type":"text","text":"In this chapter of the tutorial, you’ve written code for creating, reading, and updating data in Cloud Firestore. There is one more data operation that is common for many apps: deleting data."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore#Implement-a-swipe-action-for-deleteing-reminders-from-the-list-view","kind":"section","type":"section","url":"\/tutorials\/makeitso\/05-deleting-data-from-cloud-firestore#Implement-a-swipe-action-for-deleteing-reminders-from-the-list-view"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Dependency-Injection-with-Factory":{"role":"project","title":"Dependency Injection with Factory","estimatedTime":"15min","abstract":[{"type":"text","text":"Even though "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MakeItSo"}]},{"type":"text","text":" is a relatively simple app, it consists of quite a few components that need to interact with each other: models, views, view models, repositories, and different backend services like Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-dependency-injection-with-factory"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple#Run-the-app":{"role":"pseudoSymbol","title":"Run the app","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Run-the-app","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-sign-in-with-apple#Run-the-app"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Implement-a-snapshot-listener":{"role":"pseudoSymbol","title":"Implement a snapshot listener","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Implement-a-snapshot-listener","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Implement-a-snapshot-listener"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Download-the-project-files":{"role":"pseudoSymbol","title":"Download the project files","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Download-the-project-files","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Download-the-project-files"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Dependency-Injection-with-Factory#Add-the-Factory-SDK-to-your-project":{"role":"pseudoSymbol","title":"Add the Factory SDK to your project","abstract":[{"type":"text","text":"Even though "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MakeItSo"}]},{"type":"text","text":" is a relatively simple app, it consists of quite a few components that need to interact with each other: models, views, view models, repositories, and different backend services like Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Add-the-Factory-SDK-to-your-project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-dependency-injection-with-factory#Add-the-Factory-SDK-to-your-project"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple":{"role":"project","title":"Sign in with Apple and Firebase Authentication","estimatedTime":"25min","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-sign-in-with-apple"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Launch-the-Emulator-and-view-the-Emulator-dashboard":{"role":"pseudoSymbol","title":"Launch the Emulator and view the Emulator dashboard","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Launch-the-Emulator-and-view-the-Emulator-dashboard","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Launch-the-Emulator-and-view-the-Emulator-dashboard"},"Xcode 14":{"title":"Xcode 14","type":"xcodeRequirement","identifier":"Xcode 14","url":"https:\/\/xcodereleases.com\/"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Wrap-up":{"role":"pseudoSymbol","title":"Wrap up","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Wrap-up","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Wrap-up"},"04-updating-data-in-cloud-firestore-02-RemindersListView-01.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListView: View {","  @StateObject","  private var viewModel = RemindersListViewModel()","","  @State","  private var isAddReminderDialogPresented = false","","  @State","  private var editableReminder: Reminder? = nil","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($viewModel.reminders) { $reminder in","      RemindersListRowView(reminder: $reminder)","        .onChange(of: reminder.isCompleted) { newValue in","          viewModel.setCompleted(reminder, isCompleted: newValue)","        }","    }","    .toolbar {","      ToolbarItemGroup(placement: .bottomBar) {","        Button(action: presentAddReminderView) {","          HStack {","            Image(systemName: \"plus.circle.fill\")","            Text(\"New Reminder\")","          }","        }","        Spacer()","      }","    }","    .sheet(isPresented: $isAddReminderDialogPresented) {","      EditReminderDetailsView { reminder in","        viewModel.addReminder(reminder)","      }","    }","    .tint(.red)","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      RemindersListView()","        .navigationTitle(\"Reminders\")","    }","  }","}"],"fileName":"RemindersListView.swift","identifier":"04-updating-data-in-cloud-firestore-02-RemindersListView-01.swift","type":"file","fileType":"swift","highlights":[{"line":10},{"line":11},{"line":12}]},"04-updating-data-in-cloud-firestore-01-RemindersRepository-02.swift":{"syntax":"swift","content":["import Foundation","import FirebaseFirestore","import FirebaseFirestoreSwift","","public class RemindersRepository: ObservableObject {","","  @Published","  var reminders = [Reminder]()","","  \/\/ (code ommitted for brevity)","","  func addReminder(_ reminder: Reminder) throws {","    try Firestore","      .firestore()","      .collection(Reminder.collectionName)","      .addDocument(from: reminder)","  }","","  func updateReminder(_ reminder: Reminder) throws {","    guard let documentId = reminder.id else {","      fatalError(\"Reminder \\(reminder.title) has no document ID.\")","    }    ","  }","","}"],"fileName":"RemindersRepository.swift","identifier":"04-updating-data-in-cloud-firestore-01-RemindersRepository-02.swift","type":"file","fileType":"swift","highlights":[{"line":20},{"line":21},{"line":22}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Create-a-Reminder-Model-and-Add-some-Test-Data":{"role":"pseudoSymbol","title":"Create a Reminder Model and Add some Test Data","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Reminder-Model-and-Add-some-Test-Data","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Create-a-Reminder-Model-and-Add-some-Test-Data"},"https://firebase.google.com/docs/emulator-suite":{"title":"Firebase Local Emulator Suite","titleInlineContent":[{"type":"text","text":"Firebase Local Emulator Suite"}],"type":"link","identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite","url":"https:\/\/firebase.google.com\/docs\/emulator-suite"},"04-updating-data-in-cloud-firestore-01-RemindersListView-01.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListView: View {","  @StateObject","  private var viewModel = RemindersListViewModel()","","  @State","  private var isAddReminderDialogPresented = false","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($viewModel.reminders) { $reminder in","      RemindersListRowView(reminder: $reminder)","        .onChange(of: reminder.isCompleted) { newValue in","        }","    }","    .toolbar {","      ToolbarItemGroup(placement: .bottomBar) {","        Button(action: presentAddReminderView) {","          HStack {","            Image(systemName: \"plus.circle.fill\")","            Text(\"New Reminder\")","          }","        }","        Spacer()","      }","    }","    .sheet(isPresented: $isAddReminderDialogPresented) {","      AddReminderView { reminder in","        viewModel.addReminder(reminder)","      }","    }","    .tint(.red)","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      RemindersListView()","        .navigationTitle(\"Reminders\")","    }","  }","}"],"fileName":"RemindersListView.swift","identifier":"04-updating-data-in-cloud-firestore-01-RemindersListView-01.swift","type":"file","fileType":"swift","highlights":[{"line":17},{"line":18}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/05-Deleting-Data-from-Cloud-Firestore#Implement-a-method-for-removing-a-single-reminder-from-the-repository":{"role":"pseudoSymbol","title":"Implement a method for removing a single reminder from the repository","abstract":[{"type":"text","text":"In this chapter of the tutorial, you’ve written code for creating, reading, and updating data in Cloud Firestore. There is one more data operation that is common for many apps: deleting data."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore#Implement-a-method-for-removing-a-single-reminder-from-the-repository","kind":"section","type":"section","url":"\/tutorials\/makeitso\/05-deleting-data-from-cloud-firestore#Implement-a-method-for-removing-a-single-reminder-from-the-repository"},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Storing-Data-in-the-Cloud":{"role":"article","title":"Storing Data in the Cloud","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Storing-Data-in-the-Cloud","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/storing-data-in-the-cloud"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time":{"role":"project","title":"Retrieving data from Cloud Firestore in real-time","estimatedTime":"25min","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time"},"04-updating-data-in-cloud-firestore-01-RemindersListViewModel-01.swift":{"syntax":"swift","content":["import Foundation","import Combine","","class RemindersListViewModel: ObservableObject {","  @Published","  var reminders = [Reminder]()","","  @Published","  var errorMessage: String?","","  private var remindersRepository: RemindersRepository =  RemindersRepository()","","  init() {","    remindersRepository","      .$reminders","      .assign(to: &$reminders)","  }","","  func addReminder(_ reminder: Reminder) {","    do {","      try remindersRepository.addReminder(reminder)","      errorMessage = nil","    }","    catch {","      print(error)","      errorMessage = error.localizedDescription","    }","  }","","  func updateReminder(_ reminder: Reminder) {","    remindersRepository.updateReminder(reminder)","  }","","  func toggleCompleted(_ reminder: Reminder) {","    if let index = reminders.firstIndex(where: { $0.id == reminder.id} ) {","      reminders[index].isCompleted.toggle()","    }","  }","}"],"fileName":"RemindersListViewModel.swift","identifier":"04-updating-data-in-cloud-firestore-01-RemindersListViewModel-01.swift","type":"file","fileType":"swift","highlights":[{"line":30},{"line":31},{"line":32},{"line":33}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Building-a-Simple-UI":{"role":"article","title":"Building a Simple UI","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-a-Simple-UI","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/building-a-simple-ui"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Create-a-Styleable-Toggle#Title":{"role":"pseudoSymbol","title":"Title","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Create-a-Styleable-Toggle#Title","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-create-a-styleable-toggle#Title"},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Building-Reusable-UI-Components":{"role":"article","title":"Building Reusable UI Components","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Building-Reusable-UI-Components","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/building-reusable-ui-components"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Connect-your-app-to-the-Emulator-Suite":{"role":"pseudoSymbol","title":"Connect your app to the Emulator Suite","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-your-app-to-the-Emulator-Suite","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Connect-your-app-to-the-Emulator-Suite"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite":{"role":"pseudoSymbol","title":"Connect to your Firebase project and enable the Emulator Suite","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Connect-to-your-Firebase-project-and-enable-the-Emulator-Suite"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder":{"role":"pseudoSymbol","title":"Add a method to the View Model for toggling the completion state of a reminder","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Add-a-method-to-the-View-Model-for-toggling-the-completion-state-of-a-reminder"},"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-03.swift":{"syntax":"swift","content":["import SwiftUI","","struct EditReminderDetailsView: View {","  enum FocusableField: Hashable {","    case title","  }","","  @FocusState","  private var focusedField: FocusableField?","","  enum Mode {","    case add","    case edit","  }","","  var mode: Mode = .add","","  @State","  var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  let onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  private func cancel() {","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","          .focused($focusedField, equals: .title)","      }","      .navigationTitle(mode == .add ? \"New Reminder\" : \"Details\")","      .navigationBarTitleDisplayMode(.inline)","      .toolbar {","        ToolbarItem(placement: .cancellationAction) {","          Button(action: cancel) {","            Text(\"Cancel\")","          }","        }","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(mode == .add ? \"Add\" : \"Done\")","          }","          .disabled(reminder.title.isEmpty)","        }","      }","      .onAppear {","        focusedField = .title","      }","    }","  }","}","","struct EditReminderDetailsView_Previews: PreviewProvider {","  static var previews: some View {","    EditReminderDetailsView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"EditReminderDetailsView.swift","identifier":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-03.swift","type":"file","fileType":"swift","highlights":[{"line":41},{"line":51}]},"04-updating-data-in-cloud-firestore-01-RemindersListView-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListView: View {","  @StateObject","  private var viewModel = RemindersListViewModel()","","  @State","  private var isAddReminderDialogPresented = false","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($viewModel.reminders) { $reminder in","      RemindersListRowView(reminder: $reminder)","        .onChange(of: reminder.isCompleted) { newValue in","          viewModel.setCompleted(reminder, isCompleted: newValue)","        }","    }","    .toolbar {","      ToolbarItemGroup(placement: .bottomBar) {","        Button(action: presentAddReminderView) {","          HStack {","            Image(systemName: \"plus.circle.fill\")","            Text(\"New Reminder\")","          }","        }","        Spacer()","      }","    }","    .sheet(isPresented: $isAddReminderDialogPresented) {","      AddReminderView { reminder in","        viewModel.addReminder(reminder)","      }","    }","    .tint(.red)","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      RemindersListView()","        .navigationTitle(\"Reminders\")","    }","  }","}"],"fileName":"RemindersListView.swift","identifier":"04-updating-data-in-cloud-firestore-01-RemindersListView-02.swift","type":"file","fileType":"swift","highlights":[{"line":18}]},"doc://com.example.MakeItSo/tutorials/MakeItSo":{"role":"overview","title":"SwiftUI and Firebase","abstract":[{"type":"text","text":"Learn how to use Firebase in SwiftUI apps by building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a replica of Apple’s Reminders app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo","kind":"overview","type":"topic","url":"\/tutorials\/makeitso"},"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-04.swift":{"syntax":"swift","content":["import SwiftUI","","struct EditReminderDetailsView: View {","  enum FocusableField: Hashable {","    case title","  }","","  @FocusState","  private var focusedField: FocusableField?","","  enum Mode {","    case add","    case edit","  }","","  var mode: Mode = .add","","  @State","  var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  let onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  private func cancel() {","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","          .focused($focusedField, equals: .title)","      }","      .navigationTitle(mode == .add ? \"New Reminder\" : \"Details\")","      .navigationBarTitleDisplayMode(.inline)","      .toolbar {","        ToolbarItem(placement: .cancellationAction) {","          Button(action: cancel) {","            Text(\"Cancel\")","          }","        }","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(mode == .add ? \"Add\" : \"Done\")","          }","          .disabled(reminder.title.isEmpty)","        }","      }","      .onAppear {","        focusedField = .title","      }","    }","  }","}","","struct EditReminderDetailsView_Previews: PreviewProvider {","  struct Container: View {","    @State var reminder = Reminder.samples[0]","    var body: some View {","      EditReminderDetailsView(mode: .edit, reminder: reminder) { reminder in","        print(\"You edited a reminder: \\(reminder.title)\")","      }","    }","  }","  ","  static var previews: some View {","    EditReminderDetailsView { reminder in","      print(\"You added a reminder: \\(reminder.title)\")","    }","    Container()","  }","}"],"fileName":"EditReminderDetailsView.swift","identifier":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-04.swift","type":"file","fileType":"swift","highlights":[{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71},{"line":72},{"line":73},{"line":74},{"line":75},{"line":76},{"line":77},{"line":78}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Register-Your-App-with-Firebase":{"role":"pseudoSymbol","title":"Register Your App with Firebase","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Register-Your-App-with-Firebase","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Register-Your-App-with-Firebase"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Dependency-Injection-with-Factory#Make-Firebase-available-via-Dependency-Injection":{"role":"pseudoSymbol","title":"Make Firebase available via Dependency Injection","abstract":[{"type":"text","text":"Even though "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MakeItSo"}]},{"type":"text","text":" is a relatively simple app, it consists of quite a few components that need to interact with each other: models, views, view models, repositories, and different backend services like Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Make-Firebase-available-via-Dependency-Injection","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-dependency-injection-with-factory#Make-Firebase-available-via-Dependency-Injection"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Create-a-Dialog-for-Adding-New-Reminders":{"role":"pseudoSymbol","title":"Create a Dialog for Adding New Reminders","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-Dialog-for-Adding-New-Reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Create-a-Dialog-for-Adding-New-Reminders"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Mark-Reminders-as-completed":{"role":"pseudoSymbol","title":"Mark Reminders as completed","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Mark-Reminders-as-completed","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Mark-Reminders-as-completed"},"04-updating-data-in-cloud-firestore-01-RemindersRepository-03.swift":{"syntax":"swift","content":["import Foundation","import FirebaseFirestore","import FirebaseFirestoreSwift","","public class RemindersRepository: ObservableObject {","","  @Published","  var reminders = [Reminder]()","","  \/\/ (code ommitted for brevity)","","  func addReminder(_ reminder: Reminder) throws {","    try Firestore","      .firestore()","      .collection(Reminder.collectionName)","      .addDocument(from: reminder)","  }","","  func updateReminder(_ reminder: Reminder) throws {","    guard let documentId = reminder.id else {","      fatalError(\"Reminder \\(reminder.title) has no document ID.\")","    }","    try Firestore","      .firestore()","      .collection(Reminder.collectionName)","      .document(documentId)","  }","","}"],"fileName":"RemindersRepository.swift","identifier":"04-updating-data-in-cloud-firestore-01-RemindersRepository-03.swift","type":"file","fileType":"swift","highlights":[{"line":22},{"line":23},{"line":24},{"line":25},{"line":26}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore":{"role":"project","title":"Storing data in Cloud Firestore","estimatedTime":"25min","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Display-a-List-of-Reminders":{"role":"pseudoSymbol","title":"Display a List of Reminders","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Display-a-List-of-Reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Display-a-List-of-Reminders"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Register-AuthenticationService-with-the-Dependency-Injection-container":{"role":"pseudoSymbol","title":"Register AuthenticationService with the Dependency Injection container","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Register-AuthenticationService-with-the-Dependency-Injection-container","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Register-AuthenticationService-with-the-Dependency-Injection-container"},"04-updating-data-in-cloud-firestore-01-RemindersRepository-04.swift":{"syntax":"swift","content":["import Foundation","import FirebaseFirestore","import FirebaseFirestoreSwift","","public class RemindersRepository: ObservableObject {","","  @Published","  var reminders = [Reminder]()","","  \/\/ (code ommitted for brevity)","","  func addReminder(_ reminder: Reminder) throws {","    try Firestore","      .firestore()","      .collection(Reminder.collectionName)","      .addDocument(from: reminder)","  }","","  func updateReminder(_ reminder: Reminder) throws {","    guard let documentId = reminder.id else {","      fatalError(\"Reminder \\(reminder.title) has no document ID.\")","    }","    try Firestore","      .firestore()","      .collection(Reminder.collectionName)","      .document(documentId)","      .setData(from: reminder, merge: true)","  }","","}"],"fileName":"RemindersRepository.swift","identifier":"04-updating-data-in-cloud-firestore-01-RemindersRepository-04.swift","type":"file","fileType":"swift","highlights":[{"line":27}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple#Connect-the-app-to-your-Apple-developer-account":{"role":"pseudoSymbol","title":"Connect the app to your Apple developer account","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Connect-the-app-to-your-Apple-developer-account","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-sign-in-with-apple#Connect-the-app-to-your-Apple-developer-account"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Create-a-Styleable-Toggle":{"role":"project","title":"Creating a Styleable Toggle","estimatedTime":"25min","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Create-a-Styleable-Toggle","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-create-a-styleable-toggle"},"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct EditReminderDetailsView: View {","  enum FocusableField: Hashable {","    case title","  }","","  @FocusState","  private var focusedField: FocusableField?","","  enum Mode {","    case add","    case edit","  }","","  var mode: Mode = .add","","  @State","  var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  let onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  private func cancel() {","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","          .focused($focusedField, equals: .title)","      }","      .navigationTitle(\"New Reminder\")","      .navigationBarTitleDisplayMode(.inline)","      .toolbar {","        ToolbarItem(placement: .cancellationAction) {","          Button(action: cancel) {","            Text(\"Cancel\")","          }","        }","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(\"Add\")","          }","          .disabled(reminder.title.isEmpty)","        }","      }","      .onAppear {","        focusedField = .title","      }","    }","  }","}","","struct EditReminderDetailsView_Previews: PreviewProvider {","  static var previews: some View {","    EditReminderDetailsView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"EditReminderDetailsView.swift","identifier":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-02.swift","type":"file","fileType":"swift","highlights":[{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Implement-a-method-for-adding-new-reminders-to-the-repository":{"role":"pseudoSymbol","title":"Implement a method for adding new reminders to the repository","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Implement-a-method-for-adding-new-reminders-to-the-repository","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Implement-a-method-for-adding-new-reminders-to-the-repository"},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Authenticating-Users":{"role":"article","title":"Authenticating Users","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Authenticating-Users","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/authenticating-users"},"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-05.swift":{"syntax":"swift","content":["import SwiftUI","","struct EditReminderDetailsView: View {","  enum FocusableField: Hashable {","    case title","  }","","  @FocusState","  private var focusedField: FocusableField?","","  enum Mode {","    case add","    case edit","  }","","  var mode: Mode = .add","","  @State","  var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  let onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  private func cancel() {","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","          .focused($focusedField, equals: .title)","          .onSubmit {","            commit()","          }","      }","      .navigationTitle(mode == .add ? \"New Reminder\" : \"Details\")","      .navigationBarTitleDisplayMode(.inline)","      .toolbar {","        ToolbarItem(placement: .cancellationAction) {","          Button(action: cancel) {","            Text(\"Cancel\")","          }","        }","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(mode == .add ? \"Add\" : \"Done\")","          }","          .disabled(reminder.title.isEmpty)","        }","      }","      .onAppear {","        focusedField = .title","      }","    }","  }","}","","struct EditReminderDetailsView_Previews: PreviewProvider {","  struct Container: View {","    @State var reminder = Reminder.samples[0]","    var body: some View {","      EditReminderDetailsView(mode: .edit, reminder: reminder) { reminder in","        print(\"You edited a reminder: \\(reminder.title)\")","      }","    }","  }","","  static var previews: some View {","    EditReminderDetailsView { reminder in","      print(\"You added a reminder: \\(reminder.title)\")","    }","    Container()","  }","}"],"fileName":"EditReminderDetailsView.swift","identifier":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-05.swift","type":"file","fileType":"swift","highlights":[{"line":40},{"line":41},{"line":42},{"line":75}]},"04-updating-data-in-cloud-firestore.zip":{"checksum":"1a5f178cc9cb321607ac0749ec6c3a63e9c8dd6d067a7da6191972d1885ccf4444b1c1ae668fe1b8b59373c04c966444a7dd46382ca97162f6f2d6098d98d7d2","type":"download","identifier":"04-updating-data-in-cloud-firestore.zip","url":"\/downloads\/04-updating-data-in-cloud-firestore.zip"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Implement-an-AuthenticationService":{"role":"pseudoSymbol","title":"Implement an AuthenticationService","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Implement-an-AuthenticationService","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Implement-an-AuthenticationService"},"doc://com.example.MakeItSo/tutorials/MakeItSo/04-Updating-Data-in-Cloud-Firestore#Edit-reminders":{"role":"pseudoSymbol","title":"Edit reminders","abstract":[{"type":"text","text":"So far, the app you’re building can help you add an keep track of your todos, but you cannot mark them as completed."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore#Edit-reminders","kind":"section","type":"section","url":"\/tutorials\/makeitso\/04-updating-data-in-cloud-firestore#Edit-reminders"},"doc://com.example.MakeItSo/tutorials/MakeItSo/00-Intro-to-Firebase-Authentication":{"role":"article","title":"Firebase Authenticatioon","estimatedTime":"10min","abstract":[{"type":"text","text":"Firebase Authentication provides backend services, easy-to-use SDKs, and ready-made UI libraries to authenticate users to your app. It supports authentication using passwords, phone numbers, popular federated identity providers like Google, Facebook and Twitter, and more."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/00-Intro-to-Firebase-Authentication","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/00-intro-to-firebase-authentication"},"doc://com.example.MakeItSo/tutorials/MakeItSo/05-Deleting-Data-from-Cloud-Firestore":{"role":"project","title":"Deleting data from Cloud Firestore","estimatedTime":"15min","abstract":[{"type":"text","text":"In this chapter of the tutorial, you’ve written code for creating, reading, and updating data in Cloud Firestore. There is one more data operation that is common for many apps: deleting data."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/05-deleting-data-from-cloud-firestore"},"04-updating-data-in-cloud-firestore-02-RemindersListView-03.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListView: View {","  @StateObject","  private var viewModel = RemindersListViewModel()","","  @State","  private var isAddReminderDialogPresented = false","","  @State","  private var editableReminder: Reminder? = nil","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($viewModel.reminders) { $reminder in","      RemindersListRowView(reminder: $reminder)","        .onChange(of: reminder.isCompleted) { newValue in","          viewModel.setCompleted(reminder, isCompleted: newValue)","        }","        .onTapGesture {","          editableReminder = reminder","        }","    }","    .toolbar {","      ToolbarItemGroup(placement: .bottomBar) {","        Button(action: presentAddReminderView) {","          HStack {","            Image(systemName: \"plus.circle.fill\")","            Text(\"New Reminder\")","          }","        }","        Spacer()","      }","    }","    .sheet(isPresented: $isAddReminderDialogPresented) {","      EditReminderDetailsView { reminder in","        viewModel.addReminder(reminder)","      }","    }","    .sheet(item: $editableReminder) { reminder in","    }","    .tint(.red)","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      RemindersListView()","        .navigationTitle(\"Reminders\")","    }","  }","}"],"fileName":"RemindersListView.swift","identifier":"04-updating-data-in-cloud-firestore-02-RemindersListView-03.swift","type":"file","fileType":"swift","highlights":[{"line":43},{"line":44}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Dependency-Injection-with-Factory#Use-Dependency-Injection-to-inject-Firebase-into-your-Repository":{"role":"pseudoSymbol","title":"Use Dependency Injection to inject Firebase into your Repository","abstract":[{"type":"text","text":"Even though "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MakeItSo"}]},{"type":"text","text":" is a relatively simple app, it consists of quite a few components that need to interact with each other: models, views, view models, repositories, and different backend services like Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Use-Dependency-Injection-to-inject-Firebase-into-your-Repository","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-dependency-injection-with-factory#Use-Dependency-Injection-to-inject-Firebase-into-your-Repository"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple#Implement-Sign-in-with-Apple":{"role":"pseudoSymbol","title":"Implement Sign in with Apple","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Implement-Sign-in-with-Apple","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-sign-in-with-apple#Implement-Sign-in-with-Apple"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Pass-Data-From-the-Child-View":{"role":"pseudoSymbol","title":"Pass Data From the Child View","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Pass-Data-From-the-Child-View","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Pass-Data-From-the-Child-View"},"sectionheader-01-mark-reminders-completed.gif":{"alt":null,"type":"image","identifier":"sectionheader-01-mark-reminders-completed.gif","variants":[{"url":"\/images\/sectionheader-01-mark-reminders-completed@2x.gif","traits":["2x","light"]},{"url":"\/images\/sectionheader-01-mark-reminders-completed~dark@2x.gif","traits":["2x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Add-a-userId-property-to-the-Reminder-struct":{"role":"pseudoSymbol","title":"Add a userId property to the Reminder struct","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Add-a-userId-property-to-the-Reminder-struct","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Add-a-userId-property-to-the-Reminder-struct"},"04-updating-data-in-cloud-firestore-02-refactor-02.png":{"alt":"","type":"image","identifier":"04-updating-data-in-cloud-firestore-02-refactor-02.png","variants":[{"url":"\/images\/04-updating-data-in-cloud-firestore-02-refactor-02.png","traits":["1x","light"]},{"url":"\/images\/04-updating-data-in-cloud-firestore-02-refactor-02~dark.png","traits":["1x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Run-the-app-to-experience-real-time-sync":{"role":"pseudoSymbol","title":"Run the app to experience real-time sync","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Run-the-app-to-experience-real-time-sync","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Run-the-app-to-experience-real-time-sync"},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Manage-the-lifecycle-of-the-snapshot-listener":{"role":"pseudoSymbol","title":"Manage the lifecycle of the snapshot listener","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Manage-the-lifecycle-of-the-snapshot-listener","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Manage-the-lifecycle-of-the-snapshot-listener"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Anonymous-Auth#Inject-AuthenticationService-into-its-dependants":{"role":"pseudoSymbol","title":"Inject AuthenticationService into its dependants","abstract":[{"type":"text","text":"It seems like MakeItSo meets the bar for an MVP (minimum viable product): users can add new reminders, check them off, change their details, and even delete them. But - as you might have noticed when running the app on two different iOS Simulators - the app is not multi-user capable. What’s worse, it seems like all users can see everyone else’s todo items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Anonymous-Auth#Inject-AuthenticationService-into-its-dependants","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-anonymous-auth#Inject-AuthenticationService-into-its-dependants"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Conform-Reminder-to-Codable":{"role":"pseudoSymbol","title":"Conform Reminder to Codable","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Conform-Reminder-to-Codable","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Conform-Reminder-to-Codable"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple#Sign-in-to-Firebase-and-create-a-new-user-account":{"role":"pseudoSymbol","title":"Sign in to Firebase and create a new user account","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Sign-in-to-Firebase-and-create-a-new-user-account","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-sign-in-with-apple#Sign-in-to-Firebase-and-create-a-new-user-account"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI":{"role":"project","title":"Building a Simple Todo List UI","estimatedTime":"25min","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Create-a-New-Project":{"role":"pseudoSymbol","title":"Create a New Project","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Create-a-New-Project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Create-a-New-Project"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Storing-Data-in-Cloud-Firestore#Connect-the-view-model-to-the-repository":{"role":"pseudoSymbol","title":"Connect the view model to the repository","abstract":[{"type":"text","text":"With the UI of the application in place, and Firebase set up for local development, it is now time to store data in the cloud."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Storing-Data-in-Cloud-Firestore#Connect-the-view-model-to-the-repository","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-storing-data-in-cloud-firestore#Connect-the-view-model-to-the-repository"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Building-a-Simple-Todo-List-UI#Present-the-Add-Reminder-Dialog":{"role":"pseudoSymbol","title":"Present the Add Reminder Dialog","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":", a todo list application. You will start by creating a simple UI for displaying todo list items."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Building-a-Simple-Todo-List-UI#Present-the-Add-Reminder-Dialog","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-building-a-simple-todo-list-ui#Present-the-Add-Reminder-Dialog"},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Connecting-Your-App-to-Firebase":{"role":"article","title":"Connecting Your App to Firebase","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Connecting-Your-App-to-Firebase","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/connecting-your-app-to-firebase"},"doc://com.example.MakeItSo/tutorials/MakeItSo/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase/Dependency-Injection":{"role":"article","title":"Dependency Injection","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/Creating-a-Simple-Todo-List-App-with-SwiftUI-and-Firebase\/Dependency-Injection","kind":"article","type":"topic","url":"\/tutorials\/makeitso\/creating-a-simple-todo-list-app-with-swiftui-and-firebase\/dependency-injection"},"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-03.png":{"alt":null,"type":"image","identifier":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-03.png","variants":[{"url":"\/images\/04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-03.png","traits":["1x","light"]}]},"04-updating-data-in-cloud-firestore-02-RemindersListView-02.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListView: View {","  @StateObject","  private var viewModel = RemindersListViewModel()","","  @State","  private var isAddReminderDialogPresented = false","","  @State","  private var editableReminder: Reminder? = nil","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($viewModel.reminders) { $reminder in","      RemindersListRowView(reminder: $reminder)","        .onChange(of: reminder.isCompleted) { newValue in","          viewModel.setCompleted(reminder, isCompleted: newValue)","        }","        .onTapGesture {","          editableReminder = reminder","        }","    }","    .toolbar {","      ToolbarItemGroup(placement: .bottomBar) {","        Button(action: presentAddReminderView) {","          HStack {","            Image(systemName: \"plus.circle.fill\")","            Text(\"New Reminder\")","          }","        }","        Spacer()","      }","    }","    .sheet(isPresented: $isAddReminderDialogPresented) {","      EditReminderDetailsView { reminder in","        viewModel.addReminder(reminder)","      }","    }","    .tint(.red)","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      RemindersListView()","        .navigationTitle(\"Reminders\")","    }","  }","}"],"fileName":"RemindersListView.swift","identifier":"04-updating-data-in-cloud-firestore-02-RemindersListView-02.swift","type":"file","fileType":"swift","highlights":[{"line":23},{"line":24},{"line":25}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple#Connect-the-UI":{"role":"pseudoSymbol","title":"Connect the UI","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Connect-the-UI","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-sign-in-with-apple#Connect-the-UI"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM#Create-a-View-Model-and-connect-it-to-the-RemindersListView":{"role":"pseudoSymbol","title":"Create a View Model and connect it to the RemindersListView","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM#Create-a-View-Model-and-connect-it-to-the-RemindersListView","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-implementing-mvvm#Create-a-View-Model-and-connect-it-to-the-RemindersListView"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Sign-in-with-Apple#Enable-the-Sign-in-with-Apple-capability-for-your-app":{"role":"pseudoSymbol","title":"Enable the Sign in with Apple capability for your app","abstract":[{"type":"text","text":"Your app is now capable of storing data on a per-user basis. You achieved this by implementing Firebase Anonymous Authentication in the previous chapter, and then using the anonymous user’s ID to tag their reminders when storing them in Cloud Firestore."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Sign-in-with-Apple#Enable-the-Sign-in-with-Apple-capability-for-your-app","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-sign-in-with-apple#Enable-the-Sign-in-with-Apple-capability-for-your-app"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Extract-Row-View#Title":{"role":"pseudoSymbol","title":"Title","abstract":[],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Extract-Row-View#Title","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-extract-row-view#Title"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Dependency-Injection-with-Factory#Inject-RemindersRepository-into-RemindersListViewModel":{"role":"pseudoSymbol","title":"Inject RemindersRepository into RemindersListViewModel","abstract":[{"type":"text","text":"Even though "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MakeItSo"}]},{"type":"text","text":" is a relatively simple app, it consists of quite a few components that need to interact with each other: models, views, view models, repositories, and different backend services like Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Inject-RemindersRepository-into-RemindersListViewModel","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-dependency-injection-with-factory#Inject-RemindersRepository-into-RemindersListViewModel"},"doc://com.example.MakeItSo/tutorials/MakeItSo/04-Updating-Data-in-Cloud-Firestore#Mark-reminders-as-completed":{"role":"pseudoSymbol","title":"Mark reminders as completed","abstract":[{"type":"text","text":"So far, the app you’re building can help you add an keep track of your todos, but you cannot mark them as completed."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/04-Updating-Data-in-Cloud-Firestore#Mark-reminders-as-completed","kind":"section","type":"section","url":"\/tutorials\/makeitso\/04-updating-data-in-cloud-firestore#Mark-reminders-as-completed"},"04-updating-data-in-cloud-firestore-02-RemindersListView-04.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListView: View {","  @StateObject","  private var viewModel = RemindersListViewModel()","","  @State","  private var isAddReminderDialogPresented = false","","  @State","  private var editableReminder: Reminder? = nil","","  private func presentAddReminderView() {","    isAddReminderDialogPresented.toggle()","  }","","  var body: some View {","    List($viewModel.reminders) { $reminder in","      RemindersListRowView(reminder: $reminder)","        .onChange(of: reminder.isCompleted) { newValue in","          viewModel.setCompleted(reminder, isCompleted: newValue)","        }","        .onTapGesture {","          editableReminder = reminder","        }","    }","    .toolbar {","      ToolbarItemGroup(placement: .bottomBar) {","        Button(action: presentAddReminderView) {","          HStack {","            Image(systemName: \"plus.circle.fill\")","            Text(\"New Reminder\")","          }","        }","        Spacer()","      }","    }","    .sheet(isPresented: $isAddReminderDialogPresented) {","      EditReminderDetailsView { reminder in","        viewModel.addReminder(reminder)","      }","    }","    .sheet(item: $editableReminder) { reminder in","      EditReminderDetailsView(mode: .edit, reminder: reminder) { reminder in","      }","    }","    .tint(.red)","  }","}","","struct ContentView_Previews: PreviewProvider {","  static var previews: some View {","    NavigationStack {","      RemindersListView()","        .navigationTitle(\"Reminders\")","    }","  }","}"],"fileName":"RemindersListView.swift","identifier":"04-updating-data-in-cloud-firestore-02-RemindersListView-04.swift","type":"file","fileType":"swift","highlights":[{"line":44},{"line":45}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Connect-the-view-model":{"role":"pseudoSymbol","title":"Connect the view model","abstract":[{"type":"text","text":"Now that you’ve implemented a "},{"type":"codeVoice","code":"RemindersRepository"},{"type":"text","text":", and wrote code for storing "},{"type":"codeVoice","code":"Reminder"},{"type":"text","text":"s to Firestore, it is time to retrieve reminders from Firestore, so they can be displayed in the app’s UI."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/03-Retrieving-Data-from-Cloud-Firestore-in-Real-Time#Connect-the-view-model","kind":"section","type":"section","url":"\/tutorials\/makeitso\/03-retrieving-data-from-cloud-firestore-in-real-time#Connect-the-view-model"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite":{"role":"project","title":"Developing locally with the Emulator Suite","estimatedTime":"25min","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Create-a-New-Firebase-Project":{"role":"pseudoSymbol","title":"Create a New Firebase Project ","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Create-a-New-Firebase-Project","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Create-a-New-Firebase-Project"},"04-updating-data-in-cloud-firestore-01-RemindersListViewModel-02.swift":{"syntax":"swift","content":["import Foundation","import Combine","","class RemindersListViewModel: ObservableObject {","  @Published","  var reminders = [Reminder]()","","  @Published","  var errorMessage: String?","","  private var remindersRepository: RemindersRepository =  RemindersRepository()","","  init() {","    remindersRepository","      .$reminders","      .assign(to: &$reminders)","  }","","  func addReminder(_ reminder: Reminder) {","    do {","      try remindersRepository.addReminder(reminder)","      errorMessage = nil","    }","    catch {","      print(error)","      errorMessage = error.localizedDescription","    }","  }","","  func updateReminder(_ reminder: Reminder) {","    do {","      try remindersRepository.updateReminder(reminder)","    }","    catch {","      print(error)","      errorMessage = error.localizedDescription","    }","  }","","  func toggleCompleted(_ reminder: Reminder) {","    if let index = reminders.firstIndex(where: { $0.id == reminder.id} ) {","      reminders[index].isCompleted.toggle()","    }","  }","}"],"fileName":"RemindersListViewModel.swift","identifier":"04-updating-data-in-cloud-firestore-01-RemindersListViewModel-02.swift","type":"file","fileType":"swift","highlights":[{"line":31},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37}]},"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-01.swift":{"syntax":"swift","content":["import SwiftUI","","struct EditReminderDetailsView: View {","  enum FocusableField: Hashable {","    case title","  }","","  @FocusState","  private var focusedField: FocusableField?","","  @State","  var reminder = Reminder(title: \"\")","","  @Environment(\\.dismiss)","  private var dismiss","","  let onCommit: (_ reminder: Reminder) -> Void","","  private func commit() {","    onCommit(reminder)","    dismiss()","  }","","  private func cancel() {","    dismiss()","  }","","  var body: some View {","    NavigationStack {","      Form {","        TextField(\"Title\", text: $reminder.title)","          .focused($focusedField, equals: .title)","      }","      .navigationTitle(\"New Reminder\")","      .navigationBarTitleDisplayMode(.inline)","      .toolbar {","        ToolbarItem(placement: .cancellationAction) {","          Button(action: cancel) {","            Text(\"Cancel\")","          }","        }","        ToolbarItem(placement: .confirmationAction) {","          Button(action: commit) {","            Text(\"Add\")","          }","          .disabled(reminder.title.isEmpty)","        }","      }","      .onAppear {","        focusedField = .title","      }","    }","  }","}","","struct EditReminderDetailsView_Previews: PreviewProvider {","  static var previews: some View {","    EditReminderDetailsView { reminder in","      print(\"You added a new reminder titled \\(reminder.title)\")","    }","  }","}"],"fileName":"EditReminderDetailsView.swift","identifier":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-01.swift","type":"file","fileType":"swift","highlights":[{"line":12}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Developing-Locally-with-the-Emulator-Suite#Install-the-Firebase-CLI":{"role":"pseudoSymbol","title":"Install the Firebase CLI","abstract":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"https:\/\/firebase.google.com\/docs\/emulator-suite"},{"type":"text","text":" is a set of advanced tools for developers looking to build and test apps locally using Cloud Firestore, Realtime Database, Cloud Storage for Firebase, Authentication, Firebase Hosting, Cloud Functions (beta), Pub\/Sub (beta), and Firebase Extensions (beta). It provides a rich user interface to help you get running and prototyping quickly."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Developing-Locally-with-the-Emulator-Suite#Install-the-Firebase-CLI","kind":"section","type":"section","url":"\/tutorials\/makeitso\/02-developing-locally-with-the-emulator-suite#Install-the-Firebase-CLI"},"04-updating-data-in-cloud-firestore-02-refactor-01.png":{"alt":"","type":"image","identifier":"04-updating-data-in-cloud-firestore-02-refactor-01.png","variants":[{"url":"\/images\/04-updating-data-in-cloud-firestore-02-refactor-01.png","traits":["1x","light"]},{"url":"\/images\/04-updating-data-in-cloud-firestore-02-refactor-01~dark.png","traits":["1x","dark"]}]},"04-updating-data-in-cloud-firestore-01-RemindersListViewModel-03.swift":{"syntax":"swift","content":["import Foundation","import Combine","","class RemindersListViewModel: ObservableObject {","  @Published","  var reminders = [Reminder]()","","  @Published","  var errorMessage: String?","","  private var remindersRepository: RemindersRepository =  RemindersRepository()","","  init() {","    remindersRepository","      .$reminders","      .assign(to: &$reminders)","  }","","  func addReminder(_ reminder: Reminder) {","    do {","      try remindersRepository.addReminder(reminder)","      errorMessage = nil","    }","    catch {","      print(error)","      errorMessage = error.localizedDescription","    }","  }","","  func updateReminder(_ reminder: Reminder) {","    do {","      try remindersRepository.updateReminder(reminder)","    }","    catch {","      print(error)","      errorMessage = error.localizedDescription","    }","  }","","  func setCompleted(_ reminder: Reminder, isCompleted: Bool) {","    var editedReminder = reminder","    editedReminder.isCompleted = isCompleted","    updateReminder(editedReminder)","  }","}"],"fileName":"RemindersListViewModel.swift","identifier":"04-updating-data-in-cloud-firestore-01-RemindersListViewModel-03.swift","type":"file","fileType":"swift","highlights":[{"line":40},{"line":41},{"line":42},{"line":43}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Initialize-Firebase-in-Your-App":{"role":"pseudoSymbol","title":"Initialize Firebase in Your App","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Initialize-Firebase-in-Your-App","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Initialize-Firebase-in-Your-App"},"doc://com.example.MakeItSo/tutorials/MakeItSo/05-Deleting-Data-from-Cloud-Firestore#Add-a-method-for-deleting-reminders-to-the-view-model":{"role":"pseudoSymbol","title":"Add a method for deleting reminders to the view model","abstract":[{"type":"text","text":"In this chapter of the tutorial, you’ve written code for creating, reading, and updating data in Cloud Firestore. There is one more data operation that is common for many apps: deleting data."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/05-Deleting-Data-from-Cloud-Firestore#Add-a-method-for-deleting-reminders-to-the-view-model","kind":"section","type":"section","url":"\/tutorials\/makeitso\/05-deleting-data-from-cloud-firestore#Add-a-method-for-deleting-reminders-to-the-view-model"},"doc://com.example.MakeItSo/tutorials/MakeItSo/02-Implementing-MVVM":{"role":"project","title":"Implementing Model, View, ViewModel (MVVM)","estimatedTime":"20min","abstract":[{"type":"text","text":"With the basic views for displaying and adding todo items set up, it is time to think about the architecture of the app."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/02-Implementing-MVVM","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/02-implementing-mvvm"},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project":{"role":"project","title":"Adding Firebase to Your Project","estimatedTime":"25min","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project","kind":"project","type":"topic","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project"},"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-04.png":{"alt":null,"type":"image","identifier":"04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-04.png","variants":[{"url":"\/images\/04-updating-data-in-cloud-firestore-02-EditReminderDetailsView-04.png","traits":["1x","light"]}]},"01-mark-reminders-completed-final.mp4":{"poster":null,"alt":null,"type":"video","identifier":"01-mark-reminders-completed-final.mp4","variants":[{"url":"\/videos\/01-mark-reminders-completed-final.mp4","traits":["1x","light"]},{"url":"\/videos\/01-mark-reminders-completed-final~dark.mp4","traits":["1x","dark"]}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Dependency-Injection-with-Factory#Wrap-up":{"role":"pseudoSymbol","title":"Wrap-up","abstract":[{"type":"text","text":"Even though "},{"type":"emphasis","inlineContent":[{"type":"text","text":"MakeItSo"}]},{"type":"text","text":" is a relatively simple app, it consists of quite a few components that need to interact with each other: models, views, view models, repositories, and different backend services like Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Dependency-Injection-with-Factory#Wrap-up","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-dependency-injection-with-factory#Wrap-up"},"04-updating-data-in-cloud-firestore-02-RemindersListRowView-01.swift":{"syntax":"swift","content":["import SwiftUI","","struct RemindersListRowView: View {","  @Binding","  var reminder: Reminder","","  var body: some View {","    HStack {","      Toggle(isOn: $reminder.isCompleted) { \/* no label, on purpose *\/}","        .toggleStyle(.reminder)","      Text(reminder.title)","      Spacer()","    }","    .contentShape(Rectangle())","  }","}","","struct RemindersListRowView_Previews: PreviewProvider {","  struct Container: View {","    @State var reminder = Reminder.samples[0]","    var body: some View {","      List {","        RemindersListRowView(reminder: $reminder)","      }","    }","  }","","  static var previews: some View {","    NavigationStack {","      Container()","        .listStyle(.plain)","        .navigationTitle(\"Reminder\")","    }","  }","}"],"fileName":"RemindersListRowView.swift","identifier":"04-updating-data-in-cloud-firestore-02-RemindersListRowView-01.swift","type":"file","fileType":"swift","highlights":[{"line":12},{"line":14}]},"doc://com.example.MakeItSo/tutorials/MakeItSo/01-Adding-Firebase-to-Your-Project#Add-a-Firebase-Configuration-File":{"role":"pseudoSymbol","title":"Add a Firebase Configuration File","abstract":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Make It So"}]},{"type":"text","text":" keeps a list of the user’s todo items, and stores them in Cloud Firestore. Before the app can store information in the cloud, you need to connect your project to Firebase."}],"identifier":"doc:\/\/com.example.MakeItSo\/tutorials\/MakeItSo\/01-Adding-Firebase-to-Your-Project#Add-a-Firebase-Configuration-File","kind":"section","type":"section","url":"\/tutorials\/makeitso\/01-adding-firebase-to-your-project#Add-a-Firebase-Configuration-File"}}}