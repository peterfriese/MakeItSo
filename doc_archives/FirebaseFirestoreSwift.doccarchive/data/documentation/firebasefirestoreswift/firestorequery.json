{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FirestoreQuery"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["iOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In the following example, "},{"type":"codeVoice","code":"FirestoreQuery"},{"type":"text","text":" will fetch all documents from the"},{"type":"text","text":" "},{"type":"codeVoice","code":"fruits"},{"type":"text","text":" collection, filtering only documents whose "},{"type":"codeVoice","code":"isFavourite"},{"type":"text","text":" attribute"},{"type":"text","text":" "},{"type":"text","text":"is equal to "},{"type":"codeVoice","code":"true"},{"type":"text","text":", map members of result set to the "},{"type":"codeVoice","code":"Fruit"},{"type":"text","text":" type, and make"},{"type":"text","text":" "},{"type":"text","text":"them available via the wrapped value "},{"type":"codeVoice","code":"fruits"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":null,"code":["struct ContentView: View {","  @FirestoreQuery(","    collectionPath: \"fruits\",","    predicates: [.whereField(\"isFavourite\", isEqualTo: true)]","  ) var fruits: [Fruit]","","  var body: some View {","    List(fruits) { fruit in","      Text(fruit.name)","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"FirestoreQuery"},{"type":"text","text":" also supports returning a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" type. The "},{"type":"codeVoice","code":".success"},{"type":"text","text":" case"},{"type":"text","text":" "},{"type":"text","text":"returns an array of elements, whereas the "},{"type":"codeVoice","code":".failure"},{"type":"text","text":" case returns an error"},{"type":"text","text":" "},{"type":"text","text":"in case mapping the Firestore docments wasn’t successful:"}]},{"type":"codeListing","syntax":null,"code":["struct ContentView: View {","  @FirestoreQuery(","    collectionPath: \"fruits\",","    predicates: [.whereField(\"isFavourite\", isEqualTo: true)]","  ) var fruitResults: Result<[Fruit], Error>","","var body: some View {","  if case let .success(fruits) = fruitResults {","    List(fruits) { fruit in","      Text(fruit.name)","    }","  } else if case let .failure(error) = fruitResults {","    Text(\"Couldn't map data: \\(error.localizedDescription)\")","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Alternatively, the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"projected value"}]},{"type":"text","text":" of the property wrapper provides access to"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"error"},{"type":"text","text":" as well. This allows you to display a list of all successfully mapped"},{"type":"text","text":" "},{"type":"text","text":"documents, as well as an error message with details about the documents that couldn’t"},{"type":"text","text":" "},{"type":"text","text":"be mapped successfully (e.g. because of a field name mismatch)."}]},{"type":"codeListing","syntax":null,"code":["struct ContentView: View {","  @FirestoreQuery(","    collectionPath: \"mappingFailure\",","    decodingFailureStrategy: .ignore","  ) private var fruits: [Fruit]","","  var body: some View {","    VStack(alignment: .leading) {","      List(fruits) { fruit in","        Text(fruit.name)","      }","      if $fruits.error != nil {","        HStack {","          Text(\"There was an error\")","            .foregroundColor(Color(UIColor.systemBackground))","          Spacer()","        }","        .padding(30)","        .background(Color.red)","      }","    }","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Internally, "},{"type":"codeVoice","code":"@FirestoreQuery"},{"type":"text","text":" sets up a snapshot listener and publishes"},{"type":"text","text":" "},{"type":"text","text":"any incoming changes via an "},{"type":"codeVoice","code":"@StateObject"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The projected value of this property wrapper provides access to a"},{"type":"text","text":" "},{"type":"text","text":"configuration object of type "},{"type":"codeVoice","code":"FirestoreQueryConfiguration"},{"type":"text","text":" which can be used"},{"type":"text","text":" "},{"type":"text","text":"to modify the query criteria. Changing the filter predicates results in the"},{"type":"text","text":" "},{"type":"text","text":"underlying snapshot listener being unregistered and a new one registered."}]},{"type":"codeListing","syntax":null,"code":["Button(\"Show only Apples and Oranges\") {","  $fruits.predicates = [.whereField(\"name\", isIn: [\"Apple\", \"Orange]]","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This property wrapper does not support updating the "},{"type":"codeVoice","code":"wrappedValue"},{"type":"text","text":", i.e."},{"type":"text","text":" "},{"type":"text","text":"you need to use Firestore’s other APIs to add, delete, or modify documents."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/firebasefirestoreswift\/firestorequery"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/FirebaseFirestoreSwift\/7SwiftUI15DynamicPropertyP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A property wrapper that listens to a Firestore collection."}],"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"FirestoreQuery"}],"role":"symbol","title":"FirestoreQuery","roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FirestoreQuery"}],"symbolKind":"struct","externalID":"s:22FirebaseFirestoreSwift0B5QueryV","modules":[{"name":"FirebaseFirestoreSwift"}],"platforms":[{"beta":false,"unavailable":false,"name":"iOS","introducedAt":"14.0","deprecated":false},{"beta":false,"unavailable":false,"name":"macOS","introducedAt":"11.0","deprecated":false},{"beta":false,"unavailable":false,"name":"Mac Catalyst","introducedAt":"14.0","deprecated":false},{"beta":false,"unavailable":false,"name":"tvOS","introducedAt":"14.0","deprecated":false},{"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"7.0","deprecated":false}]},"hierarchy":{"paths":[["doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift"]]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery\/Configuration"]},{"title":"Initializers","identifiers":["doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery\/init(collectionPath:predicates:decodingFailureStrategy:)-3iyjt","doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery\/init(collectionPath:predicates:decodingFailureStrategy:)-588ys"]},{"title":"Instance Properties","identifiers":["doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery\/projectedValue","doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery\/wrappedValue"]},{"title":"Default Implementations","identifiers":["doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery\/DynamicProperty-Implementations"],"generated":true}],"references":{"doc://FirebaseFirestoreSwift/documentation/FirebaseFirestoreSwift/FirestoreQuery/init(collectionPath:predicates:decodingFailureStrategy:)-3iyjt":{"role":"symbol","title":"init(collectionPath:predicates:decodingFailureStrategy:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">("},{"kind":"externalParam","text":"collectionPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"predicates"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"QueryPredicate","preciseIdentifier":"s:22FirebaseFirestoreSwift14QueryPredicateO"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"decodingFailureStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DecodingFailureStrategy","preciseIdentifier":"s:22FirebaseFirestoreSwift23DecodingFailureStrategyO"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates an instance by defining a query based on the parameters."}],"identifier":"doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery\/init(collectionPath:predicates:decodingFailureStrategy:)-3iyjt","kind":"symbol","type":"topic","url":"\/documentation\/firebasefirestoreswift\/firestorequery\/init(collectionpath:predicates:decodingfailurestrategy:)-3iyjt"},"doc://FirebaseFirestoreSwift/documentation/FirebaseFirestoreSwift/FirestoreQuery/init(collectionPath:predicates:decodingFailureStrategy:)-588ys":{"role":"symbol","title":"init(collectionPath:predicates:decodingFailureStrategy:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"U"},{"kind":"text","text":">("},{"kind":"externalParam","text":"collectionPath"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"predicates"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"QueryPredicate","preciseIdentifier":"s:22FirebaseFirestoreSwift14QueryPredicateO"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"decodingFailureStrategy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DecodingFailureStrategy","preciseIdentifier":"s:22FirebaseFirestoreSwift23DecodingFailureStrategyO"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Creates an instance by defining a query based on the parameters."}],"identifier":"doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery\/init(collectionPath:predicates:decodingFailureStrategy:)-588ys","kind":"symbol","type":"topic","url":"\/documentation\/firebasefirestoreswift\/firestorequery\/init(collectionpath:predicates:decodingfailurestrategy:)-588ys"},"doc://FirebaseFirestoreSwift/documentation/FirebaseFirestoreSwift/FirestoreQuery/projectedValue":{"role":"symbol","title":"projectedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Configuration","preciseIdentifier":"s:22FirebaseFirestoreSwift0B5QueryV13ConfigurationV"}],"abstract":[{"type":"text","text":"A binding to the request’s mutable configuration properties"}],"identifier":"doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery\/projectedValue","kind":"symbol","type":"topic","url":"\/documentation\/firebasefirestoreswift\/firestorequery\/projectedvalue"},"doc://FirebaseFirestoreSwift/documentation/FirebaseFirestoreSwift":{"role":"collection","title":"FirebaseFirestoreSwift","abstract":[],"identifier":"doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift","kind":"symbol","type":"topic","url":"\/documentation\/firebasefirestoreswift"},"doc://FirebaseFirestoreSwift/documentation/FirebaseFirestoreSwift/FirestoreQuery":{"role":"symbol","title":"FirestoreQuery","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FirestoreQuery"}],"abstract":[{"type":"text","text":"A property wrapper that listens to a Firestore collection."}],"identifier":"doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FirestoreQuery"}],"url":"\/documentation\/firebasefirestoreswift\/firestorequery"},"doc://FirebaseFirestoreSwift/documentation/FirebaseFirestoreSwift/FirestoreQuery/wrappedValue":{"role":"symbol","title":"wrappedValue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T","preciseIdentifier":"s:22FirebaseFirestoreSwift0B5QueryV1Txmfp"}],"abstract":[{"type":"text","text":"The results of the query."}],"identifier":"doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery\/wrappedValue","kind":"symbol","type":"topic","url":"\/documentation\/firebasefirestoreswift\/firestorequery\/wrappedvalue"},"doc://FirebaseFirestoreSwift/documentation/FirebaseFirestoreSwift/FirestoreQuery/DynamicProperty-Implementations":{"role":"collectionGroup","title":"DynamicProperty Implementations","abstract":[],"identifier":"doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery\/DynamicProperty-Implementations","kind":"article","type":"topic","url":"\/documentation\/firebasefirestoreswift\/firestorequery\/dynamicproperty-implementations"},"doc://FirebaseFirestoreSwift/7SwiftUI15DynamicPropertyP":{"type":"unresolvable","title":"SwiftUI.DynamicProperty","identifier":"doc:\/\/FirebaseFirestoreSwift\/7SwiftUI15DynamicPropertyP"},"doc://FirebaseFirestoreSwift/documentation/FirebaseFirestoreSwift/FirestoreQuery/Configuration":{"role":"symbol","title":"FirestoreQuery.Configuration","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Configuration"}],"abstract":[{"type":"text","text":"The query’s configurable properties."}],"identifier":"doc:\/\/FirebaseFirestoreSwift\/documentation\/FirebaseFirestoreSwift\/FirestoreQuery\/Configuration","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Configuration"}],"url":"\/documentation\/firebasefirestoreswift\/firestorequery\/configuration"}}}